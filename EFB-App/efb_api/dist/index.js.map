{
  "version": 3,
  "sources": ["global-externals:@microsoft/msfs-sdk", "../src/AppLifecycle.ts", "../src/App.tsx", "../src/AppView/AppContainer.tsx", "../src/utils/Array.ts", "../src/utils/Components.ts", "../src/utils/Date.ts", "../src/utils/FacilityUtils.ts", "../src/utils/FlightPhaseManager.ts", "../src/sub/MapSubject.ts", "../src/sub/SubscribableMapFunctions.ts", "../src/utils/GameModeManager.ts", "../src/utils/MetadataReader/MetadataReader.ts", "../src/utils/NotificationUtils.ts", "../src/utils/Promise.ts", "../src/utils/SettingsUtils.ts", "../src/utils/Stopwatch.ts", "../src/utils/Unit.ts", "../src/utils/Valuable.ts", "../src/utils/index.ts", "../src/AppView/AppView.tsx", "../../node_modules/.pnpm/typescript-memoize@1.1.1/node_modules/typescript-memoize/src/memoize-decorator.ts", "../src/AppView/AppViewService.tsx", "../src/UiView/GamepadUiView.tsx", "../src/Gamepad/GamepadEvents.ts", "../src/Gamepad/GamepadUiComponent.tsx", "../src/Gamepad/GamepadUiParser.ts", "../src/UiView/UiView.tsx", "../src/UiView/UiViewLifecycle.ts", "../src/Components/Accordion/AbstractAccordion.tsx", "../src/Components/Accordion/AccordionButton.tsx", "../src/Components/Button/Button.tsx", "../src/Components/Button/DropdownButton.tsx", "../src/i18n/TT.tsx", "../src/Components/List/List.tsx", "../src/Components/List/PagingList.tsx", "../src/Components/List/ScrollBar.tsx", "../src/Components/Button/IconButton.tsx", "../src/Components/IconElement/IconElement.tsx", "../src/Components/Button/MultipleButtons.tsx", "../src/Components/Button/SelectableButton.tsx", "../src/Components/Button/TypedButton.tsx", "../src/Components/Button/TTButton.tsx", "../src/Components/Button/TabSelector.tsx", "../src/Components/Accordion/ElementAccordion.tsx", "../src/Components/Accordion/StringAccordion.tsx", "../src/Components/Date/DateDisplay.tsx", "../src/Components/Facility/RunwaySelector/RunwaySelector.tsx", "../src/Components/Incremental/Incremental.tsx", "../src/Components/Input/TextBox.tsx", "../src/Listeners/InputsListener.ts", "../src/Components/Input/Input.tsx", "../src/Components/Input/UnitBox.tsx", "../src/Components/Input/UnitsBox.tsx", "../src/Components/NumberUnitDisplay/NumberUnitDisplay.tsx", "../src/Components/Progress/CircularProgress.tsx", "../src/Components/Progress/Progress.tsx", "../src/Components/Progress/ProgressBar.tsx", "../src/Components/SearchBar/SearchBar.tsx", "../src/Components/SearchFacility/SearchFacility.tsx", "../src/utils/FacilitySearchUtils.ts", "../src/Components/SearchFacility/FacilityResultItem.tsx", "../src/Components/SearchFacility/SearchFacilityHistoryManager.ts", "../src/Components/Slider/Slider.tsx", "../src/Components/Switch/Switch.tsx", "../src/Components/Tag/Tag.tsx", "../src/Components/TextArea/TextArea.tsx", "../src/Components/Timer/Timer.tsx", "../src/Components/Tooltip/Tooltip.tsx", "../src/EfbApi.ts", "../src/Managers/NotificationManager/NotificationManager.ts", "../src/Managers/OnboardingManager/OnboardingManager.ts", "../src/Settings/UnitsSettingsManager.ts", "../src/Settings/UnitsSettings.ts", "../src/Settings/EfbSettingsManager.ts", "../src/Settings/EfbSettingsSaveManager.ts", "../src/ViewService/ViewService.tsx", "../src/ViewService/ViewContainer.tsx", "../src/ViewService/ViewWrapper.tsx", "../src/ViewService/ViewServiceMenu.tsx"],
  "sourcesContent": ["module.exports = msfssdk;", "/**\r\n * Define the behavior when the app is booted\r\n */\r\nexport enum AppBootMode {\r\n\t/** No JSX created until app is launched. */\r\n\tCOLD,\r\n\t/** App JSX is created but not mounted in EFB. */\r\n\tWARM,\r\n\t/** All JSX is created and mounted. */\r\n\tHOT,\r\n}\r\n\r\n/**\r\n * Define the behavior when the app is leaved\r\n */\r\nexport enum AppSuspendMode {\r\n\t/** When leaving app, it goes to sleep. */\r\n\tSLEEP,\r\n\t/** When leaving app, the whole app is destroyed. */\r\n\tTERMINATE,\r\n}\r\n", "import { EventBus, NodeInstance } from '@microsoft/msfs-sdk';\r\nimport { AppBootMode, AppSuspendMode } from './AppLifecycle';\r\nimport { AppView } from './AppView';\r\nimport { NotificationManager } from './Managers';\r\nimport { OnboardingManager } from './Managers/OnboardingManager/OnboardingManager';\r\nimport { EfbSettingsManager, UnitsSettingsManager } from './Settings';\r\nimport { TVNode } from './types';\r\n\r\nexport interface IApp<T extends object = object> {\r\n\tBootMode: AppBootMode;\r\n\tSuspendMode: AppSuspendMode;\r\n\r\n\t_install(props: AppInstallProps<T>): Promise<void>;\r\n\tinstall(props: AppInstallProps<T>): Promise<void>;\r\n\r\n\tget internalName(): string;\r\n\tget unitsSettingsManager(): UnitsSettingsManager;\r\n\tget favoriteIndex(): number;\r\n\tset favoriteIndex(index: number);\r\n\tget name(): string;\r\n\tget icon(): string;\r\n\r\n\t//onInit(): void;\r\n\r\n\t// TODO : check type of app(lication/plugin)ViewService\r\n\t//registerViews(appViewService: unknown): Promise<void>;\r\n\r\n\trender(): TVNode<AppView & NodeInstance>;\r\n}\r\n\r\nexport interface AppConstructor<T extends object = object> {\r\n\tnew (): App<T>;\r\n}\r\n\r\nexport interface AppInstallProps<T extends object = object> {\r\n\tbus: EventBus;\r\n\tunitsSettingManager?: UnitsSettingsManager;\r\n\tefbSettingsManager?: EfbSettingsManager;\r\n\tnotificationManager?: NotificationManager;\r\n\tonboardingManager?: OnboardingManager;\r\n\tfavoriteIndex?: number;\r\n\toptions: T;\r\n}\r\n\r\n/**\r\n * ```\r\n * Class that all Apps must extends to be registered.\r\n * It is used to setup how the app is working.\r\n * ```\r\n * @template T App options. ie : you need multiple instance of an App with different styles for development.\r\n */\r\nexport abstract class App<T extends object = object> implements IApp<T> {\r\n\tprivate _isInstalled = false;\r\n\tprivate _isReady = false;\r\n\tprivate _unitsSettingsManager?: UnitsSettingsManager;\r\n\tprivate _efbSettingsManager?: EfbSettingsManager;\r\n\tprivate _notificationManager?: NotificationManager;\r\n\tprivate _onboardingManager?: OnboardingManager;\r\n\tprivate _favoriteIndex = -1;\r\n\r\n\tprotected bus!: EventBus;\r\n\tprotected options!: T;\r\n\r\n\t/**\r\n\t * Desired AppBootMode\r\n\t * @defaultValue > `AppBootMode.COLD`\r\n\t */\r\n\tpublic BootMode: AppBootMode = AppBootMode.COLD;\r\n\r\n\t/**\r\n\t * Desired AppSuspendMode\r\n\t * @defaultValue > `AppSuspendMode.SLEEP`\r\n\t */\r\n\tpublic SuspendMode: AppSuspendMode = AppSuspendMode.SLEEP;\r\n\r\n\t/**\r\n\t * @param props\r\n\t * @internal\r\n\t */\r\n\tpublic async _install(props: AppInstallProps<T>): Promise<void> {\r\n\t\tif (this._isInstalled) {\r\n\t\t\treturn Promise.reject('App already installed.');\r\n\t\t}\r\n\r\n\t\tthis._isInstalled = true;\r\n\t\tthis.bus = props.bus;\r\n\t\tthis._unitsSettingsManager = props.unitsSettingManager;\r\n\t\tthis._efbSettingsManager = props.efbSettingsManager;\r\n\t\tthis._notificationManager = props.notificationManager;\r\n\t\tthis._onboardingManager = props.onboardingManager;\r\n\t\tthis._favoriteIndex = props.favoriteIndex ?? -1;\r\n\t\tthis.options = props.options;\r\n\r\n\t\tawait this.install(props);\r\n\r\n\t\tthis._isReady = true;\r\n\r\n\t\treturn Promise.resolve();\r\n\t}\r\n\r\n\t/**\r\n\t * Install hook\r\n\t * @param props\r\n\t */\r\n\tpublic async install(props: AppInstallProps<T>): Promise<void> {\r\n\t\treturn Promise.resolve();\r\n\t}\r\n\r\n\t/** Boolean to check if app is loaded and installed. */\r\n\tpublic get isReady(): boolean {\r\n\t\treturn this._isReady;\r\n\t}\r\n\r\n\t/**\r\n\t * Internal app name\r\n\t * @defaultValue > Class's name (`this.constructor.name`)\r\n\t */\r\n\tpublic get internalName(): string {\r\n\t\treturn this.constructor.name;\r\n\t}\r\n\r\n\t/**\r\n\t * EFB units settings manager\r\n\t * @returns a unique unitsSettingsManager instance\r\n\t */\r\n\tpublic get unitsSettingsManager(): UnitsSettingsManager {\r\n\t\tconst unitsSettingsManager = this._unitsSettingsManager;\r\n\r\n\t\tif (!unitsSettingsManager) {\r\n\t\t\tthrow new Error('Units settings manager is not defined');\r\n\t\t}\r\n\r\n\t\treturn unitsSettingsManager;\r\n\t}\r\n\r\n\t/**\r\n\t * EFB settings manager\r\n\t * @returns a unique efbSettingsManager instance\r\n\t */\r\n\tpublic get efbSettingsManager(): EfbSettingsManager {\r\n\t\tconst efbSettingsManager = this._efbSettingsManager;\r\n\r\n\t\tif (!efbSettingsManager) {\r\n\t\t\tthrow new Error('EFB settings manager is not defined');\r\n\t\t}\r\n\r\n\t\treturn efbSettingsManager;\r\n\t}\r\n\r\n\t/**\r\n\t * EFB notification manager\r\n\t * @returns a unique efbNotificationManager instance\r\n\t */\r\n\tpublic get notificationManager(): NotificationManager {\r\n\t\tconst notificationManager = this._notificationManager;\r\n\r\n\t\tif (!notificationManager) {\r\n\t\t\tthrow new Error('Notification manager is not defined');\r\n\t\t}\r\n\r\n\t\treturn notificationManager;\r\n\t}\r\n\r\n\t/** Onboarding manager */\r\n\tpublic get onboardingManager(): OnboardingManager {\r\n\t\tconst onboardingManager = this._onboardingManager;\r\n\r\n\t\tif (!onboardingManager) {\r\n\t\t\tthrow new Error('Onboarding manager is not defined');\r\n\t\t}\r\n\r\n\t\treturn onboardingManager;\r\n\t}\r\n\r\n\t/** @internal */\r\n\tpublic get favoriteIndex(): number {\r\n\t\treturn this._favoriteIndex;\r\n\t}\r\n\r\n\t/** @internal */\r\n\tpublic set favoriteIndex(index: number) {\r\n\t\tthis._favoriteIndex = index;\r\n\t}\r\n\r\n\t/** App friendly name (shown on the App List) */\r\n\tpublic abstract get name(): string;\r\n\r\n\t/** App icon (must return an uri) */\r\n\tpublic abstract get icon(): string;\r\n\r\n\t/** Must render an extended AppView for the App */\r\n\tpublic abstract render(): TVNode<AppView>;\r\n}\r\n", "import { ComponentProps, DisplayComponent, FSComponent, VNode } from '@microsoft/msfs-sdk';\r\nimport { AppViewService } from './AppViewService';\r\nimport { ClassProp } from '../types';\r\nimport { mergeClassProp } from '../utils';\r\n\r\n/** A Container for an App viewstack */\r\nexport interface AppViewContainer {\r\n\t/**\r\n\t * Renders a view into this container.\r\n\t * @param view An AppView as a node\r\n\t */\r\n\trenderView(view: VNode): void;\r\n}\r\n\r\nexport interface AppContainerProps extends ComponentProps {\r\n\t/** The AppViewService instance */\r\n\tappViewService: AppViewService;\r\n}\r\n\r\nexport class AppContainer extends DisplayComponent<AppContainerProps> {\r\n\tprivate readonly appMainRef = FSComponent.createRef<HTMLDivElement>();\r\n\r\n\tprivate readonly appStackRef = FSComponent.createRef<DefaultAppViewStackContainer>();\r\n\r\n\tpublic onAfterRender(node: VNode): void {\r\n\t\tsuper.onAfterRender(node);\r\n\r\n\t\tthis.props.appViewService.onAppContainerRendered(this.appStackRef.instance);\r\n\t}\r\n\r\n\tpublic render(): VNode | null {\r\n\t\treturn (\r\n\t\t\t<div ref={this.appMainRef} class={`app-container`}>\r\n\t\t\t\t<DefaultAppViewStackContainer ref={this.appStackRef} />\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\ninterface AppViewStackContainerProps extends ComponentProps {\r\n\t/** CSS class(es) to apply to the root of the container. */\r\n\tclass?: ClassProp;\r\n}\r\n\r\nclass DefaultAppViewStackContainer extends DisplayComponent<AppViewStackContainerProps> implements AppViewContainer {\r\n\tprivate readonly rootRef = FSComponent.createRef<HTMLDivElement>();\r\n\r\n\tpublic renderView(view: VNode): void {\r\n\t\tFSComponent.render(view, this.rootRef.instance);\r\n\t}\r\n\r\n\tpublic render(): VNode {\r\n\t\treturn <div ref={this.rootRef} class={mergeClassProp('app-view-stack', this.props.class)}></div>;\r\n\t}\r\n}\r\n", "/**\r\n * @param collection array to filter\r\n * @returns unique array\r\n */\r\nexport function unique<T>(collection: T[]): T[] {\r\n\treturn collection.reduce((acc: T[], item: T) => {\r\n\t\tif (!acc.includes(item)) {\r\n\t\t\tacc.push(item);\r\n\t\t}\r\n\r\n\t\treturn acc;\r\n\t}, []);\r\n}\r\n\r\n/**\r\n * @param collection array to group\r\n * @param iteratee function or key of array\r\n * @returns grouped array\r\n */\r\nexport function groupBy<\r\n\tT,\r\n\tRetType extends keyof T | PropertyKey,\r\n\tFunc extends (value: T) => RetType = (value: T) => RetType\r\n>(collection: readonly T[], iteratee: RetType | Func): Record<RetType, T[]> {\r\n\treturn collection.reduce((accumulator, value) => {\r\n\t\tlet key = String(typeof iteratee === 'function' ? iteratee(value) : iteratee);\r\n\t\tif (value && typeof value === 'object' && key in value) {\r\n\t\t\tkey = String((value as never)[key]);\r\n\t\t}\r\n\r\n\t\tif (Object.prototype.hasOwnProperty.call(accumulator, key)) {\r\n\t\t\taccumulator[key].push(value);\r\n\t\t} else {\r\n\t\t\taccumulator[key] = [value];\r\n\t\t}\r\n\r\n\t\treturn accumulator;\r\n\t}, {} as Record<RetType, T[]>);\r\n}\r\n\r\nexport function random<T>(collection: readonly T[]): undefined | T {\r\n\tconst length = collection.length;\r\n\treturn length ? collection[Math.floor(Math.random() * length)] : undefined;\r\n}\r\n", "import { ToggleableClassNameRecord, VNode } from '@microsoft/msfs-sdk';\r\nimport { IApp } from '../App';\r\nimport { ClassProp } from '../types';\r\n\r\nexport function isVNode(object: object): object is VNode {\r\n\treturn 'instance' in object && 'props' in object && 'children' in object;\r\n}\r\n\r\nexport function isIApp(object: object): object is IApp {\r\n\treturn 'internalName' in object && 'BootMode' in object;\r\n}\r\n\r\nexport function isConstructor(func: object): boolean {\r\n\treturn typeof func === 'function' && !!func.prototype && func.prototype.constructor === func;\r\n}\r\n\r\n/**\r\n * Check if argument `fn` is a function.\r\n * @template T Expected type of `fn`.\r\n * @param value\r\n */\r\nexport function isFunction<T = unknown>(fn: unknown): fn is T {\r\n\treturn typeof fn === 'function';\r\n}\r\n\r\nexport function toArray(list: unknown[], start = 0): unknown[] {\r\n\tlet i = list.length - start;\r\n\tconst ret: unknown[] = new Array(i);\r\n\r\n\twhile (i--) {\r\n\t\tret[i] = list[i + start];\r\n\t}\r\n\r\n\treturn ret;\r\n}\r\n\r\n/**\r\n * @param classProp Convert {string} to {ToggleableClassNameRecord}\r\n * @returns Converted ClassProp\r\n */\r\nexport function toClassProp(classProp: ClassProp): undefined | ToggleableClassNameRecord {\r\n\tif (classProp === undefined) {\r\n\t\treturn classProp;\r\n\t}\r\n\r\n\tif (Array.isArray(classProp)) {\r\n\t\treturn toClassProp(classProp.join(' '));\r\n\t}\r\n\r\n\tif (typeof classProp !== 'string') {\r\n\t\treturn classProp;\r\n\t}\r\n\r\n\treturn classProp\r\n\t\t.split(' ')\r\n\t\t.reduce(function (stack: ToggleableClassNameRecord, el: string): ToggleableClassNameRecord {\r\n\t\t\treturn { ...stack, [el]: true };\r\n\t\t}, {});\r\n}\r\n\r\n/**\r\n *\r\n * @param baseProp Base props to merge\r\n * @param args Array of ClassProp to merge onto baseProp\r\n * @returns Merged ClassProps\r\n */\r\nexport function mergeClassProp(baseProp: ClassProp, ...args: ClassProp[]): ToggleableClassNameRecord {\r\n\tconst mergedClassProp: ToggleableClassNameRecord = Object.assign({}, toClassProp(baseProp));\r\n\r\n\tfor (const arg of args) {\r\n\t\tObject.assign(mergedClassProp, toClassProp(arg));\r\n\t}\r\n\r\n\treturn mergedClassProp;\r\n}\r\n", "export const dayKeys: readonly string[] = [\r\n\t'@fs-base,TT:TIME.SUNDAY',\r\n\t'@fs-base,TT:TIME.MONDAY',\r\n\t'@fs-base,TT:TIME.TUESDAY',\r\n\t'@fs-base,TT:TIME.WEDNESDAY',\r\n\t'@fs-base,TT:TIME.THURSDAY',\r\n\t'@fs-base,TT:TIME.FRIDAY',\r\n\t'@fs-base,TT:TIME.SATURDAY',\r\n];\r\n\r\nexport const monthKeys: readonly string[] = [\r\n\t'@fs-base,TT:TIME.JANUARY',\r\n\t'@fs-base,TT:TIME.FEBRUARY',\r\n\t'@fs-base,TT:TIME.MARCH',\r\n\t'@fs-base,TT:TIME.APRIL',\r\n\t'@fs-base,TT:TIME.MAY',\r\n\t'@fs-base,TT:TIME.JUNE',\r\n\t'@fs-base,TT:TIME.JULY',\r\n\t'@fs-base,TT:TIME.AUGUST',\r\n\t'@fs-base,TT:TIME.SEPTEMBER',\r\n\t'@fs-base,TT:TIME.OCTOBER',\r\n\t'@fs-base,TT:TIME.NOVEMBER',\r\n\t'@fs-base,TT:TIME.DECEMBER',\r\n];\r\n\r\nexport const monthShortKeys: readonly string[] = [\r\n\t'@fs-base,TT:TIME.monthShort1',\r\n\t'@fs-base,TT:TIME.monthShort2',\r\n\t'@fs-base,TT:TIME.monthShort3',\r\n\t'@fs-base,TT:TIME.monthShort4',\r\n\t'@fs-base,TT:TIME.monthShort5',\r\n\t'@fs-base,TT:TIME.monthShort6',\r\n\t'@fs-base,TT:TIME.monthShort7',\r\n\t'@fs-base,TT:TIME.monthShort8',\r\n\t'@fs-base,TT:TIME.monthShort9',\r\n\t'@fs-base,TT:TIME.monthShort10',\r\n\t'@fs-base,TT:TIME.monthShort11',\r\n\t'@fs-base,TT:TIME.monthShort12',\r\n];\r\n\r\nexport interface WeekPeriod {\r\n\tstartDay: number /* 1..31 */;\r\n\tendDay: number /* 1..31 */;\r\n}\r\n\r\n/**\r\n * @param year The full year (e.g. 2024)\r\n * @param month The month in the range 0..11\r\n * @returns The array of weeks\r\n * @description Returns the array of all the weeks (from sunday to saturday) of the given month, including weeks shorter than 7 days (e.g. if the first day of the month is a Wednesday, then the first week of the array will be 4 days long).\r\n */\r\nexport function getWeeksInMonth(year: number, month: number): WeekPeriod[] {\r\n\tconst weeks: number[][] = [];\r\n\r\n\tconst firstDate = new Date(year, month, 1);\r\n\tconst lastDate = new Date(year, month + 1, 0);\r\n\r\n\tconst numDays = lastDate.getDate();\r\n\r\n\tlet dayOfWeekCounter = firstDate.getDay();\r\n\r\n\tfor (let date = 1; date <= numDays; date++) {\r\n\t\tif (dayOfWeekCounter === 0 || weeks.length === 0) {\r\n\t\t\tweeks.push([]);\r\n\t\t}\r\n\t\tweeks[weeks.length - 1].push(date);\r\n\t\tdayOfWeekCounter = (dayOfWeekCounter + 1) % 7;\r\n\t}\r\n\r\n\treturn weeks\r\n\t\t.filter((w) => w.length > 0)\r\n\t\t.map((w) => ({\r\n\t\t\tstartDay: w[0],\r\n\t\t\tendDay: w[w.length - 1],\r\n\t\t}));\r\n}\r\n\r\n/**\r\n * @param year The full year (e.g. 2024)\r\n * @param month The month in the range 0..11\r\n * @param day The day of the month in the range 1..31\r\n * @returns the date corresponding to the start (the sunday) of the given week\r\n */\r\nexport function getStartOfWeek(year: number, month: number, day: number): Date {\r\n\tconst date = new Date(year, month, day);\r\n\tdate.setDate(date.getDate() - date.getDay());\r\n\treturn date;\r\n}\r\n\r\n/**\r\n * @param day The day of the month in the range 1..31\r\n * @returns The formatted day (e.g. 13 -> 13th / 21 -> 21st)\r\n */\r\nexport function formatDay(day: number): string {\r\n\tif (day === 31) return 'st';\r\n\tswitch (day % 20) {\r\n\t\tcase 1:\r\n\t\t\treturn 'st';\r\n\t\tcase 2:\r\n\t\t\treturn 'nd';\r\n\t\tcase 3:\r\n\t\t\treturn 'rd';\r\n\t\tdefault:\r\n\t\t\treturn 'th';\r\n\t}\r\n}\r\n", "import {\r\n\tAirportUtils,\r\n\tDmsFormatter,\r\n\tFacility,\r\n\tFacilityRepository,\r\n\tFacilityType,\r\n\tFacilityUtils,\r\n\tICAO,\r\n\tOneWayRunway,\r\n\tUnitType,\r\n\tAirportFacility as WTAirportFacility,\r\n} from '@microsoft/msfs-sdk';\r\nimport { Nullable } from '../types';\r\nimport { AirportFacility, SelectedAirportFacility } from '../types/Facilities';\r\n\r\nexport type NullFacility = Nullable<Facility>;\r\n\r\n/**\r\n * @param facility the facility\r\n * @returns if the facility implements SelectedAirportFacility or not\r\n */\r\nexport function isSelectedAirportFacility(facility: Facility): facility is SelectedAirportFacility {\r\n\treturn 'currentRunway' in facility;\r\n}\r\n\r\n/**\r\n * @param facility the facility\r\n * @returns if the facility implements SelectedAirportFacility or not\r\n */\r\nexport function isAirportFacility(facility: Facility): facility is AirportFacility {\r\n\treturn FacilityUtils.isFacilityType(facility, FacilityType.Airport) && 'altitude' in facility;\r\n}\r\n\r\n/**\r\n * Airport size.\r\n */\r\nexport enum AirportSize {\r\n\tLarge = 'Large',\r\n\tMedium = 'Medium',\r\n\tSmall = 'Small',\r\n}\r\n\r\nexport const LargeAirportThresholdFt = 8100;\r\nexport const MediumAirportThresholdFt = 5000;\r\n\r\n/**\r\n * Gets the size of an airport according to its longest runway\r\n * @param airport An airport\r\n * @returns the size of the airport.\r\n */\r\nexport function getAirportSize(airport: WTAirportFacility): AirportSize {\r\n\tconst longestRunway = AirportUtils.getLongestRunway(airport);\r\n\tif (!longestRunway) {\r\n\t\treturn AirportSize.Small;\r\n\t}\r\n\r\n\tconst longestRwyLengthFeet = UnitType.METER.convertTo(longestRunway.length, UnitType.FOOT) as number;\r\n\treturn longestRwyLengthFeet >= LargeAirportThresholdFt\r\n\t\t? AirportSize.Large\r\n\t\t: longestRwyLengthFeet >= MediumAirportThresholdFt || airport.towered\r\n\t\t? AirportSize.Medium\r\n\t\t: AirportSize.Small;\r\n}\r\n\r\n/**\r\n * @param facility the facility\r\n * @param propertyName the property name of the facility\r\n * @param getter the function computing the wanted field\r\n * @returns the facility field\r\n */\r\nfunction getFacilityStrField<T extends Facility, K extends keyof T>(\r\n\tfacility: Nullable<T>,\r\n\tpropertyName: K,\r\n\tgetter: (property: T[K]) => string\r\n): string {\r\n\treturn facility ? getter(facility[propertyName]) : '';\r\n}\r\n\r\n/**\r\n * @param facility the facility corresponding to the ICAO\r\n * @returns the ICAO\r\n */\r\nexport function getICAOIdent(facility: NullFacility): string {\r\n\treturn getFacilityStrField(facility, 'icao', ICAO.getIdent);\r\n}\r\n\r\n/**\r\n * @param facility the facility which translated name is expected\r\n * @returns the translated name\r\n */\r\nexport function getFacilityName(facility: NullFacility): string {\r\n\treturn getFacilityStrField(facility, 'name', Utils.Translate);\r\n}\r\n\r\n/**\r\n * @param runway the runway\r\n * @returns the runway display name\r\n */\r\nexport function getRunwayName(runway: OneWayRunway): string {\r\n\treturn `runway ${runway.designation}`;\r\n}\r\n\r\n/**\r\n * @param facility the facility\r\n * @returns the runway display name\r\n */\r\nexport function getCurrentRunwayName(facility: NullFacility): string {\r\n\treturn facility && isSelectedAirportFacility(facility) ? getRunwayName(facility.currentRunway) : '';\r\n}\r\n\r\n/**\r\n * @param facilityType The type of the facility\r\n * @returns The path to the facility type icon\r\n */\r\nexport function getFacilityIconPath(facilityType: FacilityType): string {\r\n\tlet svgName = '';\r\n\tswitch (facilityType) {\r\n\t\tcase FacilityType.Airport:\r\n\t\tcase FacilityType.RWY:\r\n\t\t\tsvgName = 'Airport';\r\n\t\t\tbreak;\r\n\t\tcase FacilityType.VOR:\r\n\t\t\tsvgName = 'VOR';\r\n\t\t\tbreak;\r\n\t\tcase FacilityType.NDB:\r\n\t\t\tsvgName = 'NDB';\r\n\t\t\tbreak;\r\n\t\tcase FacilityType.USR:\r\n\t\t\tsvgName = 'Intersection';\r\n\t\t\tbreak;\r\n\t\tcase FacilityType.Intersection:\r\n\t\tdefault:\r\n\t\t\tsvgName = 'Waypoint';\r\n\t}\r\n\r\n\treturn `coui://html_ui/efb_ui/efb_os/Assets/icons/facilities/${svgName}.svg`;\r\n}\r\n\r\n/**\r\n * Create a Facility of type USR at the given coordinate\r\n * @param repository the facility repository that will receive the new facility\r\n * @param lat the latitude of the custom point\r\n * @param lon the longitude of the custom point\r\n * @returns The custom facility added to the FacilityRepository\r\n */\r\nexport function createCustomFacility(repository: FacilityRepository, lat: number, lon: number): Facility {\r\n\tconst customIdent = getLatLonStr(lat, lon);\r\n\r\n\t// Spaces in the ICAO for the indent to begin at index 7\r\n\tconst customFac: Facility = {\r\n\t\ticao: `U      ${customIdent}`,\r\n\t\tcity: 'none',\r\n\t\tlat: lat,\r\n\t\tlon: lon,\r\n\t\tmagvar: 0,\r\n\t\tname: 'Custom point',\r\n\t\tregion: 'none',\r\n\t};\r\n\r\n\trepository.add(customFac);\r\n\r\n\treturn customFac;\r\n}\r\n\r\n/**\r\n * Parse coordinates to get a string with the '1234N5678E' format\r\n * @param lat the latitude of the point to parse\r\n * @param lon the longitude of the point to parse\r\n * @returns the string of parsed coordinates\r\n */\r\nexport function getLatLonStr(lat: number, lon: number): string {\r\n\tconst dmsFormatter = new DmsFormatter();\r\n\r\n\tconst partsLat = dmsFormatter.parseLat(lat);\r\n\tlet customName = partsLat.degrees.toFixed(0) + partsLat.minutes.toFixed(0) + partsLat.direction;\r\n\r\n\tconst partsLon = dmsFormatter.parseLon(lon);\r\n\tcustomName += partsLon.degrees.toFixed(0) + partsLon.minutes.toFixed(0) + partsLon.direction;\r\n\r\n\treturn customName;\r\n}\r\n", "import { EventBus, MutableSubscribable, Subject, Subscribable, Subscription } from '@microsoft/msfs-sdk';\r\nimport { where } from '../sub';\r\nimport { Nullable } from '../types';\r\n\r\nexport enum FlightPhaseState {\r\n\tPREFLIGHT = 0,\r\n\tSTARTUP = 1,\r\n\tBEFORE_TAXI = 2,\r\n\tTAXI = 3,\r\n\tTAKEOFF = 4,\r\n\tCLIMB = 5,\r\n\tCRUISE = 6,\r\n\tDESCENT = 7,\r\n\tLANDING = 8,\r\n\tTAXITOGATE = 9,\r\n\tSHUTDOWN = 10,\r\n\tFLIGHT_OVER = 11,\r\n\tUNKNOWN = 100,\r\n}\r\n\r\ndeclare global {\r\n\tinterface Window {\r\n\t\tFLIGHT_PHASE_MANAGER: _FlightPhaseManager | undefined;\r\n\t}\r\n}\r\n\r\nclass _FlightPhaseManager {\r\n\tprivate static _instance?: _FlightPhaseManager;\r\n\r\n\tprotected readonly _flightPhase: MutableSubscribable<number, FlightPhaseState> = Subject.create(\r\n\t\tFlightPhaseState.UNKNOWN\r\n\t);\r\n\r\n\t/* Public getters */\r\n\tpublic readonly flightPhase: Subscribable<FlightPhaseState> = this._flightPhase;\r\n\r\n\tpublic readonly isFlightOver = this._flightPhase.map(where(FlightPhaseState.FLIGHT_OVER));\r\n\r\n\tprotected onFlightPhaseStateChangedSubscription: Nullable<Subscription> = null;\r\n\r\n\t// eslint-disable-next-line @typescript-eslint/no-empty-function\r\n\tprivate constructor() {}\r\n\r\n\t/**\r\n\t * Static singleton instance of the Flight Phase Manager\r\n\t * @internal\r\n\t */\r\n\tpublic static get instance(): _FlightPhaseManager {\r\n\t\treturn (window.FLIGHT_PHASE_MANAGER = _FlightPhaseManager._instance =\r\n\t\t\twindow.FLIGHT_PHASE_MANAGER || _FlightPhaseManager._instance || new _FlightPhaseManager());\r\n\t}\r\n\r\n\t/**\r\n\t * The bus is set once at EFB initialization from efb_ui.tsx\r\n\t * @internal\r\n\t */\r\n\tpublic setBus(bus: EventBus) {\r\n\t\tthis.onFlightPhaseStateChangedSubscription?.destroy();\r\n\r\n\t\tthis.onFlightPhaseStateChangedSubscription = bus.on('FlightPhaseChanged', (flightPhase: string) => {\r\n\t\t\tswitch (flightPhase) {\r\n\t\t\t\t// FIXME Some flight phases are probably missing\r\n\t\t\t\tcase 'PREFLIGHT_RTC':\r\n\t\t\t\tcase 'PREFLIGHT':\r\n\t\t\t\tcase 'SKIP_TRANSITION_PREFLIGHT':\r\n\t\t\t\t\tthis._flightPhase.set(FlightPhaseState.PREFLIGHT);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'STARTUP':\r\n\t\t\t\t\tthis._flightPhase.set(FlightPhaseState.STARTUP);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'BEFORE_TAXI':\r\n\t\t\t\tcase 'TAXI':\r\n\t\t\t\tcase 'SKIP_TRANSITION_TAXI':\r\n\t\t\t\t\tthis._flightPhase.set(FlightPhaseState.TAXI);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'TAKEOFF':\r\n\t\t\t\t\tthis._flightPhase.set(FlightPhaseState.TAKEOFF);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'CLIMB':\r\n\t\t\t\t\tthis._flightPhase.set(FlightPhaseState.CLIMB);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'CRUISE':\r\n\t\t\t\tcase 'SKIP_TRANSITION_CRUISE':\r\n\t\t\t\t\tthis._flightPhase.set(FlightPhaseState.CRUISE);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'DESCENT':\r\n\t\t\t\t\tthis._flightPhase.set(FlightPhaseState.DESCENT);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'LANDING':\r\n\t\t\t\t\tthis._flightPhase.set(FlightPhaseState.LANDING);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'TAXITOGATE':\r\n\t\t\t\tcase 'SKIP_TRANSITION_TAXITOGATE':\r\n\t\t\t\t\tthis._flightPhase.set(FlightPhaseState.TAXITOGATE);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'SHUTDOWN':\r\n\t\t\t\t\tthis._flightPhase.set(FlightPhaseState.SHUTDOWN);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'RTC':\r\n\t\t\t\t\t// Do nothing, changing to a dedicated flight phase will compromise the regular flight phase order\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'MISSIONSUCCESS':\r\n\t\t\t\tcase 'MISSIONABORTED':\r\n\t\t\t\t\tthis._flightPhase.set(FlightPhaseState.FLIGHT_OVER);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t// FIXME Mission specific flight phases, the information could probably be given in some way\r\n\t\t\t\tcase 'REACH BANNER APPROACH':\r\n\t\t\t\tcase 'HOOKBANNER':\r\n\t\t\t\tcase 'REACH PASS':\r\n\t\t\t\tcase 'PASS':\r\n\t\t\t\tcase 'CRUISEBACK':\r\n\t\t\t\tcase 'REACH DROP':\r\n\t\t\t\tcase 'DROP BANNER':\r\n\t\t\t\t\t// Aerial advertising specific\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'WATERDROP':\r\n\t\t\t\t\t// Firefighting specific\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tconsole.warn(`Received unknown flight phase '${flightPhase}'`);\r\n\t\t\t\t\tthis._flightPhase.set(FlightPhaseState.UNKNOWN);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * @description This function is used in order to verify if a given flight phase has been reached.\r\n\t * Always return true when the flight phase is unknown.\r\n\t * @param flightPhase The flight phase that has been reached or not\r\n\t * @returns A subscribable that returns whether the given flight phase has been reached\r\n\t */\r\n\tpublic hasReachedFlightPhaseState(flightPhase: FlightPhaseState): Subscribable<boolean> {\r\n\t\treturn this.flightPhase.map(\r\n\t\t\t(currentFlightPhaseState: FlightPhaseState) => currentFlightPhaseState >= flightPhase\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport const FlightPhaseManager = _FlightPhaseManager.instance;\r\n", "import { HandlerSubscription, MappedSubscribable, MutableSubscribable, Subscription } from '@microsoft/msfs-sdk';\r\n\r\nexport enum SubscribableMapEventType {\r\n\tAdded,\r\n\tUpdated,\r\n\tRemoved,\r\n}\r\n\r\nexport type MapSubjectHandler<K, V> = (\r\n\tkey: K,\r\n\ttype: SubscribableMapEventType,\r\n\titem: undefined | Readonly<V>,\r\n\tpreviousItem: undefined | Readonly<V>\r\n) => void;\r\n\r\nexport interface MapSubscribable<K, V> {\r\n\treadonly isSubscribable: true;\r\n\treadonly isMapSubscribable: true;\r\n\r\n\treadonly length: number;\r\n\r\n\tget(key: K): undefined | V;\r\n\r\n\tset(key: K, value: Readonly<V>): void;\r\n\r\n\thas(key: K): boolean;\r\n\r\n\tdelete(key: K): boolean;\r\n\r\n\tsub(handler: MapSubjectHandler<K, V>, initialNotify?: boolean, paused?: boolean): Subscription;\r\n\r\n\tunsub(handler: MapSubjectHandler<K, V>): void;\r\n}\r\n\r\nexport class MapSubject<K, V> implements MapSubscribable<K, V> {\r\n\tpublic readonly isSubscribable = true;\r\n\tpublic readonly isMapSubscribable = true;\r\n\r\n\tprivate readonly obj: Map<K, V> = new Map<K, V>();\r\n\r\n\tprivate subs: Array<HandlerSubscription<MapSubjectHandler<K, V>>> = [];\r\n\tprivate notifyDepth = 0;\r\n\r\n\tprivate readonly initialNotifyFunc = this.initialNotify.bind(this);\r\n\tprivate readonly onSubDestroyedFunc = this.onSubDestroyed.bind(this);\r\n\r\n\tpublic get length(): number {\r\n\t\treturn this.obj.size;\r\n\t}\r\n\r\n\tprivate constructor(entries?: ReadonlyArray<readonly [K, V]> | null) {\r\n\t\tif (entries) {\r\n\t\t\tfor (const [k, v] of entries) {\r\n\t\t\t\tthis.obj.set(k, v);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tpublic static create<K, V>(entries?: ReadonlyArray<readonly [K, V]> | null): MapSubject<K, V> {\r\n\t\treturn new MapSubject<K, V>(entries);\r\n\t}\r\n\r\n\tpublic get(key: K): undefined | V {\r\n\t\treturn this.obj.get(key);\r\n\t}\r\n\r\n\tpublic set(key: K, value: Readonly<V>): void {\r\n\t\tconst oldValue = this.obj.get(key);\r\n\t\tconst exists = this.has(key);\r\n\r\n\t\t// console.log('MapSubject.set()', exists, key, value);\r\n\r\n\t\tthis.obj.set(key, value);\r\n\t\tthis.notify(key, exists ? SubscribableMapEventType.Updated : SubscribableMapEventType.Added, value, oldValue);\r\n\t}\r\n\r\n\tpublic has(key: K): boolean {\r\n\t\treturn this.obj.has(key);\r\n\t}\r\n\r\n\tpublic delete(key: K): boolean {\r\n\t\tconst deleted = this.obj.delete(key);\r\n\r\n\t\tif (deleted) {\r\n\t\t\tthis.notify(key, SubscribableMapEventType.Removed);\r\n\t\t}\r\n\r\n\t\treturn deleted;\r\n\t}\r\n\r\n\tpublic sub(handler: MapSubjectHandler<K, V>, initialNotify = false, paused = false): Subscription {\r\n\t\tconst sub = new HandlerSubscription<typeof handler>(handler, this.initialNotifyFunc, this.onSubDestroyedFunc);\r\n\t\tthis.subs.push(sub);\r\n\r\n\t\tif (paused) {\r\n\t\t\tsub.pause();\r\n\t\t} else if (initialNotify) {\r\n\t\t\tsub.initialNotify();\r\n\t\t}\r\n\r\n\t\treturn sub;\r\n\t}\r\n\r\n\tpublic unsub(handler: MapSubjectHandler<K, V>): void {\r\n\t\tconst toDestroy = this.subs.find((sub) => sub.handler === handler);\r\n\t\ttoDestroy?.destroy();\r\n\t}\r\n\r\n\tpublic map<M>(\r\n\t\tfn: (input: V, previousVal?: M | undefined) => M,\r\n\t\tequalityFunc?: ((a: M, b: M) => boolean) | undefined\r\n\t): MappedSubscribable<M>;\r\n\tpublic map<M>(\r\n\t\tfn: (input: V, previousVal?: M | undefined) => M,\r\n\t\tequalityFunc: (a: M, b: M) => boolean,\r\n\t\tmutateFunc: (oldVal: M, newVal: M) => void,\r\n\t\tinitialVal: M\r\n\t): MappedSubscribable<M>;\r\n\tpublic map<M>(\r\n\t\t_fn: unknown,\r\n\t\t_equalityFunc?: unknown,\r\n\t\t_mutateFunc?: unknown,\r\n\t\t_initialVal?: unknown\r\n\t): MappedSubscribable<M> {\r\n\t\tthrow new Error('Method not implemented.');\r\n\t}\r\n\r\n\tpublic pipe(to: MutableSubscribable<any, V>, paused?: boolean | undefined): Subscription;\r\n\tpublic pipe<M>(\r\n\t\tto: MutableSubscribable<any, M>,\r\n\t\tmap: (fromVal: V, toVal: M) => M,\r\n\t\tpaused?: boolean | undefined\r\n\t): Subscription;\r\n\tpublic pipe(_to: unknown, _map?: unknown, _paused?: unknown): Subscription {\r\n\t\tthrow new Error('Method not implemented.');\r\n\t}\r\n\r\n\tprivate notify(\r\n\t\tkey: K,\r\n\t\ttype: SubscribableMapEventType,\r\n\t\tmodifiedItem?: Readonly<V>,\r\n\t\tpreviousValue?: Readonly<V>\r\n\t): void {\r\n\t\tlet needCleanUpSubs = false;\r\n\t\tthis.notifyDepth++;\r\n\r\n\t\tfor (const sub of this.subs) {\r\n\t\t\ttry {\r\n\t\t\t\tif (sub.isAlive && !sub.isPaused) {\r\n\t\t\t\t\tsub.handler(key, type, modifiedItem, previousValue);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tneedCleanUpSubs ||= !sub.isAlive;\r\n\t\t\t} catch (error) {\r\n\t\t\t\tconsole.error(`MapSubject: error in handler: ${error}`);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.notifyDepth--;\r\n\r\n\t\tif (needCleanUpSubs && this.notifyDepth === 0) {\r\n\t\t\tthis.subs = this.subs.filter((sub) => sub.isAlive);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate initialNotify(sub: HandlerSubscription<MapSubjectHandler<K, V>>): void {\r\n\t\tfor (const key of this.obj.keys()) {\r\n\t\t\tconst v = this.obj.get(key);\r\n\t\t\ttry {\r\n\t\t\t\tsub.handler(key, SubscribableMapEventType.Added, v, undefined);\r\n\t\t\t} catch (error) {\r\n\t\t\t\tconsole.error(`MapSubject: error in handker: ${error}`);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate onSubDestroyed(sub: HandlerSubscription<MapSubjectHandler<K, V>>): void {\r\n\t\tif (this.notifyDepth === 0) {\r\n\t\t\tthis.subs.splice(this.subs.indexOf(sub), 1);\r\n\t\t}\r\n\t}\r\n}\r\n", "/**\r\n * Generates a function which maps an input to a boolean where input is strictly equal to value.\r\n * @param value Value you want to compare your input with\r\n * @returns A function which maps an input to a boolean where input is strictly equal to value.\r\n */\r\nexport function where<T>(value: T): (input: T, currentVal?: boolean) => boolean {\r\n\treturn (input: T): boolean => value === input;\r\n}\r\n\r\n/**\r\n * Generates a function which maps an input number to its string value.\r\n * @returns A function which maps an input number to its string value.\r\n */\r\nexport function toString<T extends number>(): (input: T, currentVal?: string) => string {\r\n\treturn (input: T): string => input.toString();\r\n}\r\n", "import { EventBus, MutableSubscribable, Subject, Subscribable, Subscription } from '@microsoft/msfs-sdk';\r\nimport { where } from '../sub';\r\nimport { Nullable } from '../types';\r\n\r\nexport enum GameMode {\r\n\tUNKNOWN = 0,\r\n\tCAREER,\r\n\tCHALLENGE,\r\n\tDISCOVERY,\r\n\tFREEFLIGHT,\r\n}\r\n\r\ndeclare global {\r\n\tinterface Window {\r\n\t\tGAME_MODE_MANAGER: _GameModeManager | undefined;\r\n\t}\r\n}\r\n\r\nclass _GameModeManager {\r\n\tprivate static _instance?: _GameModeManager;\r\n\r\n\tprotected readonly _gameMode: MutableSubscribable<number, GameMode> = Subject.create(GameMode.UNKNOWN);\r\n\r\n\t/** Public getters */\r\n\tpublic readonly gameMode: Subscribable<GameMode> = this._gameMode;\r\n\r\n\tpublic readonly isCareer = this._gameMode.map(where(GameMode.CAREER));\r\n\tpublic readonly isChallenge = this._gameMode.map(where(GameMode.CHALLENGE));\r\n\tpublic readonly isDiscovery = this._gameMode.map(where(GameMode.DISCOVERY));\r\n\tpublic readonly isFreeflight = this._gameMode.map(where(GameMode.FREEFLIGHT));\r\n\r\n\tprotected onGameModeChangedSubscription: Nullable<Subscription> = null;\r\n\r\n\t// eslint-disable-next-line @typescript-eslint/no-empty-function\r\n\tprivate constructor() {}\r\n\r\n\t/**\r\n\t * Static singleton instance of the Game mode manager\r\n\t * @internal\r\n\t */\r\n\tpublic static get instance(): _GameModeManager {\r\n\t\treturn (window.GAME_MODE_MANAGER = _GameModeManager._instance =\r\n\t\t\twindow.GAME_MODE_MANAGER || _GameModeManager._instance || new _GameModeManager());\r\n\t}\r\n\r\n\t/**\r\n\t * The bus is set once at EFB initialization from efb_ui.tsx\r\n\t * @internal\r\n\t */\r\n\tpublic setBus(bus: EventBus) {\r\n\t\tthis.onGameModeChangedSubscription?.destroy();\r\n\r\n\t\tthis.onGameModeChangedSubscription = bus.on('GameModeChanged', (gameMode: string) => {\r\n\t\t\tswitch (gameMode) {\r\n\t\t\t\tcase 'CAREER GAMEMODE':\r\n\t\t\t\t\tthis._gameMode.set(GameMode.CAREER);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'CHALLENGE GAMEMODE':\r\n\t\t\t\t\tthis._gameMode.set(GameMode.CHALLENGE);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'DISCOVERY GAMEMODE':\r\n\t\t\t\t\tthis._gameMode.set(GameMode.DISCOVERY);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'FREEFLIGHT GAMEMODE':\r\n\t\t\t\t\tthis._gameMode.set(GameMode.FREEFLIGHT);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tconsole.error(`Unknown game mode '${gameMode}'`);\r\n\t\t\t\t\tthis._gameMode.set(GameMode.UNKNOWN);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n}\r\n\r\nexport const GameModeManager = _GameModeManager.instance;\r\n", "/**\r\n * Load a file as a blob\r\n * @param url The URL to load the file from.\r\n * @returns A promise that resolves with the blob.\r\n */\r\nexport function loadFileAsBlob(url: string): Promise<Blob> {\r\n\treturn new Promise((resolve, reject) => {\r\n\t\tconst xhr = new XMLHttpRequest();\r\n\t\txhr.open('GET', url, true);\r\n\t\txhr.responseType = 'blob';\r\n\t\txhr.onload = function (e): any {\r\n\t\t\tif (this.status === 200) {\r\n\t\t\t\tresolve(this.response);\r\n\t\t\t\t// myBlob is now the blob that the object URL pointed to.\r\n\t\t\t} else {\r\n\t\t\t\treject(this.response);\r\n\t\t\t}\r\n\t\t};\r\n\t\txhr.send();\r\n\t});\r\n}\r\n\r\nBlob.prototype.arrayBuffer = function (): Promise<ArrayBuffer> {\r\n\treturn new Promise((resolve, reject) => {\r\n\t\t// Blob -> ArrayBuffer\r\n\t\tconst fileReader = new FileReader();\r\n\t\tfileReader.onload = function (event): any {\r\n\t\t\tconst arrayBuffer = event.target?.result;\r\n\t\t\tif (typeof arrayBuffer === 'string' || arrayBuffer === null || arrayBuffer === undefined) {\r\n\t\t\t\treject('ArrayBuffer is null');\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tresolve(arrayBuffer);\r\n\r\n\t\t\t// warn if read values are not the same as the original values\r\n\t\t\t// arrayEqual from: http://stackoverflow.com/questions/3115982/how-to-check-javascript-array-equals\r\n\t\t\t// function arrayEqual(a, b) {\r\n\t\t\t//   return !(a < b || b < a);\r\n\t\t\t// }\r\n\t\t\t// if (arrayBufferNew.byteLength !== arrayBuffer.byteLength) // should be 3\r\n\t\t\t//   reject(\"ArrayBuffer byteLength does not match\");\r\n\t\t\t// if (arrayEqual(uint8ArrayNew, uint8Array) !== true) // should be [1,2,3]\r\n\t\t\t//   reject(\"Uint8Array does not match\");\r\n\t\t};\r\n\t\tfileReader.readAsArrayBuffer(this);\r\n\t\tfileReader.result; // also accessible this way once the blob has been read\r\n\t});\r\n};\r\n\r\ntype Chunk = { name: string; data: Uint8Array };\r\ntype Chunks = Chunk[];\r\n\r\nconst uint8 = new Uint8Array(4);\r\n// const int32 = new Int32Array(uint8.buffer);\r\nconst uint32 = new Uint32Array(uint8.buffer);\r\n\r\n/**\r\n * https://github.com/hughsk/png-chunks-extract\r\n * Extract the data chunks from a PNG file.\r\n * Useful for reading the metadata of a PNG image, or as the base of a more complete PNG parser.\r\n * Takes the raw image file data as a Uint8Array or Node.js Buffer, and returns an array of chunks. Each chunk has a name and data buffer:\r\n * @param data {Uint8Array}\r\n * @returns {[{name: string, data: Uint8Array}]}\r\n */\r\nexport function extractChunks(data: Uint8Array): Chunks {\r\n\tif (data[0] !== 0x89) throw new Error('Invalid .png file header');\r\n\tif (data[1] !== 0x50) throw new Error('Invalid .png file header');\r\n\tif (data[2] !== 0x4e) throw new Error('Invalid .png file header');\r\n\tif (data[3] !== 0x47) throw new Error('Invalid .png file header');\r\n\tif (data[4] !== 0x0d)\r\n\t\tthrow new Error('Invalid .png file header: possibly caused by DOS-Unix line ending conversion?');\r\n\tif (data[5] !== 0x0a)\r\n\t\tthrow new Error('Invalid .png file header: possibly caused by DOS-Unix line ending conversion?');\r\n\tif (data[6] !== 0x1a) throw new Error('Invalid .png file header');\r\n\tif (data[7] !== 0x0a)\r\n\t\tthrow new Error('Invalid .png file header: possibly caused by DOS-Unix line ending conversion?');\r\n\r\n\tlet ended = false;\r\n\tconst chunks: Chunks = [];\r\n\tlet idx = 8;\r\n\r\n\twhile (idx < data.length) {\r\n\t\t// Read the length of the current chunk,\r\n\t\t// which is stored as a Uint32.\r\n\t\tuint8[3] = data[idx++];\r\n\t\tuint8[2] = data[idx++];\r\n\t\tuint8[1] = data[idx++];\r\n\t\tuint8[0] = data[idx++];\r\n\r\n\t\t// Chunk includes name/type for CRC check (see below).\r\n\t\tconst length = uint32[0] + 4;\r\n\t\tconst chunk = new Uint8Array(length);\r\n\t\tchunk[0] = data[idx++];\r\n\t\tchunk[1] = data[idx++];\r\n\t\tchunk[2] = data[idx++];\r\n\t\tchunk[3] = data[idx++];\r\n\r\n\t\t// Get the name in ASCII for identification.\r\n\t\tconst name =\r\n\t\t\tString.fromCharCode(chunk[0]) +\r\n\t\t\tString.fromCharCode(chunk[1]) +\r\n\t\t\tString.fromCharCode(chunk[2]) +\r\n\t\t\tString.fromCharCode(chunk[3]);\r\n\r\n\t\t// The IHDR header MUST come first.\r\n\t\tif (!chunks.length && name !== 'IHDR') {\r\n\t\t\tthrow new Error('IHDR header missing');\r\n\t\t}\r\n\r\n\t\t// The IEND header marks the end of the file,\r\n\t\t// so on discovering it break out of the loop.\r\n\t\tif (name === 'IEND') {\r\n\t\t\tended = true;\r\n\t\t\tchunks.push({\r\n\t\t\t\tname: name,\r\n\t\t\t\tdata: new Uint8Array(0),\r\n\t\t\t});\r\n\r\n\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\t// Read the contents of the chunk out of the main buffer.\r\n\t\tfor (let i = 4; i < length; i++) {\r\n\t\t\tchunk[i] = data[idx++];\r\n\t\t}\r\n\r\n\t\t// Read out the CRC value for comparison.\r\n\t\t// It's stored as an Int32.\r\n\t\tuint8[3] = data[idx++];\r\n\t\tuint8[2] = data[idx++];\r\n\t\tuint8[1] = data[idx++];\r\n\t\tuint8[0] = data[idx++];\r\n\r\n\t\t// const crcActual = int32[0];\r\n\t\t// const crcExpect = crc32.buf(chunk);\r\n\t\t// if (crcExpect !== crcActual) {\r\n\t\t// \tthrow new Error('CRC values for ' + name + ' header do not match, PNG file is likely corrupted');\r\n\t\t// }\r\n\r\n\t\t// The chunk data is now copied to remove the 4 preceding\r\n\t\t// bytes used for the chunk name/type.\r\n\t\tconst chunkData = new Uint8Array(chunk.buffer.slice(4));\r\n\r\n\t\tchunks.push({\r\n\t\t\tname: name,\r\n\t\t\tdata: chunkData,\r\n\t\t});\r\n\t}\r\n\r\n\tif (!ended) {\r\n\t\tthrow new Error('.png file ended prematurely: no IEND header was found');\r\n\t}\r\n\r\n\treturn chunks;\r\n}\r\n\r\n/**\r\n * https://github.com/hughsk/png-chunk-text\r\n * Reads a Uint8Array or Node.js Buffer instance containing a tEXt PNG chunk's data and returns its keyword/text:\r\n * @param data {Uint8Array}\r\n * @returns {{text: string, keyword: string}}\r\n */\r\nexport function textDecode(data: Uint8Array): { text: string; keyword: string } {\r\n\tlet naming = true;\r\n\tlet text = '';\r\n\tlet name = '';\r\n\r\n\tfor (const code of data) {\r\n\t\tif (naming) {\r\n\t\t\tif (code) {\r\n\t\t\t\tname += String.fromCharCode(code);\r\n\t\t\t} else {\r\n\t\t\t\tnaming = false;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (code) {\r\n\t\t\t\ttext += String.fromCharCode(code);\r\n\t\t\t} else {\r\n\t\t\t\tthrow new Error('Invalid NULL character found. 0x00 character is not permitted in tEXt content');\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn {\r\n\t\tkeyword: name,\r\n\t\ttext: text,\r\n\t};\r\n}\r\n\r\n/**\r\n * read 4 bytes number from UInt8Array.\r\n * @param uint8array\r\n * @param offset\r\n * @returns {number}\r\n */\r\nfunction readUint32(uint8array: Uint8Array, offset: number): number {\r\n\tconst byte1 = uint8array[offset++];\r\n\tconst byte2 = uint8array[offset++];\r\n\tconst byte3 = uint8array[offset++];\r\n\tconst byte4 = uint8array[offset];\r\n\treturn 0 | (byte1 << 24) | (byte2 << 16) | (byte3 << 8) | byte4;\r\n}\r\n\r\ninterface Metadata {\r\n\ttEXt: { keyword: string };\r\n\tpHYs: { x: number; y: number };\r\n}\r\n\r\n/**\r\n * Get object with PNG metadata. only tEXt and pHYs chunks are parsed\r\n * @param buffer {Buffer}\r\n * @returns {{tEXt: {keyword: value}, pHYs: {x: number, y: number}}}\r\n */\r\nexport function readMetadata(buffer: ArrayBuffer): Metadata {\r\n\tconst result: Metadata = {\r\n\t\ttEXt: {\r\n\t\t\tkeyword: '',\r\n\t\t},\r\n\t\tpHYs: { x: 0, y: 0 },\r\n\t};\r\n\r\n\tconst chunks = extractChunks(new Uint8Array(buffer));\r\n\tchunks.forEach((chunk) => {\r\n\t\tif (chunk.name === 'tExt') {\r\n\t\t\tconst textChunk = textDecode(chunk.data);\r\n\t\t\tresult.tEXt[textChunk.keyword] = textChunk.text;\r\n\t\t} else if (chunk.name === 'pHYs') {\r\n\t\t\tresult.pHYs = {\r\n\t\t\t\tx: readUint32(chunk.data, 0),\r\n\t\t\t\ty: readUint32(chunk.data, 4),\r\n\t\t\t};\r\n\t\t} else {\r\n\t\t\tresult[chunk.name] = true;\r\n\t\t}\r\n\t});\r\n\treturn result;\r\n}\r\n", "import { Subject, UUID, VNode } from '@microsoft/msfs-sdk';\r\nimport {\r\n\tEfbNotification,\r\n\tEfbNotificationStyle,\r\n\tEfbPermanentNotification,\r\n\tEfbTemporaryNotification,\r\n\tMaybeSubscribable,\r\n} from '../types';\r\n\r\n/**\r\n * Check if a notification is permanent or not\r\n * @param notif the notification to check\r\n * @returns an EfbPermanentNotification if possible\r\n */\r\nexport function isNotifPermanent(notif: EfbNotification): notif is EfbPermanentNotification {\r\n\treturn notif.type === 'permanent';\r\n}\r\n\r\n/**\r\n * Utility class for creating a temporary EFB notification\r\n * @param delayMs notification display time in milliseconds\r\n * @param description text rendered in the notification\r\n * @param style style of the notification\r\n * @param descriptionArguments arguments of the description text\r\n * @param icon icon rendered in the notification\r\n * @returns a temporary EFB notification\r\n */\r\nexport function createTemporaryNotif(\r\n\tdelayMs: number,\r\n\tdescription: string,\r\n\tstyle?: EfbNotificationStyle,\r\n\tdescriptionArguments?: Map<string, MaybeSubscribable<string>>,\r\n\ticon?: string | VNode\r\n): EfbTemporaryNotification {\r\n\tconst notifStyle = style ?? 'info';\r\n\treturn {\r\n\t\tuuid: UUID.GenerateUuid(),\r\n\t\ttype: 'temporary',\r\n\t\tcreatedAt: new Date(),\r\n\t\thide: Subject.create(false),\r\n\t\tdelayMs: Utils.Clamp(delayMs, 0, 60_000),\r\n\t\tdescription,\r\n\t\tstyle: notifStyle,\r\n\t\tdescriptionArguments,\r\n\t\ticon: icon ?? getNotifIconFromStyle(notifStyle),\r\n\t};\r\n}\r\n\r\n/**\r\n * Utility class for creating a permanent EFB notification\r\n * @param delayMs notification display time in milliseconds\r\n * @param title title rendered in the notification\r\n * @param description text rendered in the notification\r\n * @param style style of the notification\r\n * @param descriptionArguments arguments of the description text\r\n * @param icon icon rendered in the notification\r\n * @param color optional color on the left side of the notification\r\n * @param action optional action rendered in the notification\r\n * @returns a permanent EFB notification\r\n */\r\nexport function createPermanentNotif(\r\n\tdelayMs: number,\r\n\ttitle: string,\r\n\tdescription: string,\r\n\tstyle?: EfbNotificationStyle,\r\n\tdescriptionArguments?: Map<string, MaybeSubscribable<string>>,\r\n\ticon?: string | VNode,\r\n\tcolor?: string | number,\r\n\taction?: () => VNode\r\n): EfbPermanentNotification {\r\n\tconst notifStyle = style ?? 'info';\r\n\r\n\treturn {\r\n\t\tuuid: UUID.GenerateUuid(),\r\n\t\ttype: 'permanent',\r\n\t\tcreatedAt: new Date(),\r\n\t\thide: Subject.create(false),\r\n\t\tdelayMs: Utils.Clamp(delayMs, 0, 60_000),\r\n\t\tdescription,\r\n\t\tstyle: notifStyle,\r\n\t\tdescriptionArguments,\r\n\t\ticon: icon ?? getNotifIconFromStyle(notifStyle),\r\n\t\ttitle,\r\n\t\tcolor,\r\n\t\taction,\r\n\t\tviewed: Subject.create(false),\r\n\t};\r\n}\r\n\r\n/**\r\n * Utility function to retrieve the default icon of a notification according to its style attribute\r\n * @param style the style attribute of an efb notification\r\n * @returns the icon url related to the style\r\n */\r\nfunction getNotifIconFromStyle(style: EfbNotificationStyle): string {\r\n\tswitch (style) {\r\n\t\tcase 'warning':\r\n\t\t\treturn 'coui://html_ui/efb_ui/efb_os/Assets/icons/NoMargin/Warning.svg';\r\n\r\n\t\tcase 'success':\r\n\t\t\treturn 'coui://html_ui/efb_ui/efb_os/Assets/icons/NoMargin/Check_Full.svg';\r\n\r\n\t\tcase 'error':\r\n\t\t\treturn 'coui://html_ui/efb_ui/efb_os/Assets/icons/NoMargin/Failure_Full.svg';\r\n\r\n\t\tdefault:\r\n\t\t\treturn 'coui://html_ui/efb_ui/efb_os/Assets/icons/NoMargin/Info_Full.svg';\r\n\t}\r\n}\r\n", "import { Promiseable } from '../types';\r\n\r\n/**\r\n * Check wether a given value is a Promise or not.\r\n * @param value The value you wan't to check.\r\n * @returns True if value is a promise.\r\n */\r\nexport function isPromise<T>(value: unknown): value is Promise<T> {\r\n\treturn value instanceof Promise;\r\n}\r\n\r\n/**\r\n * Convert value to a Promise if it isn't already one.\r\n * @param value The value you wan't to convert.\r\n * @returns A promise of value.\r\n */\r\nexport function toPromise<T>(value: Promiseable<T>): Promise<T> {\r\n\treturn isPromise<T>(value) ? value : Promise.resolve(value);\r\n}\r\n", "import { NumberFormatter, UserSetting, UserSettingValue } from '@microsoft/msfs-sdk';\r\n\r\n/**\r\n * Checks if a setting is fulfilled with a member of the appropriate enum, and reset it if it's not\r\n * @param setting the setting to check\r\n * @param type the enum, disered type of the setting\r\n * @internal\r\n */\r\nexport function checkUserSetting(setting: UserSetting<UserSettingValue>, type: object): void {\r\n\tif (!Object.values(type).includes(setting.get())) {\r\n\t\tsetting.resetToDefault();\r\n\t}\r\n}\r\n\r\nexport const basicFormatter = NumberFormatter.create({\r\n\tmaxDigits: 0,\r\n\tforceDecimalZeroes: false,\r\n\tnanString: '-',\r\n});\r\n", "import { Subject, Subscribable } from '@microsoft/msfs-sdk';\r\n\r\nexport enum StopwatchState {\r\n\tREADY,\r\n\tRUNNING,\r\n\tPAUSED,\r\n}\r\n\r\nexport class Stopwatch {\r\n\tprotected readonly _timerSeconds = Subject.create(0);\r\n\tpublic readonly timerSeconds: Subscribable<number> = this._timerSeconds;\r\n\r\n\tprotected readonly _state = Subject.create(StopwatchState.READY);\r\n\tpublic readonly state: Subscribable<StopwatchState> = this._state;\r\n\r\n\tprotected initialTime = 0;\r\n\r\n\tprotected intervalObj: NodeJS.Timeout | undefined;\r\n\r\n\tpublic start(): void {\r\n\t\t// When resuming after a pause, the time elapsed until now shall remain in the initialTime\r\n\t\tconst offset = this._state.get() === StopwatchState.PAUSED ? this._timerSeconds.get() : 0;\r\n\t\tthis.initialTime = SimVar.GetSimVarValue('E:SIMULATION TIME', 'seconds') - offset;\r\n\r\n\t\tthis.intervalObj = setInterval(this.callback.bind(this), 500);\r\n\r\n\t\tthis._state.set(StopwatchState.RUNNING);\r\n\t}\r\n\r\n\tpublic pause(): void {\r\n\t\tclearInterval(this.intervalObj);\r\n\r\n\t\tthis._state.set(StopwatchState.PAUSED);\r\n\t}\r\n\r\n\tpublic reset(): void {\r\n\t\tclearInterval(this.intervalObj);\r\n\r\n\t\tthis.initialTime = 0;\r\n\t\tthis._timerSeconds.set(0);\r\n\r\n\t\tthis._state.set(StopwatchState.READY);\r\n\t}\r\n\r\n\tprivate callback(): void {\r\n\t\tthis._timerSeconds.set(SimVar.GetSimVarValue('E:SIMULATION TIME', 'seconds') - this.initialTime);\r\n\t}\r\n}\r\n", "import { Unit, UnitFamily, UnitType } from '@microsoft/msfs-sdk';\r\n\r\n/**\r\n * A utility class for creating unit formatters.\r\n *\r\n * Each unit formatter is a function which generates output strings from input measurement units.\r\n */\r\nexport class UnitFormatter {\r\n\tprivate static readonly UNIT_TEXT: Partial<Record<string, Partial<Record<string, string>>>> = {\r\n\t\t[UnitFamily.Distance]: {\r\n\t\t\t[UnitType.METER.name]: 'M',\r\n\t\t\t[UnitType.FOOT.name]: 'FT',\r\n\t\t\t[UnitType.KILOMETER.name]: 'KM',\r\n\t\t\t[UnitType.NMILE.name]: 'NM',\r\n\t\t\t[UnitType.MILE.name]: 'SM',\r\n\t\t},\r\n\t\t[UnitFamily.Angle]: {\r\n\t\t\t[UnitType.DEGREE.name]: '\u00B0',\r\n\t\t\t[UnitType.RADIAN.name]: 'rad',\r\n\t\t},\r\n\t\t[UnitFamily.Duration]: {\r\n\t\t\t[UnitType.SECOND.name]: 'SEC',\r\n\t\t\t[UnitType.MINUTE.name]: 'MIN',\r\n\t\t\t[UnitType.HOUR.name]: 'HR',\r\n\t\t},\r\n\t\t[UnitFamily.Weight]: {\r\n\t\t\t[UnitType.KILOGRAM.name]: 'KG',\r\n\t\t\t[UnitType.POUND.name]: 'LBS',\r\n\t\t\t[UnitType.LITER_FUEL.name]: 'LT',\r\n\t\t\t[UnitType.GALLON_FUEL.name]: 'GAL',\r\n\t\t\t[UnitType.IMP_GALLON_FUEL.name]: 'IG',\r\n\t\t},\r\n\t\t[UnitFamily.Volume]: {\r\n\t\t\t[UnitType.LITER.name]: 'L',\r\n\t\t\t[UnitType.GALLON.name]: 'GAL',\r\n\t\t},\r\n\t\t[UnitFamily.Pressure]: {\r\n\t\t\t[UnitType.HPA.name]: 'HPA',\r\n\t\t\t[UnitType.IN_HG.name]: 'IN',\r\n\t\t},\r\n\t\t[UnitFamily.Temperature]: {\r\n\t\t\t[UnitType.CELSIUS.name]: '\u00B0C',\r\n\t\t\t[UnitType.FAHRENHEIT.name]: '\u00B0F',\r\n\t\t},\r\n\t\t[UnitFamily.TemperatureDelta]: {\r\n\t\t\t[UnitType.DELTA_CELSIUS.name]: '\u00B0C',\r\n\t\t\t[UnitType.DELTA_FAHRENHEIT.name]: '\u00B0F',\r\n\t\t},\r\n\t\t[UnitFamily.Speed]: {\r\n\t\t\t[UnitType.KNOT.name]: 'KT',\r\n\t\t\t[UnitType.KPH.name]: 'KM/H',\r\n\t\t\t[UnitType.MPM.name]: 'MPM',\r\n\t\t\t[UnitType.FPM.name]: 'FPM',\r\n\t\t},\r\n\t\t[UnitFamily.WeightFlux]: {\r\n\t\t\t[UnitType.KGH.name]: 'KG/HR',\r\n\t\t\t[UnitType.PPH.name]: 'LB/HR',\r\n\t\t\t[UnitType.LPH_FUEL.name]: 'LT/HR',\r\n\t\t\t[UnitType.GPH_FUEL.name]: 'GAL/HR',\r\n\t\t\t[UnitType.IGPH_FUEL.name]: 'IG/HR',\r\n\t\t},\r\n\t};\r\n\r\n\tprivate static UNIT_TEXT_LOWER?: Partial<Record<string, Partial<Record<string, string>>>>;\r\n\tprivate static UNIT_TEXT_UPPER?: Partial<Record<string, Partial<Record<string, string>>>>;\r\n\r\n\t/**\r\n\t * Creates a function which formats measurement units to strings representing their abbreviated names.\r\n\t * @param defaultString The string to output when the input unit cannot be formatted. Defaults to the empty string.\r\n\t * @param charCase The case to enforce on the output string. Defaults to `'normal'`.\r\n\t * @returns A function which formats measurement units to strings representing their abbreviated names.\r\n\t */\r\n\tpublic static create(\r\n\t\tdefaultString = '',\r\n\t\tcharCase: 'normal' | 'upper' | 'lower' = 'normal'\r\n\t): (unit: Unit<string>) => string {\r\n\t\tswitch (charCase) {\r\n\t\t\tcase 'upper':\r\n\t\t\t\tUnitFormatter.UNIT_TEXT_UPPER ??= UnitFormatter.createUpperCase();\r\n\t\t\t\treturn (unit: Unit<string>): string =>\r\n\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n\t\t\t\t\tUnitFormatter.UNIT_TEXT_UPPER![unit.family]?.[unit.name] ?? defaultString;\r\n\t\t\tcase 'lower':\r\n\t\t\t\tUnitFormatter.UNIT_TEXT_LOWER ??= UnitFormatter.createLowerCase();\r\n\t\t\t\treturn (unit: Unit<string>): string =>\r\n\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n\t\t\t\t\tUnitFormatter.UNIT_TEXT_LOWER![unit.family]?.[unit.name] ?? defaultString;\r\n\t\t\tdefault:\r\n\t\t\t\treturn (unit: Unit<string>): string =>\r\n\t\t\t\t\tUnitFormatter.UNIT_TEXT[unit.family]?.[unit.name] ?? defaultString;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a record of lowercase unit abbreviated names.\r\n\t * @returns A record of lowercase unit abbreviated names.\r\n\t */\r\n\tprivate static createLowerCase(): Partial<Record<string, Partial<Record<string, string>>>> {\r\n\t\tconst lower: Record<string, Record<string, string>> = {};\r\n\r\n\t\tfor (const family in UnitFormatter.UNIT_TEXT) {\r\n\t\t\tconst familyText = UnitFormatter.UNIT_TEXT[family];\r\n\t\t\tlower[family] = {};\r\n\t\t\tfor (const unit in familyText) {\r\n\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n\t\t\t\tlower[family][unit] = familyText[unit]!.toLowerCase();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn lower;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a record of uppercase unit abbreviated names.\r\n\t * @returns A record of uppercase unit abbreviated names.\r\n\t */\r\n\tprivate static createUpperCase(): Record<string, Record<string, string>> {\r\n\t\tconst upper: Record<string, Record<string, string>> = {};\r\n\r\n\t\tfor (const family in UnitFormatter.UNIT_TEXT) {\r\n\t\t\tconst familyText = UnitFormatter.UNIT_TEXT[family];\r\n\t\t\tupper[family] = {};\r\n\t\t\tfor (const unit in familyText) {\r\n\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n\t\t\t\tupper[family][unit] = familyText[unit]!.toUpperCase();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn upper;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets a mapping of unit family and name to text used by UnitFormatter to format units. The returned object maps\r\n\t * unit families to objects that map unit names within each family to formatted text.\r\n\t * @returns A mapping of unit family and name to text used by UnitFormatter to format units.\r\n\t */\r\n\tpublic static getUnitTextMap(): Readonly<Partial<Record<string, Readonly<Partial<Record<string, string>>>>>> {\r\n\t\treturn UnitFormatter.UNIT_TEXT;\r\n\t}\r\n}\r\n", "/** Mark as Valuable a type (ie: you can have elements that are string or a function returning a string) */\r\nexport type Valuable<T> = T extends unknown ? T | (() => T) : T;\r\n\r\n/**\r\n * Get value by calling the `arg` if it is a function or by returning the `arg`.\r\n */\r\nexport function value<T>(arg: Valuable<T>): T {\r\n\treturn typeof arg === 'function' ? arg() : arg;\r\n}\r\n", "import { Nullable } from '../types';\r\n\r\nexport * from './Array';\r\nexport * from './Components';\r\nexport * from './Date';\r\nexport * from './FacilityUtils';\r\nexport * from './FlightPhaseManager';\r\nexport * from './GameModeManager';\r\nexport * from './MetadataReader';\r\nexport * from './NotificationUtils';\r\nexport * from './Promise';\r\nexport * from './SettingsUtils';\r\nexport * from './Stopwatch';\r\nexport * from './Unit';\r\nexport * from './Valuable';\r\n\r\n/**\r\n * Sets the mouse position offsets recursively until reaching the element.\r\n * @param e The mouse event to process.\r\n * @param vec The vector to assign to.\r\n * @param element The element to reach.\r\n */\r\nexport function offsetMousePosition(e: MouseEvent, vec: Float64Array, element: HTMLElement | null = null): void {\r\n\tconst mousePosition = elementOffset(e.target as HTMLElement, element);\r\n\tvec[0] = mousePosition[0] + e.offsetX;\r\n\tvec[1] = mousePosition[1] + e.offsetY;\r\n}\r\n\r\n/**\r\n * Get offsets recursively until reaching the limit element or the top element.\r\n * @param from The element from starting.\r\n * @param limit The element to stop.\r\n * @returns Coordinates from top-left offset.\r\n */\r\nexport function elementOffset(from: HTMLElement, limit: Nullable<HTMLElement> = null): Float64Array {\r\n\tlet leftOffset = 0;\r\n\tlet topOffset = 0;\r\n\tlet currentElement: Nullable<HTMLElement> = from;\r\n\r\n\tdo {\r\n\t\tleftOffset += currentElement.offsetLeft;\r\n\t\ttopOffset += currentElement.offsetTop;\r\n\r\n\t\tcurrentElement = currentElement.parentNode as Nullable<HTMLElement>;\r\n\t} while (currentElement !== null && currentElement !== limit);\r\n\r\n\treturn new Float64Array([leftOffset, topOffset]);\r\n}\r\n\r\n/**\r\n * Debug decorator\r\n * @internal\r\n */\r\nexport const measure = (_target: any, propertyKey: string, descriptor: PropertyDescriptor): PropertyDescriptor => {\r\n\tconst originalMethod = descriptor.value;\r\n\r\n\tdescriptor.value = function (...args: unknown[]): void {\r\n\t\tconst start = performance.now();\r\n\t\tconst result = originalMethod.apply(this, args);\r\n\t\tconst finish = performance.now();\r\n\t\tconsole.log(`Execution time of ${_target.constructor.name}.${propertyKey} took ${finish - start} ms`);\r\n\t\treturn result;\r\n\t};\r\n\r\n\treturn descriptor;\r\n};\r\n", "import { ComponentProps, DisplayComponent, EventBus, FSComponent, NodeInstance, VNode } from '@microsoft/msfs-sdk';\r\nimport { Memoize } from 'typescript-memoize';\r\nimport { AppViewService } from '../AppView/AppViewService';\r\nimport { GamepadEventHandler, GamepadEvents } from '../Gamepad';\r\nimport { NotificationManager } from '../Managers';\r\nimport { OnboardingManager } from '../Managers/OnboardingManager/OnboardingManager';\r\nimport { EfbSettingsManager, UnitsSettingsManager } from '../Settings';\r\nimport { Nullable, Promiseable, TVNode } from '../types';\r\nimport { toPromise } from '../utils';\r\nimport { AppContainer } from './AppContainer';\r\n\r\n/** AppViewProps */\r\nexport interface AppViewProps extends ComponentProps {\r\n\t/** The AppViewService instance */\r\n\tappViewService?: AppViewService;\r\n\r\n\t/** The event bus */\r\n\tbus?: EventBus;\r\n\r\n\t/** the units setting manager */\r\n\tunitsSettingManager?: UnitsSettingsManager;\r\n\r\n\t/** the general setting manager */\r\n\tefbSettingsManager?: EfbSettingsManager;\r\n\r\n\t/** the notification manager */\r\n\tnotificationManager?: NotificationManager;\r\n\r\n\t/** the onboarding manager */\r\n\tonboardingManager?: OnboardingManager;\r\n}\r\n\r\n/**\r\n * ```\r\n * Mandatory class to extend for the App's render method\r\n * It's the entrypoint view of every EFB apps.\r\n * All events from the EFB are sended to this class when the app is visible.\r\n * ```\r\n */\r\nexport abstract class AppView<T extends AppViewProps = AppViewProps>\r\n\textends DisplayComponent<T>\r\n\timplements GamepadEventHandler\r\n{\r\n\tprivate readonly _appViewService?: AppViewService;\r\n\tprivate readonly _bus?: EventBus;\r\n\tprivate readonly _unitsSettingManager?: UnitsSettingsManager;\r\n\tprivate readonly _efbSettingsManager?: EfbSettingsManager;\r\n\tprivate readonly _notificationManager?: NotificationManager;\r\n\tprivate readonly _onboardingManager?: OnboardingManager;\r\n\tprotected readonly rootRef = FSComponent.createRef<HTMLElement>();\r\n\r\n\t/**\r\n\t * Get AppViewService instance\r\n\t * @throws {Error}\r\n\t */\r\n\t@Memoize()\r\n\tprotected get appViewService(): AppViewService {\r\n\t\tconst _appViewService = this._appViewService;\r\n\t\tif (!_appViewService) {\r\n\t\t\tthrow new Error(\r\n\t\t\t\t`Cannot resolve 'appViewService' because none of 'appViewService' and 'bus' props were given.`\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\treturn _appViewService;\r\n\t}\r\n\r\n\t/**\r\n\t * Get EventBus instance\r\n\t * @throws {Error}\r\n\t */\r\n\t@Memoize()\r\n\tprotected get bus(): EventBus {\r\n\t\tconst _bus = this._bus;\r\n\t\tif (!_bus) {\r\n\t\t\tthrow new Error(`Cannot resolve 'bus' because none of 'appViewService' and 'bus' props were given.`);\r\n\t\t}\r\n\r\n\t\treturn _bus;\r\n\t}\r\n\r\n\t/**\r\n\t * Get units setting manager instance\r\n\t * @throws {Error}\r\n\t */\r\n\t@Memoize()\r\n\tprotected get unitsSettingManager(): UnitsSettingsManager {\r\n\t\tconst _unitsSettingManager = this._unitsSettingManager;\r\n\t\tif (_unitsSettingManager === undefined) {\r\n\t\t\tthrow new Error(`Cannot resolve 'unitsSettingManager'`);\r\n\t\t}\r\n\r\n\t\treturn _unitsSettingManager;\r\n\t}\r\n\r\n\t/**\r\n\t * Get general setting manager instance\r\n\t * @throws {Error}\r\n\t */\r\n\t@Memoize()\r\n\tprotected get efbSettingsManager(): EfbSettingsManager {\r\n\t\tconst _efbSettingsManager = this._efbSettingsManager;\r\n\t\tif (_efbSettingsManager === undefined) {\r\n\t\t\tthrow new Error(`Cannot resolve 'efbSettingsManager'`);\r\n\t\t}\r\n\r\n\t\treturn _efbSettingsManager;\r\n\t}\r\n\r\n\t/**\r\n\t * EFB notification manager\r\n\t * @returns a unique efbNotificationManager instance\r\n\t */\r\n\tpublic get notificationManager(): NotificationManager {\r\n\t\tconst notificationManager = this._notificationManager;\r\n\r\n\t\tif (!notificationManager) {\r\n\t\t\tthrow new Error('Notification manager is not defined');\r\n\t\t}\r\n\r\n\t\treturn notificationManager;\r\n\t}\r\n\r\n\t/** Get onboarding manager instance\r\n\t * @throws {Error}\r\n\t */\r\n\t@Memoize()\r\n\tprotected get onboardingManager(): OnboardingManager {\r\n\t\tconst _onboardingManager = this._onboardingManager;\r\n\t\tif (!_onboardingManager) {\r\n\t\t\tthrow new Error(`Cannot resolve 'onboardingManager'`);\r\n\t\t}\r\n\r\n\t\treturn _onboardingManager;\r\n\t}\r\n\r\n\tpublic constructor(props: T) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis._appViewService = props.appViewService || (props.bus ? new AppViewService(props.bus) : undefined);\r\n\t\tthis._bus = this._appViewService?.bus;\r\n\t\tthis._unitsSettingManager = props.unitsSettingManager;\r\n\t\tthis._efbSettingsManager = props.efbSettingsManager;\r\n\t\tthis._notificationManager = props.notificationManager;\r\n\t\tthis._onboardingManager = props.onboardingManager;\r\n\t}\r\n\r\n\t/**\r\n\t * Called once when the view is opened for the first time.\r\n\t */\r\n\tpublic onOpen(): void {\r\n\t\tthis._appViewService?.onOpen();\r\n\t}\r\n\r\n\t/**\r\n\t * Called once when the view is destroyed.\r\n\t */\r\n\tpublic onClose(): void {\r\n\t\tthis._appViewService?.onClose();\r\n\t}\r\n\r\n\t/**\r\n\t * Called each time the view is resumed.\r\n\t */\r\n\tpublic onResume(): void {\r\n\t\tthis._appViewService?.onResume();\r\n\t}\r\n\r\n\t/**\r\n\t * Called each time the view is closed.\r\n\t */\r\n\tpublic onPause(): void {\r\n\t\tthis._appViewService?.onPause();\r\n\t}\r\n\r\n\t/**\r\n\t * On Update loop - It update the `AppViewService` if it is used.\r\n\t * @param time in milliseconds\r\n\t */\r\n\tpublic onUpdate(time: number): void {\r\n\t\tthis._appViewService?.update(time);\r\n\t}\r\n\r\n\t/**\r\n\t * Define the view the app should show immediatly after being initialized.\r\n\t */\r\n\tprotected readonly defaultView?: string;\r\n\r\n\t/**\r\n\t * Callback to register all views the app might use.\r\n\t */\r\n\tprotected registerViews(): void {\r\n\t\t//\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t * TODO : Need to be documented after Gamepad integration\r\n\t */\r\n\tpublic routeGamepadInteractionEvent(gamepadEvent: GamepadEvents): void {\r\n\t\tthis._appViewService?.routeGamepadInteractionEvent(gamepadEvent);\r\n\t}\r\n\r\n\tprotected pageKeyActions = new Map<Lowercase<string>, (args: Nullable<string[]>) => Promiseable<void | string>>();\r\n\r\n\t/**\r\n\t * @internal\r\n\t * @param key custom page key defined in `pageKeyActions`\r\n\t * @param args array of arguments given to the defined callback\r\n\t */\r\n\tpublic handlePageKeyAction(key: Nullable<Lowercase<string>>, args: Nullable<string[]>): void {\r\n\t\tif (key === null) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst action = this.pageKeyActions.get(key);\r\n\t\tif (action === undefined) {\r\n\t\t\tconsole.error(`Key \"${key}\" doesn't exists.`);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\ttoPromise(action(args)).catch((reason) => {\r\n\t\t\tconsole.error(`handlePageKeyAction Error for key \"${key}\"`, reason);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * If using EFB's AppViewService, this method returns an AppContainer binded to AppViewService.\r\n\t * Otherwise it can be customized with plain JSX/TSX or custom view service, etc...\r\n\t *\r\n\t * @example\r\n\t * Surrounding AppContainer with a custom class:\r\n\t * ```ts\r\n\t * public render(): TVNode<HTMLDivElement> {\r\n\t * \treturn <div class=\"my-custom-class\">{super.render()}</div>;\r\n\t * }\r\n\t * ```\r\n\t * @example\r\n\t * Here's an plain JSX/TSX example:\r\n\t * ```ts\r\n\t * public render(): TVNode<HTMLSpanElement> {\r\n\t * \treturn <span>Hello World!</span>;\r\n\t * }\r\n\t * ```\r\n\t */\r\n\tpublic render(): TVNode<NodeInstance, T> {\r\n\t\treturn <AppContainer appViewService={this.appViewService} />;\r\n\t}\r\n\r\n\t/** @inheritdoc */\r\n\tpublic onAfterRender(node: VNode): void {\r\n\t\tsuper.onAfterRender(node);\r\n\r\n\t\tthis.registerViews();\r\n\t\tif (this.defaultView) {\r\n\t\t\tthis._appViewService?.initialize(this.defaultView);\r\n\t\t}\r\n\t}\r\n\r\n\t/** @internal */\r\n\tpublic destroy(): void {\r\n\t\tthis._appViewService?.unload();\r\n\t\tsuper.destroy();\r\n\t}\r\n}\r\n", "interface MemoizeArgs {\n\texpiring?: number;\n\thashFunction?: boolean | ((...args: any[]) => any);\n\ttags?: string[];\n}\n\nexport function Memoize(args?: MemoizeArgs | MemoizeArgs['hashFunction']) {\n\tlet hashFunction: MemoizeArgs['hashFunction'];\n\tlet duration: MemoizeArgs['expiring'];\n\tlet tags: MemoizeArgs['tags'];\n\n\tif (typeof args === 'object') {\n\t\thashFunction = args.hashFunction;\n\t\tduration = args.expiring;\n\t\ttags = args.tags;\n\t} else {\n\t\thashFunction = args;\n\t}\n\n\treturn (target: Object, propertyKey: string, descriptor: TypedPropertyDescriptor<any>) => {\n\t\tif (descriptor.value != null) {\n\t\t\tdescriptor.value = getNewFunction(descriptor.value, hashFunction, duration, tags);\n\t\t} else if (descriptor.get != null) {\n\t\t\tdescriptor.get = getNewFunction(descriptor.get, hashFunction, duration, tags);\n\t\t} else {\n\t\t\tthrow 'Only put a Memoize() decorator on a method or get accessor.';\n\t\t}\n\t};\n}\n\nexport function MemoizeExpiring(expiring: number, hashFunction?: MemoizeArgs['hashFunction']) {\n\treturn Memoize({\n\t\texpiring,\n\t\thashFunction\n\t});\n}\n\nconst clearCacheTagsMap: Map<string, Map<any, any>[]> = new Map();\n\nexport function clear (tags: string[]): number {\n\tconst cleared: Set<Map<any, any>> = new Set();\n\tfor (const tag of tags) {\n\t\tconst maps = clearCacheTagsMap.get(tag);\n\t\tif (maps) {\n\t\t\tfor (const mp of maps) {\n\t\t\t\tif (!cleared.has(mp)) {\n\t\t\t\t\tmp.clear();\n\t\t\t\t\tcleared.add(mp);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn cleared.size;\n}\n\nfunction getNewFunction(originalMethod: () => void, hashFunction?: MemoizeArgs['hashFunction'], duration: number = 0, tags?: MemoizeArgs['tags']) {\n\tconst propMapName = Symbol(`__memoized_map__`);\n\n\t// The function returned here gets called instead of originalMethod.\n\treturn function (...args: any[]) {\n\t\tlet returnedValue: any;\n\n\t\t// Get or create map\n\t\tif (!this.hasOwnProperty(propMapName)) {\n\t\t\tObject.defineProperty(this, propMapName, {\n\t\t\t\tconfigurable: false,\n\t\t\t\tenumerable: false,\n\t\t\t\twritable: false,\n\t\t\t\tvalue: new Map<any, any>()\n\t\t\t});\n\t\t}\n\t\tlet myMap: Map<any, any> = this[propMapName];\n\n\t\tif (Array.isArray(tags)) {\n\t\t\tfor (const tag of tags) {\n\t\t\t\tif (clearCacheTagsMap.has(tag)) {\n\t\t\t\t\tclearCacheTagsMap.get(tag).push(myMap);\n\t\t\t\t} else {\n\t\t\t\t\tclearCacheTagsMap.set(tag, [myMap]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (hashFunction || args.length > 0 || duration > 0) {\n\t\t\tlet hashKey: any;\n\n\t\t\t// If true is passed as first parameter, will automatically use every argument, passed to string\n\t\t\tif (hashFunction === true) {\n\t\t\t\thashKey = args.map(a => a.toString()).join('!');\n\t\t\t} else if (hashFunction) {\n\t\t\t\thashKey = hashFunction.apply(this, args);\n\t\t\t} else {\n\t\t\t\thashKey = args[0];\n\t\t\t}\n\n\t\t\tconst timestampKey = `${hashKey}__timestamp`;\n\t\t\tlet isExpired: boolean = false;\n\t\t\tif (duration > 0) {\n\t\t\t\tif (!myMap.has(timestampKey)) {\n\t\t\t\t\t// \"Expired\" since it was never called before\n\t\t\t\t\tisExpired = true;\n\t\t\t\t} else {\n\t\t\t\t\tlet timestamp = myMap.get(timestampKey);\n\t\t\t\t\tisExpired = (Date.now() - timestamp) > duration;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (myMap.has(hashKey) && !isExpired) {\n\t\t\t\treturnedValue = myMap.get(hashKey);\n\t\t\t} else {\n\t\t\t\treturnedValue = originalMethod.apply(this, args);\n\t\t\t\tmyMap.set(hashKey, returnedValue);\n\t\t\t\tif (duration > 0) {\n\t\t\t\t\tmyMap.set(timestampKey, Date.now());\n\t\t\t\t}\n\t\t\t}\n\n\t\t} else {\n\t\t\tconst hashKey = this;\n\t\t\tif (myMap.has(hashKey)) {\n\t\t\t\treturnedValue = myMap.get(hashKey);\n\t\t\t} else {\n\t\t\t\treturnedValue = originalMethod.apply(this, args);\n\t\t\t\tmyMap.set(hashKey, returnedValue);\n\t\t\t}\n\t\t}\n\n\t\treturn returnedValue;\n\t};\n}\n", "/** A service to manager an application views  */\r\nimport {\r\n\tArrayUtils,\r\n\tComponentProps,\r\n\tDisplayComponent,\r\n\tEventBus,\r\n\tFSComponent,\r\n\tNodeReference,\r\n\tSubject,\r\n\tSubscribable,\r\n\tSubscribableMapFunctions,\r\n\tSubscription,\r\n\tVNode,\r\n} from '@microsoft/msfs-sdk';\r\nimport { GamepadEvents } from '../Gamepad';\r\nimport { GamepadUiView, UiView, UiViewProps } from '../UiView';\r\nimport { ViewBootMode, ViewSuspendMode } from '../UiView/UiViewLifecycle';\r\nimport { TVNode } from '../types';\r\nimport { Valuable, value } from '../utils';\r\nimport { AppViewContainer } from './AppContainer';\r\nimport { toString, where } from '../sub';\r\n\r\n/** {@link UiView} type. Can be set to page or popup */\r\nexport type ViewType = 'page' | 'popup';\r\n\r\ntype UiViewRef = null | UiView | GamepadUiView<HTMLElement>;\r\n\r\n/** The {@link UiView} entry interface */\r\nexport interface UiViewEntry<Ref = UiViewRef> {\r\n\t/** key of the {@link UiView}  */\r\n\treadonly key: string;\r\n\r\n\t/** Closure to render the view */\r\n\treadonly render: () => TVNode<UiView<UiViewProps>, UiViewProps>;\r\n\r\n\t/** The {@link UiView} vNode callback*/\r\n\tvNode: Valuable<TVNode<UiView<UiViewProps>, UiViewProps>>;\r\n\r\n\t/** Reference to the view */\r\n\tref: Ref;\r\n\r\n\t/** Reference to the container */\r\n\tcontainerRef: NodeReference<AppViewWrapper>;\r\n\r\n\t/** State of the view's visibility */\r\n\treadonly isVisible: Subject<boolean>;\r\n\r\n\t/** The view-stack layer the view is in, if any */\r\n\treadonly layer: Subject<number>;\r\n\r\n\t/** The view type this entry's view is currently opened as: page, popup, or base. */\r\n\treadonly type: Subject<ViewType>;\r\n\r\n\t/** Is the view initiated. */\r\n\tisInit: boolean;\r\n\r\n\t/** the UiView viewOptions. Defaults to COLD BootMode and SLEEP SuspendMode */\r\n\treadonly viewOptions: ViewOptions;\r\n}\r\n\r\n/** Publicly consumable ViewEntry interface to disallow the visibility to be mutated from outside of AppViewService */\r\nexport type PublicUiViewEntry<Ref = UiViewRef> = Pick<UiViewEntry<Ref>, 'key' | 'ref'>;\r\n\r\n/**\r\n * UiView lifecycle options.\r\n * @param BootMode {@link ViewBootMode}: specifies action when the UiView is created\r\n * @param SuspendMode {@link ViewSuspendMode}: specifies action when the UiView is paused\r\n */\r\nexport interface ViewOptions {\r\n\tBootMode: ViewBootMode;\r\n\tSuspendMode: ViewSuspendMode;\r\n}\r\n\r\n/**\r\n * @param BootMode defaults to {@link ViewBootMode} COLD\r\n * @param SuspendMode defaults to {@link ViewSuspendMode} SLEEP\r\n */\r\nconst defaultViewOptions: ViewOptions = {\r\n\tBootMode: ViewBootMode.COLD,\r\n\tSuspendMode: ViewSuspendMode.SLEEP,\r\n};\r\n\r\ntype OnEvent = 'pause' | 'resume';\r\n\r\n/**\r\n * Handle and track page/popup usage for an App\r\n */\r\nexport class AppViewService {\r\n\t/** Keeps track of registered views with the {@link registerView} method  */\r\n\tprivate readonly registeredUiViewEntries: Map<string, UiViewEntry> = new Map();\r\n\r\n\tprivate appViewRef?: AppViewContainer;\r\n\r\n\t/** keeps track of {@link UiViewEntry} history */\r\n\tprivate readonly appViewStack: UiViewEntry[] = [];\r\n\r\n\tprivate registeredUiViewPromises: Array<Promise<void>> = [];\r\n\r\n\tprivate hasInitialized = false;\r\n\r\n\tpublic readonly bus: EventBus;\r\n\tprotected readonly goHomeSub: Subscription;\r\n\r\n\tpublic constructor(bus: EventBus) {\r\n\t\tthis.bus = bus;\r\n\r\n\t\tthis.goHomeSub = this.bus.on(\r\n\t\t\t'_efb_appviewservice_go_home',\r\n\t\t\t() => {\r\n\t\t\t\tconst steps = this.appViewStack.length - 1;\r\n\t\t\t\tif (steps >= 1) {\r\n\t\t\t\t\tthis.goBack(steps);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\ttrue\r\n\t\t);\r\n\t}\r\n\r\n\tpublic onOpen(): void {\r\n\t\tthis.goHomeSub.resume();\r\n\t\tthis.activeUiViewEntry?.ref?.onOpen();\r\n\t}\r\n\r\n\tpublic onClose(): void {\r\n\t\tthis.goHomeSub.pause();\r\n\t\tthis.activeUiViewEntry?.ref?.onClose();\r\n\t}\r\n\r\n\tpublic onResume(): void {\r\n\t\tthis.goHomeSub.resume();\r\n\t\tthis.activeUiViewEntry?.ref?.onResume();\r\n\t}\r\n\r\n\tpublic onPause(): void {\r\n\t\tthis.goHomeSub.pause();\r\n\t\tthis.activeUiViewEntry?.ref?.onPause();\r\n\t}\r\n\r\n\t/**\r\n\t * Registers and renders a view (page or popup) to be opened by the service.\r\n\t * @param key The UiView string key.\r\n\t * @param type The view type\r\n\t * @param vNodeFactory A function that returns a {@link UiView} VNode for the key\r\n\t * @param options The {@link UiView} {@link ViewOptions}\r\n\t * @returns UiViewEntry\r\n\t */\r\n\tprotected registerView(\r\n\t\tkey: string,\r\n\t\ttype: ViewType,\r\n\t\tvNodeFactory: () => TVNode<UiView<UiViewProps>, UiViewProps>,\r\n\t\toptions?: Partial<ViewOptions>\r\n\t): UiViewEntry<UiViewRef> {\r\n\t\tif (this.registeredUiViewEntries.has(key)) {\r\n\t\t\tthrow new Error(`View \"${key}\" is already used`);\r\n\t\t} else if (typeof vNodeFactory !== 'function') {\r\n\t\t\tthrow new Error('vNodeFactory has to be a function returning a VNode');\r\n\t\t}\r\n\r\n\t\tconst viewOptions: ViewOptions = Object.assign({}, defaultViewOptions, options);\r\n\r\n\t\tconst appViewEntry: UiViewEntry = {\r\n\t\t\tkey,\r\n\t\t\trender: vNodeFactory,\r\n\t\t\tvNode: vNodeFactory,\r\n\t\t\tref: null,\r\n\t\t\tcontainerRef: FSComponent.createRef<AppViewWrapper>(),\r\n\t\t\tisVisible: Subject.create<boolean>(false),\r\n\t\t\tlayer: Subject.create(-1),\r\n\t\t\ttype: Subject.create<ViewType>(type),\r\n\t\t\tisInit: false,\r\n\t\t\tviewOptions,\r\n\t\t};\r\n\r\n\t\tif (viewOptions.BootMode === ViewBootMode.HOT) {\r\n\t\t\tthis.initViewEntry(appViewEntry);\r\n\t\t}\r\n\r\n\t\tthis.registeredUiViewEntries.set(key, appViewEntry);\r\n\r\n\t\treturn appViewEntry;\r\n\t}\r\n\r\n\tpublic registerPage(\r\n\t\tkey: string,\r\n\t\tvNodeFactory: () => TVNode<UiView<UiViewProps>, UiViewProps>,\r\n\t\toptions?: Partial<ViewOptions>\r\n\t): UiViewEntry<UiViewRef> {\r\n\t\treturn this.registerView(key, 'page', vNodeFactory, options);\r\n\t}\r\n\r\n\tpublic registerPopup(\r\n\t\tkey: string,\r\n\t\tvNodeFactory: () => TVNode<UiView<UiViewProps>, UiViewProps>,\r\n\t\toptions?: Partial<ViewOptions>\r\n\t): UiViewEntry<UiViewRef> {\r\n\t\treturn this.registerView(key, 'popup', vNodeFactory, options);\r\n\t}\r\n\r\n\tprivate async killView(viewEntry: UiViewEntry): Promise<void> {\r\n\t\tif (viewEntry.isInit === false) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (this.appViewStack.find((view) => view.key === viewEntry.key)) {\r\n\t\t\tthrow new Error('You must close your view before killing it');\r\n\t\t}\r\n\r\n\t\tviewEntry.isInit = false;\r\n\t\tviewEntry.ref?.destroy();\r\n\t\tviewEntry.containerRef.instance.destroy();\r\n\r\n\t\tviewEntry.ref = null;\r\n\t\tviewEntry.containerRef = FSComponent.createRef<AppViewWrapper>();\r\n\r\n\t\tviewEntry.vNode = viewEntry.render.bind(viewEntry);\r\n\r\n\t\treturn new Promise<void>((resolve) => {\r\n\t\t\tif (viewEntry.viewOptions.BootMode === ViewBootMode.HOT) {\r\n\t\t\t\tthis.initViewEntry(viewEntry);\r\n\t\t\t}\r\n\r\n\t\t\tresolve();\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * @param entry a {@link UiViewEntry}\r\n\t * @param shouldOpen opens the view on initialization, defaults to false\r\n\t */\r\n\tprivate initViewEntry(entry: UiViewEntry, shouldOpen = false): void {\r\n\t\tif (entry.isInit) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tentry.isInit = true;\r\n\t\tentry.vNode = value(entry.vNode);\r\n\t\tentry.ref = entry.vNode.instance;\r\n\r\n\t\tthis.appViewRef?.renderView(\r\n\t\t\t<AppViewWrapper\r\n\t\t\t\tviewName={entry.key}\r\n\t\t\t\tisVisible={entry.isVisible}\r\n\t\t\t\ttype={entry.type}\r\n\t\t\t\tlayer={entry.layer}\r\n\t\t\t\tref={entry.containerRef}\r\n\t\t\t>\r\n\t\t\t\t{entry.vNode}\r\n\t\t\t</AppViewWrapper>\r\n\t\t);\r\n\r\n\t\tshouldOpen && entry.ref.onOpen();\r\n\t}\r\n\r\n\t/**\r\n\t * Destroys every view in registered view entries and resets the view stack.\r\n\t */\r\n\tpublic unload(): void {\r\n\t\tthis.registeredUiViewPromises = [];\r\n\t\tfor (const viewEntry of this.registeredUiViewEntries.values()) {\r\n\t\t\tviewEntry.ref?.destroy();\r\n\t\t}\r\n\t\tthis.registeredUiViewEntries.clear();\r\n\t\tthis.appViewStack.splice(0, this.appViewStack.length);\r\n\t\tthis.hasInitialized = false;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param homePageUiViewKey the string key of the {@link UiView}\r\n\t * @returns a Promise resolving when all pages are initialized\r\n\t */\r\n\tpublic async initialize(homePageUiViewKey: string): Promise<void> {\r\n\t\tif (this.hasInitialized) {\r\n\t\t\treturn Promise.resolve();\r\n\t\t}\r\n\r\n\t\treturn Promise.all(this.registeredUiViewPromises).then(() => {\r\n\t\t\t// Populate the view stack with its respective home page\r\n\t\t\tthis.initializeAppViewStack(homePageUiViewKey);\r\n\r\n\t\t\tthis.hasInitialized = true;\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * @returns the current active view entry.\r\n\t */\r\n\tprivate get activeUiViewEntry(): UiViewEntry | undefined {\r\n\t\tconst activeViewEntry: UiViewEntry | undefined = ArrayUtils.peekLast(this.appViewStack);\r\n\t\t/*if (!activeViewEntry) {\r\n\t\t\tthrow new Error('AppViewService: attempting to access the top view of an empty view stack');\r\n\t\t}*/\r\n\t\treturn activeViewEntry;\r\n\t}\r\n\r\n\tprivate readonly _currentUiView: Subject<UiViewEntry | null> = Subject.create<UiViewEntry | null>(null);\r\n\t/** The page that is currently open in the active view stack. */\r\n\tpublic readonly currentUiView: Subscribable<UiViewEntry | null> = this._currentUiView;\r\n\r\n\tprivate readonly eventListener: Record<\r\n\t\tOnEvent,\r\n\t\tArray<{ key: string; callback: (view?: PublicUiViewEntry) => void }>\r\n\t> = {\r\n\t\tpause: [],\r\n\t\tresume: [],\r\n\t};\r\n\r\n\tpublic on(event: OnEvent, viewKey: string, callback: (view?: PublicUiViewEntry) => void): this {\r\n\t\tif (!this.registeredUiViewEntries.has(viewKey)) {\r\n\t\t\tconsole.error('Cannot listen for a non registered view.');\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tthis.eventListener[event].push({ key: viewKey, callback });\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Handles logic associated with changing the open page.\r\n\t * @param page Page to close\r\n\t */\r\n\tprivate handleCloseView(page: UiViewEntry | undefined): void {\r\n\t\tif (!page) return;\r\n\r\n\t\tpage.ref?.onPause();\r\n\t\tthis.eventListener.pause.forEach((e) => e.key === page.key && e.callback(page));\r\n\t\tpage.isVisible.set(false);\r\n\t\tthis._currentUiView.set(null);\r\n\r\n\t\tif (page.viewOptions.SuspendMode === ViewSuspendMode.TERMINATE) {\r\n\t\t\tsetTimeout(() => this.killView(page));\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Handles logic associated with changing the open page.\r\n\t * @param page Page to open\r\n\t */\r\n\tprivate handleOpenView(page: UiViewEntry | undefined): void {\r\n\t\tif (!page) return;\r\n\r\n\t\tpage.ref?.onResume();\r\n\t\tthis.eventListener.resume.forEach((e) => e.key === page.key && e.callback(page));\r\n\t\tpage.isVisible.set(true);\r\n\t\tthis._currentUiView.set(page);\r\n\t}\r\n\r\n\t/**\r\n\t * Populate the view stack with its respective home page.\r\n\t * @param mainPageUiViewKey the key of the home page\r\n\t */\r\n\tprivate initializeAppViewStack(mainPageUiViewKey: string): void {\r\n\t\tthis.open(mainPageUiViewKey);\r\n\t}\r\n\r\n\t/**\r\n\t * @param key the {@link UiView} string key\r\n\t * @returns the {@link UiViewEntry} corresponding to the key\r\n\t * @throws if the {@link UiViewEntry} doesn't exists\r\n\t */\r\n\tprivate getUiViewEntry<Ref = UiViewRef>(key: string): UiViewEntry<Ref> {\r\n\t\tconst appViewEntry = this.registeredUiViewEntries.get(key);\r\n\t\tif (!appViewEntry) {\r\n\t\t\tthrow new Error(`${key} wasn't registered as a view`);\r\n\t\t}\r\n\t\treturn appViewEntry as UiViewEntry<Ref>;\r\n\t}\r\n\r\n\t/**\r\n\t * Called by AppContainer to pass in the refs to the view.\r\n\t * Should only be called once.\r\n\t * @param appViewRef The app view ref.\r\n\t */\r\n\tpublic onAppContainerRendered(appViewRef: AppViewContainer): void {\r\n\t\tthis.appViewRef = appViewRef;\r\n\t}\r\n\r\n\t/**\r\n\t * Opens a {@link UiView} as a page and adds it to the stack.\r\n\t * @param key The UiView string key\r\n\t * @returns the {@link PublicUiViewEntry} entry of the {@link UiView}\r\n\t * @deprecated This method has been deprecated in favor of using {@link AppViewService.open}.\r\n\t */\r\n\tpublic openPage<Ref = UiViewRef>(key: string): PublicUiViewEntry<Ref> {\r\n\t\treturn this.open<Ref>(key);\r\n\t}\r\n\r\n\t/**\r\n\t * Opens a {@link UiView} as a popup.\r\n\t * The {@link UiView} will be brought to the top of the current view stack as the active view\r\n\t * @param key The UiView string key\r\n\t * @returns the {@link PublicUiViewEntry} entry of the {@link UiView}\r\n\t * @deprecated This method has been deprecated in favor of using {@link AppViewService.open}.\r\n\t */\r\n\tpublic openPopup<Ref = UiViewRef>(key: string): PublicUiViewEntry<Ref> {\r\n\t\treturn this.open<Ref>(key);\r\n\t}\r\n\r\n\tpublic open<Ref = UiViewRef>(key: string): PublicUiViewEntry<Ref> {\r\n\t\tconst viewEntry = this.advanceViewStack<Ref>(key);\r\n\r\n\t\treturn viewEntry;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the most recent previous history state of the view stack\r\n\t * @param steps The count of steps you wants to back in history.\r\n\t * @returns the {@link PublicUiViewEntry} entry of the previous {@link UiView}\r\n\t */\r\n\tpublic goBack(): PublicUiViewEntry | undefined;\r\n\tpublic goBack(steps: number): PublicUiViewEntry | undefined;\r\n\tpublic goBack(steps?: number): PublicUiViewEntry | undefined {\r\n\t\tsteps ??= 1;\r\n\r\n\t\tif (steps <= 0) {\r\n\t\t\tthrow new RangeError(`Steps must be superior to 0.`);\r\n\t\t} else if (steps >= this.appViewStack.length) {\r\n\t\t\tthrow new RangeError(`Steps can't be superior to ${this.appViewStack.length} when called.`);\r\n\t\t}\r\n\r\n\t\tconst activeViewEntry = this.activeUiViewEntry;\r\n\r\n\t\tif (this.appViewStack.length > steps && activeViewEntry) {\r\n\t\t\tthis.eventListener.pause.forEach((e) => e.key === activeViewEntry.key && e.callback(activeViewEntry));\r\n\r\n\t\t\tconst viewsToOpen: UiViewEntry[] = [];\r\n\t\t\tconst viewsToClose: UiViewEntry[] = [];\r\n\r\n\t\t\twhile (steps--) {\r\n\t\t\t\tconst view = this.appViewStack.pop();\r\n\t\t\t\tif (view) {\r\n\t\t\t\t\tviewsToClose.push(view);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Get all views from the end of stack to the first page we found\r\n\t\t\tlet i = this.appViewStack.length;\r\n\t\t\tdo {\r\n\t\t\t\tviewsToOpen.push(this.appViewStack[--i]);\r\n\t\t\t} while (i > 0 && this.appViewStack[i].type.get() !== 'page');\r\n\r\n\t\t\tfor (const page of viewsToClose) {\r\n\t\t\t\tthis.handleCloseView(page);\r\n\t\t\t}\r\n\r\n\t\t\t// Open views from page to popups\r\n\t\t\tfor (const page of viewsToOpen.reverse()) {\r\n\t\t\t\tthis.handleOpenView(page);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn this.activeUiViewEntry;\r\n\t}\r\n\r\n\t/**\r\n\t * Handles view stack logic\r\n\t * @param key the {@link UiView} string key\r\n\t * @returns the current {@link UiViewEntry}\r\n\t */\r\n\tprivate advanceViewStack<Ref = UiViewRef>(key: string): UiViewEntry<Ref> {\r\n\t\tconst viewEntry = this.getUiViewEntry(key);\r\n\r\n\t\tif (this.appViewStack.includes(viewEntry)) {\r\n\t\t\tif (this.activeUiViewEntry !== viewEntry) {\r\n\t\t\t\tthrow new Error(\"Page or popup is already in the viewstack and can't be opened twice\");\r\n\t\t\t}\r\n\r\n\t\t\treturn viewEntry as UiViewEntry<Ref>;\r\n\t\t}\r\n\r\n\t\tswitch (viewEntry.type.get()) {\r\n\t\t\tcase 'page':\r\n\t\t\t\tfor (const page of [...this.appViewStack].reverse()) {\r\n\t\t\t\t\tthis.handleCloseView(page);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'popup':\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\tthis.appViewStack.push(viewEntry);\r\n\r\n\t\tthis.openView(viewEntry);\r\n\r\n\t\tthis.handleOpenView(viewEntry);\r\n\r\n\t\treturn viewEntry as UiViewEntry<Ref>;\r\n\t}\r\n\r\n\t/**\r\n\t * Handle logic associated with opening a view\r\n\t * @param view the view to open.\r\n\t */\r\n\tprivate openView(view: UiViewEntry): void {\r\n\t\tif (!view.isInit) {\r\n\t\t\tthis.initViewEntry(view, true);\r\n\t\t}\r\n\r\n\t\tconst index: number = this.appViewStack.indexOf(view);\r\n\r\n\t\tif (index < 0) {\r\n\t\t\tthrow new Error(`AppViewService: view not found in view stack: ${view.key}`);\r\n\t\t}\r\n\r\n\t\tview.layer.set(index);\r\n\t}\r\n\r\n\t/**\r\n\t * Updates all the pages/popups that are initialized and visible\r\n\t * @param time timestamp\r\n\t */\r\n\tpublic update(time: number): void {\r\n\t\tthis.registeredUiViewEntries.forEach((UiView) => {\r\n\t\t\tif (UiView.isInit && UiView.isVisible.get()) {\r\n\t\t\t\tUiView.ref?.onUpdate(time);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Routes the event to the current {@link UiView}\r\n\t * @param gamepadEvent the {@link GamepadEvents}\r\n\t */\r\n\tpublic routeGamepadInteractionEvent(gamepadEvent: GamepadEvents): void {\r\n\t\tconst _currentUiView = this.activeUiViewEntry;\r\n\r\n\t\tif (_currentUiView?.ref instanceof GamepadUiView) {\r\n\t\t\t_currentUiView.ref.handleGamepadEvent(gamepadEvent);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * The AppViewWrapper props interface\r\n */\r\ninterface AppViewWrapperProps extends ComponentProps {\r\n\t/** wrapper visibility */\r\n\tisVisible: Subscribable<boolean>;\r\n\r\n\t/** The name of the view */\r\n\tviewName: string;\r\n\r\n\t/** the view type of the view */\r\n\ttype: Subscribable<ViewType>;\r\n\r\n\t/** the layer index of the view */\r\n\tlayer: Subscribable<number>;\r\n}\r\n\r\nclass AppViewWrapper extends DisplayComponent<AppViewWrapperProps> {\r\n\tprivate readonly rootRef = FSComponent.createRef<HTMLDivElement>();\r\n\r\n\tpublic render(): VNode {\r\n\t\treturn (\r\n\t\t\t<div\r\n\t\t\t\tref={this.rootRef}\r\n\t\t\t\tclass={{\r\n\t\t\t\t\t'ui-view': true,\r\n\t\t\t\t\t[this.props.viewName]: true,\r\n\t\t\t\t\thidden: this.props.isVisible.map(SubscribableMapFunctions.not()),\r\n\t\t\t\t\tpage: this.props.type.map(where<ViewType>('page')),\r\n\t\t\t\t\tpopup: this.props.type.map(where<ViewType>('popup')),\r\n\t\t\t\t}}\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\t'z-index': this.props.layer.map(toString()),\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t{this.props.children}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n\tpublic destroy(): void {\r\n\t\tconst root = this.rootRef.getOrDefault();\r\n\t\tif (root !== null) {\r\n\t\t\troot.parentNode?.removeChild(root);\r\n\t\t}\r\n\r\n\t\tsuper.destroy();\r\n\t}\r\n}\r\n", "import { FSComponent, Subject, Subscribable, VNode } from '@microsoft/msfs-sdk';\r\nimport {\r\n\tChainResponsabilityGamepadUiViewEventHandler,\r\n\tGamepadEvents,\r\n\tGamepadUiComponent,\r\n\tGamepadUiParser,\r\n} from '../Gamepad';\r\nimport { UiView, UiViewProps } from './UiView';\r\n\r\nexport abstract class GamepadUiView<T extends HTMLElement, P extends UiViewProps = UiViewProps>\r\n\textends UiView<P>\r\n\timplements ChainResponsabilityGamepadUiViewEventHandler\r\n{\r\n\tprotected readonly gamepadUiViewRef = FSComponent.createRef<T>();\r\n\tprivate readonly gamepadUiParser: GamepadUiParser = new GamepadUiParser();\r\n\r\n\tprivate readonly _nextHandler = Subject.create<GamepadUiComponent<HTMLElement> | undefined>(undefined);\r\n\tpublic readonly nextHandler = this._nextHandler as Subscribable<GamepadUiComponent<HTMLElement> | undefined>;\r\n\r\n\tpublic onAfterRender(node: VNode): void {\r\n\t\tsuper.onAfterRender(node);\r\n\r\n\t\tthis.gamepadUiParser.bindVNodeReference(node);\r\n\t}\r\n\r\n\tpublic setNextGamepadEventHandler(ref: GamepadUiComponent<HTMLElement>): void {\r\n\t\tthis._nextHandler.set(ref);\r\n\t}\r\n\r\n\tpublic deletePreviousGamepadEventHandler(): void {\r\n\t\tthis._nextHandler.set(undefined);\r\n\t}\r\n\r\n\tpublic handleGamepadEvent(_gamepadEvent: GamepadEvents): void {\r\n\t\tif (_gamepadEvent === GamepadEvents.BUTTON_B) {\r\n\t\t\tthis.gamepadUiParser.pushButtonB();\r\n\t\t}\r\n\r\n\t\tconst nextHandler = this._nextHandler.get();\r\n\r\n\t\tif (nextHandler !== undefined) {\r\n\t\t\treturn nextHandler.handleGamepadEvent(_gamepadEvent);\r\n\t\t}\r\n\r\n\t\tswitch (_gamepadEvent) {\r\n\t\t\tcase GamepadEvents.JOYDIR_UP:\r\n\t\t\t\tthis.gamepadUiParser.goUp();\r\n\t\t\t\tbreak;\r\n\t\t\tcase GamepadEvents.JOYDIR_RIGHT:\r\n\t\t\t\tthis.gamepadUiParser.goRight();\r\n\t\t\t\tbreak;\r\n\t\t\tcase GamepadEvents.JOYDIR_DOWN:\r\n\t\t\t\tthis.gamepadUiParser.goDown();\r\n\t\t\t\tbreak;\r\n\t\t\tcase GamepadEvents.JOYDIR_LEFT:\r\n\t\t\t\tthis.gamepadUiParser.goLeft();\r\n\t\t\t\tbreak;\r\n\t\t\tcase GamepadEvents.BUTTON_A:\r\n\t\t\t\tthis.gamepadUiParser.pushButtonA();\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n}\r\n", "/** @internal */\r\nexport enum GamepadEvents {\r\n\tJOYSTICK_LEFT_X_AXIS = 'JOYSTICK_LEFT_X_AXIS',\r\n\tJOYSTICK_LEFT_Y_AXIS = 'JOYSTICK_LEFT_Y_AXIS',\r\n\tJOYSTICK_RIGHT_X_AXIS = 'JOYSTICK_RIGHT_X_AXIS',\r\n\tJOYSTICK_RIGHT_Y_AXIS = 'JOYSTICK_RIGH_Y_AXIS',\r\n\tBUTTON_A = 'BUTTON_A',\r\n\tBUTTON_B = 'BUTTON_B',\r\n\tBUTTON_Y = 'BUTTON_Y',\r\n\tBUTTON_X = 'BUTTON_X',\r\n\tJOYDIR_LEFT = 'JOYDIR_LEFT',\r\n\tJOYDIR_RIGHT = 'JOYDIR_RIGHT',\r\n\tJOYDIR_UP = 'JOYDIR_UP',\r\n\tJOYDIR_DOWN = 'JOYDIR_DOWN',\r\n}\r\n\r\ntype Event<T extends string> = {\r\n\tname: T;\r\n\tvalue: boolean | number;\r\n};\r\n\r\ntype EventMap = {\r\n\t[name: string]: Event<string>;\r\n};\r\n\r\ntype UniqueEventArray<T extends string> = Array<Event<T>>;\r\n\r\n/** @internal */\r\nexport type LeftJoystickEvents = UniqueEventArray<\r\n\t'joystick_left_x_axis' | 'joystick_left_y_axis' | 'joystick_left_push'\r\n>;\r\n\r\n/** @internal */\r\nexport type RightJoystickEvents = UniqueEventArray<\r\n\t'joystick_right_x_axis' | 'joystick_right_y_axis' | 'joystick_right_push'\r\n>;\r\n\r\n/** @internal */\r\nexport type DirpadEvents = UniqueEventArray<\r\n\t'dirpad_top_push' | 'dirpad_right_push' | 'dirpad_bottom_push' | 'dirpad_left_push'\r\n>;\r\n\r\n/**\r\n * Je veux pouvoir cr\u00E9er des assemblages d'events qui indiquent\r\n * les genre d'events que je peux recevoir.\r\n * Donc un set d'event est un la d\u00E9finition de plusieurs\r\n */\r\n", "import {\r\n\tComponentProps,\r\n\tDisplayComponent,\r\n\tFSComponent,\r\n\tNodeReference,\r\n\tSubject,\r\n\tSubscribable,\r\n\tSubscribableUtils,\r\n\tSubscription,\r\n\tVNode,\r\n} from '@microsoft/msfs-sdk';\r\nimport { AppViewService } from '../AppView';\r\nimport { ClassProp, StyleProp } from '../types/ComponentProps';\r\nimport { mergeClassProp } from '../utils';\r\nimport { ChainResponsabilityGamepadUiViewEventHandler } from './GamepadContext';\r\nimport { GamepadEvents } from './GamepadEvents';\r\n\r\n/** @internal */\r\nexport interface GamepadUiComponentProps extends ComponentProps {\r\n\t/** the app view service */\r\n\tappViewService?: AppViewService;\r\n\r\n\t/** @deprecated */\r\n\tcustomClass?: ClassProp;\r\n\r\n\t/** Additionnal custom class */\r\n\tclass?: ClassProp;\r\n\r\n\tstyle?: StyleProp;\r\n\r\n\t/** The callback to call on push button A */\r\n\tonButtonAPressed?(): void;\r\n\r\n\t/** The callback to call on push button B */\r\n\tonButtonBPressed?(): void;\r\n\r\n\t/** an optional parameter to disable the component */\r\n\tdisabled?: boolean | Subscribable<boolean>;\r\n\r\n\tvisible?: boolean | Subscribable<boolean>;\r\n\r\n\tonboardingStepId?: string;\r\n}\r\n\r\n/** @internal */\r\nexport abstract class GamepadUiComponent<\r\n\t\tT extends HTMLElement,\r\n\t\tP extends GamepadUiComponentProps = GamepadUiComponentProps\r\n\t>\r\n\textends DisplayComponent<P>\r\n\timplements ChainResponsabilityGamepadUiViewEventHandler\r\n{\r\n\tprivate static FOCUS_CLASS = 'focus';\r\n\r\n\tprivate readonly _gamepadUiSubs: Subscription[] = [];\r\n\r\n\tpublic readonly gamepadUiComponentRef: NodeReference<T> = FSComponent.createRef();\r\n\r\n\tprivate readonly _nextHandler = Subject.create<GamepadUiComponent<T> | undefined>(undefined);\r\n\tpublic readonly nextHandler = this._nextHandler as Subscribable<GamepadUiComponent<T> | undefined>;\r\n\r\n\tprotected readonly disabled = SubscribableUtils.toSubscribable(this.props.disabled ?? false, true);\r\n\tprivate readonly visible = SubscribableUtils.toSubscribable(this.props.visible ?? true, true);\r\n\r\n\tprivate readonly componentClickListener = this.handleComponentClick.bind(this);\r\n\r\n\tpublic setNextGamepadEventHandler(ref: GamepadUiComponent<T>): void {\r\n\t\tthis._nextHandler.set(ref);\r\n\t}\r\n\r\n\tpublic deletePreviousGamepadEventHandler(): void {\r\n\t\tthrow new Error('Method not implemented.');\r\n\t}\r\n\r\n\tpublic handleGamepadEvent(gamepadEvent: GamepadEvents): void {\r\n\t\tconsole.log(`Received ${gamepadEvent} in handleMoveEvent`);\r\n\t}\r\n\r\n\tpublic onAfterRender(node: VNode): void {\r\n\t\tsuper.onAfterRender(node);\r\n\r\n\t\tconst customClasses = mergeClassProp(this.props.customClass, this.props.class);\r\n\t\tObject.keys(customClasses).forEach((className) => {\r\n\t\t\tconst subscribable = SubscribableUtils.toSubscribable(customClasses[className], true);\r\n\t\t\tthis._gamepadUiSubs.push(\r\n\t\t\t\tsubscribable.sub((value: boolean) => {\r\n\t\t\t\t\tthis.gamepadUiComponentRef.instance.classList.toggle(className, value);\r\n\t\t\t\t}, true)\r\n\t\t\t);\r\n\t\t});\r\n\r\n\t\t//const customStyles = mergeClassProp(this.props.style);\r\n\t\t//Object.keys(customStyles);\r\n\r\n\t\tthis._gamepadUiSubs.push(\r\n\t\t\tthis.visible.sub((isVisible) => {\r\n\t\t\t\tthis.gamepadUiComponentRef.instance.hidden = !isVisible;\r\n\t\t\t}, true)\r\n\t\t);\r\n\r\n\t\tif (SubscribableUtils.isSubscribable(this.props.disabled)) {\r\n\t\t\tthis._gamepadUiSubs.push(\r\n\t\t\t\tthis.props.disabled.sub((disabled) => {\r\n\t\t\t\t\tdisabled ? this.disable() : this.enable();\r\n\t\t\t\t}, true)\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\tthis.props.disabled ? this.disable() : this.enable();\r\n\t\t}\r\n\r\n\t\twindow.addEventListener('click', this.componentClickListener);\r\n\r\n\t\tif (this.props.onboardingStepId === undefined) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.gamepadUiComponentRef.instance.setAttribute('id', this.props.onboardingStepId);\r\n\t}\r\n\r\n\tprivate handleComponentClick(e: Event): void {\r\n\t\tif (!this.gamepadUiComponentRef.instance.contains(e.target as Node)) {\r\n\t\t\tthis.onClickOutOfComponent(e);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic onButtonAPressed(): void {\r\n\t\tif (this.props.onButtonAPressed !== undefined) {\r\n\t\t\tthis.props.onButtonAPressed();\r\n\t\t}\r\n\t}\r\n\r\n\tpublic onButtonBPressed(): void {\r\n\t\tif (this.props.onButtonBPressed !== undefined) {\r\n\t\t\tthis.props.onButtonBPressed();\r\n\t\t}\r\n\t}\r\n\r\n\tprotected onClickOutOfComponent(_e: Event): void {\r\n\t\treturn;\r\n\t}\r\n\r\n\tprivate enable(): void {\r\n\t\tthis.gamepadUiComponentRef.instance.removeAttribute('disabled');\r\n\t}\r\n\r\n\tprivate disable(): void {\r\n\t\tthis.gamepadUiComponentRef.instance.setAttribute('disabled', '');\r\n\t}\r\n\r\n\tpublic show(): void {\r\n\t\tthis.gamepadUiComponentRef.instance.style.visibility = 'visible';\r\n\t}\r\n\r\n\tpublic hide(): void {\r\n\t\tthis.gamepadUiComponentRef.instance.style.visibility = 'hidden';\r\n\t}\r\n\r\n\tpublic toggleFocus(value?: boolean): void {\r\n\t\tif (value !== undefined) {\r\n\t\t\tif (value === true) {\r\n\t\t\t\tthis.gamepadUiComponentRef.instance.classList.add(GamepadUiComponent.FOCUS_CLASS);\r\n\t\t\t} else {\r\n\t\t\t\tthis.gamepadUiComponentRef.instance.classList.remove(GamepadUiComponent.FOCUS_CLASS);\r\n\t\t\t}\r\n\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.gamepadUiComponentRef.instance.classList.toggle(GamepadUiComponent.FOCUS_CLASS);\r\n\t}\r\n\r\n\tpublic getComponentRect(): DOMRect {\r\n\t\treturn this.gamepadUiComponentRef.instance.getBoundingClientRect();\r\n\t}\r\n\r\n\tpublic destroy(): void {\r\n\t\tthis._gamepadUiSubs.forEach((s) => s.destroy());\r\n\r\n\t\twindow.removeEventListener('click', this.componentClickListener);\r\n\t\tsuper.destroy();\r\n\t}\r\n}\r\n", "import { FSComponent, NodeReference, VNode } from '@microsoft/msfs-sdk';\r\nimport { GamepadUiComponent, GamepadUiComponentProps } from './GamepadUiComponent';\r\n\r\ntype Direction = 'UP' | 'RIGHT' | 'DOWN' | 'LEFT';\r\ntype RectSide = 'top' | 'right' | 'bottom' | 'left';\r\ntype RectSideTopLeftCorner = Exclude<RectSide, 'right' | 'bottom'>;\r\n\r\n/** @internal */\r\nexport class GamepadUiParser {\r\n\tprivate currentElement?: null | NodeReference<GamepadUiComponent<HTMLElement, GamepadUiComponentProps>>;\r\n\tprivate gamepadUiViewVNode: VNode | null = null;\r\n\r\n\t/** On veut focus le premier \u00E9l\u00E9ment */\r\n\tpublic bindVNodeReference(gamepadUiViewVNode: VNode): void {\r\n\t\tthis.gamepadUiViewVNode = gamepadUiViewVNode;\r\n\r\n\t\tthis.focusFirstElement();\r\n\t}\r\n\r\n\tprivate focusFirstElement(): void {\r\n\t\tif ((this.currentElement = this.findFirstElement())) {\r\n\t\t\tthis.currentElement.instance.toggleFocus(true);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic goUp(): void {\r\n\t\tthis.goDir('UP');\r\n\t}\r\n\r\n\tpublic goRight(): void {\r\n\t\tthis.goDir('RIGHT');\r\n\t}\r\n\r\n\tpublic goDown(): void {\r\n\t\tthis.goDir('DOWN');\r\n\t}\r\n\r\n\tpublic goLeft(): void {\r\n\t\tthis.goDir('LEFT');\r\n\t}\r\n\r\n\tpublic pushButtonA(): void {\r\n\t\tthis.currentElement?.instance.onButtonAPressed();\r\n\t}\r\n\r\n\tpublic pushButtonB(): void {\r\n\t\tthis.currentElement?.instance.onButtonBPressed();\r\n\t}\r\n\r\n\tprivate goDir(dir: Direction): void {\r\n\t\tconst HTMLElementList = this.parseDOM();\r\n\r\n\t\tif (!this.currentElement || HTMLElementList === null) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst nextElement = this.findClosestNode(this.currentElement, HTMLElementList, dir);\r\n\r\n\t\tif (nextElement !== null) {\r\n\t\t\tthis.currentElement.instance.toggleFocus(false);\r\n\t\t\tthis.currentElement = nextElement;\r\n\t\t\tthis.currentElement.instance.toggleFocus(true);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate parseDOM(): null | Array<NodeReference<GamepadUiComponent<HTMLElement>>> {\r\n\t\tif (this.gamepadUiViewVNode === null) {\r\n\t\t\tthrow new Error(`Can't parse DOM, VNode is null`);\r\n\t\t}\r\n\r\n\t\tconst VNodeList: Array<NodeReference<GamepadUiComponent<HTMLElement>>> = [];\r\n\t\tFSComponent.visitNodes(this.gamepadUiViewVNode, (node) => {\r\n\t\t\tif (node.instance instanceof GamepadUiComponent) {\r\n\t\t\t\tconst ref = FSComponent.createRef<GamepadUiComponent<HTMLElement>>();\r\n\t\t\t\tref.instance = node.instance;\r\n\r\n\t\t\t\tVNodeList.push(ref);\r\n\t\t\t}\r\n\r\n\t\t\treturn false;\r\n\t\t});\r\n\r\n\t\treturn VNodeList.length ? VNodeList : null;\r\n\t}\r\n\r\n\tprivate findFirstElement(): null | NodeReference<GamepadUiComponent<HTMLElement>> {\r\n\t\tconst HTMLElementList = this.parseDOM();\r\n\r\n\t\tif (HTMLElementList === null) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\treturn HTMLElementList[0];\r\n\t}\r\n\r\n\t/** On r\u00E9duit la liste dont le top est en dessous du bottom du current node. */\r\n\tprivate findClosestNode(\r\n\t\tcurrentGamepadUiComponent: NodeReference<GamepadUiComponent<HTMLElement>>,\r\n\t\tgamepadUiComponentList: Array<NodeReference<GamepadUiComponent<HTMLElement>>>,\r\n\t\tdirection: Direction\r\n\t): NodeReference<GamepadUiComponent<HTMLElement>> | null {\r\n\t\tlet candidateIndex = -1;\r\n\r\n\t\tswitch (direction) {\r\n\t\t\tcase 'UP':\r\n\t\t\t\tcandidateIndex = this.findBestCandidate(\r\n\t\t\t\t\tcurrentGamepadUiComponent,\r\n\t\t\t\t\tgamepadUiComponentList,\r\n\t\t\t\t\t'bottom',\r\n\t\t\t\t\t'top'\r\n\t\t\t\t);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'RIGHT':\r\n\t\t\t\tcandidateIndex = this.findBestCandidate(\r\n\t\t\t\t\tcurrentGamepadUiComponent,\r\n\t\t\t\t\tgamepadUiComponentList,\r\n\t\t\t\t\t'left',\r\n\t\t\t\t\t'right'\r\n\t\t\t\t);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'DOWN':\r\n\t\t\t\tcandidateIndex = this.findBestCandidate(\r\n\t\t\t\t\tcurrentGamepadUiComponent,\r\n\t\t\t\t\tgamepadUiComponentList,\r\n\t\t\t\t\t'top',\r\n\t\t\t\t\t'bottom'\r\n\t\t\t\t);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'LEFT':\r\n\t\t\t\tcandidateIndex = this.findBestCandidate(\r\n\t\t\t\t\tcurrentGamepadUiComponent,\r\n\t\t\t\t\tgamepadUiComponentList,\r\n\t\t\t\t\t'right',\r\n\t\t\t\t\t'left'\r\n\t\t\t\t);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\tif (candidateIndex !== -1 && candidateIndex < gamepadUiComponentList.length) {\r\n\t\t\treturn gamepadUiComponentList[candidateIndex];\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\tprivate findBestCandidate(\r\n\t\tcurrentGamepadUiComponent: NodeReference<GamepadUiComponent<HTMLElement>>,\r\n\t\tgamepadUiComponentList: Array<NodeReference<GamepadUiComponent<HTMLElement>>>,\r\n\t\tside1: RectSide,\r\n\t\tside2: RectSide\r\n\t): number {\r\n\t\tconst htmlElementCandidates: Array<NodeReference<GamepadUiComponent<HTMLElement>>> = [];\r\n\r\n\t\tlet closestDistance = Infinity;\r\n\t\tlet candidateIndex = -1;\r\n\r\n\t\tconst currentHTMLElementRect: DOMRect = currentGamepadUiComponent.instance.getComponentRect();\r\n\r\n\t\tgamepadUiComponentList.forEach((htmlElement, index) => {\r\n\t\t\tconst htmlElementRect: DOMRect = htmlElement.instance.getComponentRect();\r\n\t\t\tif (this.isRectPosValid(htmlElementRect, currentHTMLElementRect, side1, side2, false)) {\r\n\t\t\t\tif (\r\n\t\t\t\t\t!htmlElementCandidates.some((htmlElementCandidate) =>\r\n\t\t\t\t\t\tthis.isRectPosValid(\r\n\t\t\t\t\t\t\thtmlElementRect,\r\n\t\t\t\t\t\t\thtmlElementCandidate.instance.getComponentRect(),\r\n\t\t\t\t\t\t\tside1,\r\n\t\t\t\t\t\t\tside1,\r\n\t\t\t\t\t\t\ttrue\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t)\r\n\t\t\t\t) {\r\n\t\t\t\t\thtmlElementCandidates.push(htmlElement);\r\n\r\n\t\t\t\t\tconst corner: RectSideTopLeftCorner = side1 === 'bottom' || side1 === 'top' ? 'left' : 'top';\r\n\t\t\t\t\tconst distance = this.distances1D(htmlElementRect, currentHTMLElementRect, corner);\r\n\r\n\t\t\t\t\tif (distance <= closestDistance) {\r\n\t\t\t\t\t\tclosestDistance = distance;\r\n\t\t\t\t\t\tcandidateIndex = index;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn candidateIndex;\r\n\t}\r\n\r\n\tprivate isRectPosValid(rect1: DOMRect, rect2: DOMRect, side1: RectSide, side2: RectSide, strict: boolean): boolean {\r\n\t\tif (side1 === 'bottom' || side1 === 'right') {\r\n\t\t\tif (strict) {\r\n\t\t\t\treturn rect1[side1] < rect2[side2];\r\n\t\t\t} else {\r\n\t\t\t\treturn rect1[side1] <= rect2[side2];\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (strict) {\r\n\t\t\t\treturn rect1[side1] > rect2[side2];\r\n\t\t\t} else {\r\n\t\t\t\treturn rect1[side1] >= rect2[side2];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate distances1D(rect1: DOMRect, rect2: DOMRect, side: RectSideTopLeftCorner): number {\r\n\t\treturn Math.abs(rect2[side] - rect1[side]);\r\n\t}\r\n}\r\n", "import { ComponentProps, DisplayComponent, EventBus, Subscribable } from '@microsoft/msfs-sdk';\r\nimport { AppViewService } from '../AppView';\r\n\r\nexport interface UiViewProps extends ComponentProps {\r\n\t/** The AppViewService instance */\r\n\tappViewService?: AppViewService;\r\n\r\n\t/** The event bus */\r\n\tbus?: EventBus;\r\n}\r\n\r\nexport abstract class UiView<P extends UiViewProps = UiViewProps> extends DisplayComponent<P> {\r\n\tpublic abstract readonly tabName: string | Subscribable<string>;\r\n\r\n\t// eslint-disable-next-line @typescript-eslint/no-empty-function\r\n\tpublic onOpen(): void {}\r\n\r\n\t// eslint-disable-next-line @typescript-eslint/no-empty-function\r\n\tpublic onClose(): void {}\r\n\r\n\t// eslint-disable-next-line @typescript-eslint/no-empty-function\r\n\tpublic onResume(): void {}\r\n\r\n\t// eslint-disable-next-line @typescript-eslint/no-empty-function\r\n\tpublic onPause(): void {}\r\n\r\n\t// eslint-disable-next-line @typescript-eslint/no-empty-function, @typescript-eslint/no-unused-vars\r\n\tpublic onUpdate(time: number): void {}\r\n\r\n\tpublic destroy(): void {\r\n\t\tsuper.destroy();\r\n\t}\r\n}\r\n", "/**\r\n * Define the behavior of the view when registered.\r\n */\r\nexport enum ViewBootMode {\r\n\t/** No JSX created until view is shown. */\r\n\tCOLD,\r\n\t/** JSX is mounted even if view is not shown */\r\n\tHOT,\r\n}\r\n\r\n/**\r\n * Define the behavior of the view when it is closed.\r\n */\r\nexport enum ViewSuspendMode {\r\n\t/** Closed without being destroyed. */\r\n\tSLEEP,\r\n\t/** Closed then destroyed. */\r\n\tTERMINATE,\r\n}\r\n", "import { FSComponent, MutableSubscribable, Subject, SubscribableUtils, VNode } from '@microsoft/msfs-sdk';\r\nimport { GamepadUiComponent, GamepadUiComponentProps } from '../../Gamepad';\r\nimport { AccordionButton } from './AccordionButton';\r\n\r\nexport interface AbstractAccordionProps extends GamepadUiComponentProps {\r\n\tisFolded?: boolean | MutableSubscribable<boolean>;\r\n}\r\n\r\nexport abstract class AbstractAccordion<\r\n\tT extends AbstractAccordionProps = AbstractAccordionProps\r\n> extends GamepadUiComponent<HTMLDivElement, T> {\r\n\tprotected readonly isFolded = SubscribableUtils.isMutableSubscribable(this.props.isFolded)\r\n\t\t? this.props.isFolded\r\n\t\t: Subject.create(this.props.isFolded ?? true);\r\n\r\n\tprotected abstract renderHeader(): VNode;\r\n\r\n\tprotected renderBody(): VNode {\r\n\t\treturn <>{this.props.children}</>;\r\n\t}\r\n\r\n\tpublic render(): VNode {\r\n\t\treturn (\r\n\t\t\t<div class={{ accordion: true, folded: this.isFolded }} ref={this.gamepadUiComponentRef}>\r\n\t\t\t\t<AccordionButton\r\n\t\t\t\t\tisFolded={this.isFolded}\r\n\t\t\t\t\tdisabled={this.props.disabled}\r\n\t\t\t\t\tcustomClass=\"accordion-button abstract-button--full-width\"\r\n\t\t\t\t\tcallback={(): void => {\r\n\t\t\t\t\t\tthis.isFolded.set(!this.isFolded.get());\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t{this.renderHeader()}\r\n\t\t\t\t</AccordionButton>\r\n\t\t\t\t<div class={{ 'menu-content': true, hide: this.isFolded }}>{this.renderBody()}</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n", "import { DisplayComponent, FSComponent, Subject, Subscribable, Subscription, VNode } from '@microsoft/msfs-sdk';\r\nimport { mergeClassProp } from '../../utils';\r\nimport { Button, ButtonProps } from '../Button';\r\nimport { IconElement } from '../IconElement';\r\n\r\ninterface AccordionButtonProps extends ButtonProps {\r\n\tisFolded: Subscribable<boolean>;\r\n}\r\n\r\n/** @internal */\r\nexport class AccordionButton extends DisplayComponent<AccordionButtonProps> {\r\n\tprivate readonly iconStyle = Subject.create('rotate(0)');\r\n\r\n\tprivate readonly isFoldedSubscription: Subscription = this.props.isFolded.sub((isFolded) => {\r\n\t\tthis.iconStyle.set(`rotate(${isFolded ? 0 : -0.5}turn)`);\r\n\t}, true);\r\n\r\n\tpublic render(): VNode {\r\n\t\treturn (\r\n\t\t\t<Button\r\n\t\t\t\tclass={mergeClassProp('accordion-button', this.props.class)}\r\n\t\t\t\tstyle={this.props.style}\r\n\t\t\t\tcallback={this.props.callback}\r\n\t\t\t\thoverable={this.props.hoverable}\r\n\t\t\t\tselected={this.props.selected}\r\n\t\t\t\tstate={this.props.state} // Deprecated\r\n\t\t\t\tdisabled={this.props.disabled}\r\n\t\t\t>\r\n\t\t\t\t<div class=\"icon-container\" style={{ transform: this.iconStyle }}>\r\n\t\t\t\t\t<IconElement\r\n\t\t\t\t\t\tclass=\"accordion-button-icon\"\r\n\t\t\t\t\t\turl={`coui://html_ui/efb_ui/efb_os/Assets/icons/Arrow.svg`}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"title\">{this.props.children}</div>\r\n\t\t\t</Button>\r\n\t\t);\r\n\t}\r\n\r\n\tpublic destroy(): void {\r\n\t\tthis.isFoldedSubscription.destroy();\r\n\r\n\t\tsuper.destroy();\r\n\t}\r\n}\r\n", "import { FSComponent, MappedSubject, SubscribableUtils, VNode } from '@microsoft/msfs-sdk';\r\nimport { GamepadUiComponent, GamepadUiComponentProps } from '../../Gamepad';\r\nimport { MaybeSubscribable, Nullable } from '../../types';\r\nimport { mergeClassProp } from '../../utils';\r\n\r\nexport interface ButtonProps extends GamepadUiComponentProps {\r\n\tcallback?: (e: MouseEvent) => void;\r\n\r\n\thoverable?: MaybeSubscribable<boolean>;\r\n\tselected?: MaybeSubscribable<boolean>;\r\n\r\n\t/** @deprecated */\r\n\tstate?: MaybeSubscribable<boolean>;\r\n}\r\n\r\nexport class Button<T extends ButtonProps = ButtonProps> extends GamepadUiComponent<HTMLButtonElement, T> {\r\n\tprotected readonly isButtonDisabled = SubscribableUtils.toSubscribable(this.props.disabled ?? false, true);\r\n\r\n\tprotected readonly isButtonHoverable = MappedSubject.create(\r\n\t\t([isHoverable, isDisabled]) => {\r\n\t\t\treturn isHoverable && !isDisabled;\r\n\t\t},\r\n\t\tSubscribableUtils.toSubscribable(this.props.hoverable ?? true, true),\r\n\t\tthis.isButtonDisabled\r\n\t);\r\n\r\n\t// FIXME Uncomment the following when removing the deprecated props\r\n\t// protected readonly isButtonSelected = SubscribableUtils.toSubscribable(this.props.selected ?? false, true);\r\n\tprotected readonly isButtonSelected = MappedSubject.create(\r\n\t\t([isSelected, state]) => isSelected || state,\r\n\t\tSubscribableUtils.toSubscribable(this.props.selected ?? false, true),\r\n\t\tSubscribableUtils.toSubscribable(this.props.state ?? false, true)\r\n\t);\r\n\r\n\t/**\r\n\t * @deprecated Old way to render the button. Instead of extending the `Button` class, render your content as a children of `<Button>...</Button>`.\r\n\t */\r\n\tprotected buttonRender(): Nullable<VNode> {\r\n\t\treturn null;\r\n\t}\r\n\r\n\tpublic render(): VNode {\r\n\t\treturn (\r\n\t\t\t<button\r\n\t\t\t\tref={this.gamepadUiComponentRef}\r\n\t\t\t\tclass={mergeClassProp(\r\n\t\t\t\t\t'button',\r\n\t\t\t\t\t'abstract-button', // deprecated\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\thoverable: this.isButtonHoverable,\r\n\t\t\t\t\t\tselected: this.isButtonSelected,\r\n\t\t\t\t\t},\r\n\t\t\t\t\tthis.props.class\r\n\t\t\t\t)}\r\n\t\t\t\tstyle={this.props.style}\r\n\t\t\t>\r\n\t\t\t\t<div class=\"disabled-layer\"></div>\r\n\t\t\t\t{this.props.children}\r\n\t\t\t\t{this.buttonRender() /* Deprecated */}\r\n\t\t\t</button>\r\n\t\t);\r\n\t}\r\n\r\n\tpublic onAfterRender(node: VNode): void {\r\n\t\tsuper.onAfterRender(node);\r\n\r\n\t\tif (this.props.callback) {\r\n\t\t\tthis.gamepadUiComponentRef.instance.onclick = (event: MouseEvent): void => {\r\n\t\t\t\tif (this.isButtonDisabled.get() === true) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.props.callback?.call(this, event);\r\n\t\t\t};\r\n\t\t}\r\n\t}\r\n\r\n\tpublic destroy(): void {\r\n\t\tthis.isButtonHoverable.destroy();\r\n\r\n\t\tsuper.destroy();\r\n\t}\r\n}\r\n\r\n/**\r\n * @deprecated AbstractButton has been renamed to Button.\r\n */\r\nexport { Button as AbstractButton, ButtonProps as AbstractButtonProps };\r\n", "import {\r\n\tArraySubject,\r\n\tDisplayComponent,\r\n\tFSComponent,\r\n\tMutableSubscribable,\r\n\tObjectSubject,\r\n\tSubject,\r\n\tSubscribable,\r\n\tSubscribableArray,\r\n\tSubscription,\r\n\tVNode,\r\n} from '@microsoft/msfs-sdk';\r\nimport { GamepadUiComponent, GamepadUiComponentProps } from '../../Gamepad';\r\nimport { TT } from '../../i18n';\r\nimport { mergeClassProp } from '../../utils';\r\nimport { List } from '../List';\r\nimport { Button } from './Button';\r\nimport { TTButtonProps } from './TTButton';\r\n\r\nconst arrowIconPath = 'coui://html_ui/efb_ui/efb_os/Assets/icons/NoMargin/Arrow.svg';\r\n\r\ninterface DropdownButtonProps<T> extends Omit<TTButtonProps, 'key'> {\r\n\ttitle: TTButtonProps['key'];\r\n\r\n\tlistDataset: T[] | SubscribableArray<T>;\r\n\tgetItemLabel: (item: T) => string;\r\n\tonItemClick: (item: T, index: number) => void;\r\n\r\n\tisListVisible?: MutableSubscribable<boolean>;\r\n\tshowArrowIcon?: boolean;\r\n}\r\n\r\nexport class DropdownButton<T = unknown> extends GamepadUiComponent<HTMLDivElement, DropdownButtonProps<T>> {\r\n\tprivate listDataset: SubscribableArray<T> = Array.isArray(this.props.listDataset)\r\n\t\t? ArraySubject.create<T>(this.props.listDataset)\r\n\t\t: this.props.listDataset;\r\n\r\n\tprotected readonly isListVisible = Subject.create<boolean>(false);\r\n\tprotected isListVisibleSub?: Subscription;\r\n\r\n\t/* Close the list when clicking out of it */\r\n\tprotected onClickOutOfComponent(): void {\r\n\t\tthis.isListVisible.set(false);\r\n\t}\r\n\r\n\tpublic onAfterRender(node: VNode): void {\r\n\t\tsuper.onAfterRender(node);\r\n\r\n\t\tthis.isListVisibleSub = this.props.isListVisible?.sub(this.isListVisible.set);\r\n\t}\r\n\r\n\tpublic destroy(): void {\r\n\t\tthis.isListVisibleSub?.destroy();\r\n\r\n\t\tsuper.destroy();\r\n\t}\r\n\r\n\tpublic render(): VNode {\r\n\t\treturn (\r\n\t\t\t<div class=\"dropdown-button\" ref={this.gamepadUiComponentRef}>\r\n\t\t\t\t<DropdownButtonSelector\r\n\t\t\t\t\tclass=\"button--full-width\"\r\n\t\t\t\t\tkey={this.props.title}\r\n\t\t\t\t\tisOpen={this.isListVisible}\r\n\t\t\t\t\ttype={this.props.type}\r\n\t\t\t\t\tcallback={(): void => {\r\n\t\t\t\t\t\tif (this.props.disabled) {\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tthis.isListVisible.set(!this.isListVisible.get());\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tshowArrowIcon={this.props.showArrowIcon}\r\n\t\t\t\t\tdisabled={this.props.disabled}\r\n\t\t\t\t/>\r\n\t\t\t\t<List<T>\r\n\t\t\t\t\tclass=\"dropdown-button-list\"\r\n\t\t\t\t\tdata={this.listDataset}\r\n\t\t\t\t\tisListVisible={this.isListVisible}\r\n\t\t\t\t\tisScrollable\r\n\t\t\t\t\trenderItem={(item: T, index: number): VNode => (\r\n\t\t\t\t\t\t<DropdownButtonListItem\r\n\t\t\t\t\t\t\tname={this.props.getItemLabel(item)}\r\n\t\t\t\t\t\t\tonClick={(): void => {\r\n\t\t\t\t\t\t\t\tthis.isListVisible.set(false);\r\n\r\n\t\t\t\t\t\t\t\tthis.props.onItemClick(item, index);\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t)}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\ninterface DropdownButtonSelectorProps extends TTButtonProps {\r\n\tisOpen: Subscribable<boolean>;\r\n\tshowArrowIcon?: boolean;\r\n}\r\n\r\nclass DropdownButtonSelector extends DisplayComponent<DropdownButtonSelectorProps> {\r\n\tprivate readonly iconScale = 1;\r\n\r\n\tprotected readonly iconStyle = ObjectSubject.create({\r\n\t\ttransform: `scale(${this.iconScale}, ${this.iconScale})`,\r\n\t});\r\n\r\n\tprotected readonly isOpenSub?: Subscription;\r\n\r\n\tpublic constructor(props: DropdownButtonSelectorProps) {\r\n\t\tsuper(props);\r\n\r\n\t\tif (this.props.showArrowIcon) {\r\n\t\t\tthis.isOpenSub = this.props.isOpen.sub((isOpen) => {\r\n\t\t\t\t/*\r\n\t\t\t\t * Theoretically, since the Arrow.svg icon remains the same when it is mirrored on the X axis,\r\n\t\t\t\t * the transform property could be set with a 1-parameter call to the scale function\r\n\t\t\t\t * (e.g. `scale(A) instead of scale(X, Y)`. However, this could not work properly if another\r\n\t\t\t\t * SVG icon is used instead, hence keeping the code as is.\r\n\t\t\t\t */\r\n\t\t\t\tthis.iconStyle.set(\r\n\t\t\t\t\t'transform',\r\n\t\t\t\t\t`scale(${this.iconScale}, ${isOpen ? -1 * this.iconScale : this.iconScale})`\r\n\t\t\t\t);\r\n\t\t\t}, true);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic destroy(): void {\r\n\t\tthis.isOpenSub?.destroy();\r\n\r\n\t\tsuper.destroy();\r\n\t}\r\n\r\n\tpublic render(): VNode {\r\n\t\treturn (\r\n\t\t\t<Button\r\n\t\t\t\tclass={mergeClassProp('dropdown-button-selector', this.props.class)}\r\n\t\t\t\tstyle={this.props.style}\r\n\t\t\t\tcallback={this.props.callback}\r\n\t\t\t\thoverable={this.props.hoverable}\r\n\t\t\t\tselected={this.props.selected}\r\n\t\t\t\tdisabled={this.props.disabled}\r\n\t\t\t>\r\n\t\t\t\t<TT class=\"text bold-text\" key={this.props.key} />\r\n\t\t\t\t{this.props.showArrowIcon && (\r\n\t\t\t\t\t<icon-element\r\n\t\t\t\t\t\tclass=\"dropdown-button-selector-icon\"\r\n\t\t\t\t\t\ticon-url={arrowIconPath}\r\n\t\t\t\t\t\tstyle={this.iconStyle}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)}\r\n\t\t\t</Button>\r\n\t\t);\r\n\t}\r\n}\r\n\r\ninterface DropdownButtonListItemProps extends GamepadUiComponentProps {\r\n\tname: string | Subscribable<string>;\r\n\tonClick: () => void;\r\n}\r\n\r\nclass DropdownButtonListItem extends GamepadUiComponent<HTMLTextAreaElement, DropdownButtonListItemProps> {\r\n\tpublic onAfterRender(node: VNode): void {\r\n\t\tsuper.onAfterRender(node);\r\n\r\n\t\tthis.gamepadUiComponentRef.instance.onclick = this.props.onClick;\r\n\t}\r\n\r\n\tpublic render(): VNode {\r\n\t\treturn (\r\n\t\t\t<div class=\"dropdown-button-list-item\" ref={this.gamepadUiComponentRef}>\r\n\t\t\t\t<TT key={this.props.name} type=\"div\" class=\"text regular-text\" />\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n", "import { DisplayComponent, FSComponent, SubscribableUtils, Subscription, VNode } from '@microsoft/msfs-sdk';\r\nimport { MaybeSubscribable } from '../types';\r\nimport { isFunction } from '../utils';\r\n\r\ntype FormatCallable = (text: string) => string;\r\n\r\nexport interface TTProps {\r\n\tkey: MaybeSubscribable<string>;\r\n\ttype?: string;\r\n\tformat?: FormatCallable | 'upper' | 'uppercase' | 'lower' | 'lowercase' | 'ucfirst' | 'capitalize';\r\n\targuments?: Map<string, MaybeSubscribable<string>>;\r\n}\r\n\r\nexport class TT<P extends TTProps = TTProps> extends DisplayComponent<P> {\r\n\tprivate readonly ref = FSComponent.createRef<HTMLElement>();\r\n\tprivate readonly key = SubscribableUtils.toSubscribable(this.props.key, true);\r\n\tprivate readonly formatter = this.props.format || ((text: string): string => text);\r\n\tprivate reloadSubscription?: Subscription;\r\n\r\n\tprivate readonly subs: Subscription[] = [];\r\n\r\n\tprivate _reloadText(): void {\r\n\t\tconst key = this.key.get();\r\n\r\n\t\tlet translatedKey = key.startsWith('@') || key.startsWith('TT') ? Utils.Translate(key) : key;\r\n\r\n\t\tthis.props.arguments?.forEach((argumentValue: MaybeSubscribable<string>, argumentKey: string) => {\r\n\t\t\tconst argumentValueSub = SubscribableUtils.toSubscribable(argumentValue, true);\r\n\r\n\t\t\ttranslatedKey = translatedKey.replace(argumentKey, argumentValueSub.get());\r\n\t\t});\r\n\r\n\t\tthis.updateText(translatedKey);\r\n\t}\r\n\r\n\tprivate readonly reloadText = this._reloadText.bind(this);\r\n\r\n\tprivate getFormattedText(text: string): string {\r\n\t\tif (isFunction<FormatCallable>(this.formatter)) {\r\n\t\t\treturn this.formatter(text);\r\n\t\t}\r\n\r\n\t\tswitch (this.formatter) {\r\n\t\t\tcase 'upper':\r\n\t\t\tcase 'uppercase':\r\n\t\t\t\treturn text.toUpperCase();\r\n\r\n\t\t\tcase 'lower':\r\n\t\t\tcase 'lowercase':\r\n\t\t\t\treturn text.toLowerCase();\r\n\r\n\t\t\tcase 'ucfirst':\r\n\t\t\t\treturn `${text.charAt(0).toUpperCase()}${text.slice(1)}`;\r\n\r\n\t\t\tcase 'capitalize':\r\n\t\t\t\treturn text.replace(/(^\\w{1})|(\\s+\\w{1})/g, (letter: string) => letter.toUpperCase());\r\n\r\n\t\t\tdefault:\r\n\t\t\t\tconsole.warn(`Format \"${this.props.format}\" is not supported.`);\r\n\t\t\t\treturn text;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate updateText(text: string): void {\r\n\t\tthis.ref.instance.innerText = this.getFormattedText(text);\r\n\t}\r\n\r\n\tpublic render(): VNode {\r\n\t\tconst Tag = this.props.type ?? 'span';\r\n\t\tconst { key: _key, type: _type, format: _format, children: _children, ...props } = this.props;\r\n\r\n\t\treturn <Tag ref={this.ref} {...props}></Tag>;\r\n\t}\r\n\r\n\tpublic onAfterRender(node: VNode): void {\r\n\t\tsuper.onAfterRender(node);\r\n\r\n\t\tthis.props.arguments?.forEach((argumentValue: MaybeSubscribable<string>, argumentKey: string) => {\r\n\t\t\tconst subValue = SubscribableUtils.toSubscribable(argumentValue, true);\r\n\r\n\t\t\tthis.subs.push(subValue.sub(this.reloadText));\r\n\t\t});\r\n\r\n\t\tthis.reloadSubscription = this.key.sub(this.reloadText, true);\r\n\r\n\t\tCoherent.on('RELOAD_LOCALISATION', this.reloadText);\r\n\t}\r\n\r\n\tpublic destroy(): void {\r\n\t\tCoherent.off('RELOAD_LOCALISATION', this.reloadText);\r\n\t\tthis.reloadSubscription?.destroy();\r\n\t\tthis.subs.forEach((sub) => sub.destroy());\r\n\r\n\t\tsuper.destroy();\r\n\t}\r\n}\r\n", "import {\r\n\tFSComponent,\r\n\tSubscribable,\r\n\tSubscribableArray,\r\n\tSubscribableArrayEventType,\r\n\tSubscription,\r\n\tVNode,\r\n} from '@microsoft/msfs-sdk';\r\nimport { GamepadUiComponent, GamepadUiComponentProps } from '../../Gamepad';\r\nimport { StyleProp } from '../../types';\r\n\r\nexport interface ListProps<T> extends GamepadUiComponentProps {\r\n\tdata: SubscribableArray<T>;\r\n\r\n\trenderItem: { (data: T, index: number): VNode | null }; // TODO Handle the nullish-items rendering & deletion\r\n\r\n\tonItemSelected?: (data: T, index: number) => void;\r\n\r\n\tisListVisible?: Subscribable<boolean>;\r\n\r\n\trefreshOnUpdate?: boolean;\r\n\r\n\tisScrollable?: boolean;\r\n\r\n\tstyle?: StyleProp;\r\n}\r\n\r\nexport class List<T = unknown> extends GamepadUiComponent<HTMLDivElement, ListProps<T>> {\r\n\tprivate readonly _itemInstanceRefs: Array<GamepadUiComponent<HTMLElement>> = [];\r\n\r\n\tprivate dataSubs: Subscription[] = [];\r\n\r\n\tpublic onAfterRender(node: VNode): void {\r\n\t\tsuper.onAfterRender(node);\r\n\t\tthis.renderList();\r\n\r\n\t\tthis.dataSubs.push(this.props.data.sub(this.onDataChanged.bind(this)));\r\n\r\n\t\tconst isListVisibleSub = this.props.isListVisible?.sub((isVisible) => {\r\n\t\t\tif (isVisible && this._itemInstanceRefs.length > 0) {\r\n\t\t\t\tthis.show();\r\n\t\t\t} else {\r\n\t\t\t\tthis.hide();\r\n\t\t\t}\r\n\t\t}, true);\r\n\r\n\t\tif (isListVisibleSub) {\r\n\t\t\tthis.dataSubs.push(isListVisibleSub);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic destroy(): void {\r\n\t\tthis.dataSubs.forEach((sub) => sub.destroy());\r\n\r\n\t\tsuper.destroy();\r\n\t}\r\n\r\n\tpublic show(): void {\r\n\t\tthis.gamepadUiComponentRef.instance.classList.remove('hide');\r\n\t}\r\n\r\n\tpublic hide(): void {\r\n\t\tthis.gamepadUiComponentRef.instance.classList.add('hide');\r\n\t}\r\n\r\n\tprivate onDataChanged(index: number, type: SubscribableArrayEventType, item: T | readonly T[] | undefined): void {\r\n\t\tswitch (type) {\r\n\t\t\tcase SubscribableArrayEventType.Added:\r\n\t\t\t\t{\r\n\t\t\t\t\tif (!item) return;\r\n\t\t\t\t\tconst el = this.gamepadUiComponentRef.instance.children.item(index);\r\n\t\t\t\t\tif (Array.isArray(item)) {\r\n\t\t\t\t\t\tfor (let i = 0; i < item.length; i++) {\r\n\t\t\t\t\t\t\tthis.addDomNode(item[i], index + i, el);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.addDomNode(item as T, index, el);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase SubscribableArrayEventType.Removed:\r\n\t\t\t\t{\r\n\t\t\t\t\tif (!item) return;\r\n\t\t\t\t\tif (Array.isArray(item)) {\r\n\t\t\t\t\t\titem.forEach((_) => {\r\n\t\t\t\t\t\t\tthis.removeDomNode(index);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.removeDomNode(index);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase SubscribableArrayEventType.Cleared:\r\n\t\t\t\t{\r\n\t\t\t\t\tfor (const componentRef of this._itemInstanceRefs) {\r\n\t\t\t\t\t\tcomponentRef.destroy();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis._itemInstanceRefs.length = 0;\r\n\t\t\t\t\tthis.gamepadUiComponentRef.instance.innerHTML = '';\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\tif (this.props.refreshOnUpdate) {\r\n\t\t\tthis.renderList();\r\n\t\t} else {\r\n\t\t\tthis.refreshListVisibility();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate addDomNode(item: T, index: number, el: Element | null): void {\r\n\t\tconst node = this.renderListItem(item, index);\r\n\t\tif (!node) return;\r\n\r\n\t\tif (el !== null) {\r\n\t\t\tFSComponent.renderBefore(node, el as never);\r\n\t\t} else {\r\n\t\t\tel = this.gamepadUiComponentRef.instance;\r\n\t\t\tFSComponent.render(node, el as never);\r\n\t\t}\r\n\r\n\t\tif (node.instance !== null) {\r\n\t\t\tthis._itemInstanceRefs.splice(index, 0, node.instance as GamepadUiComponent<HTMLElement>);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate renderListItem(dataItem: T, index: number): VNode | null {\r\n\t\tconst renderedNode = this.props.renderItem(dataItem, index);\r\n\t\tif (\r\n\t\t\trenderedNode &&\r\n\t\t\trenderedNode.instance instanceof GamepadUiComponent &&\r\n\t\t\trenderedNode.instance.gamepadUiComponentRef.instance !== null\r\n\t\t) {\r\n\t\t\treturn renderedNode;\r\n\t\t} else {\r\n\t\t\tthrow new Error('A ListItem must be of type GamepadUiComponent');\r\n\t\t}\r\n\t}\r\n\r\n\tprivate removeDomNode(index: number): void {\r\n\t\tconst child = this.gamepadUiComponentRef.instance.childNodes.item(index);\r\n\t\tthis.gamepadUiComponentRef.instance.removeChild(child);\r\n\r\n\t\tconst removed = this._itemInstanceRefs.splice(index, 1)[0];\r\n\t\tremoved.destroy();\r\n\t}\r\n\r\n\tprivate renderList(): void {\r\n\t\t// Clean destroy existing element before rerendering them\r\n\t\tfor (const componentRef of this._itemInstanceRefs) {\r\n\t\t\tcomponentRef.destroy();\r\n\t\t}\r\n\r\n\t\tthis.gamepadUiComponentRef.instance.textContent = '';\r\n\t\tthis._itemInstanceRefs.length = 0;\r\n\r\n\t\tconst dataLen = this.props.data.length;\r\n\t\tfor (let i = 0; i < dataLen; i++) {\r\n\t\t\tconst vnode = this.renderListItem(this.props.data.get(i), i);\r\n\t\t\tif (vnode) {\r\n\t\t\t\tFSComponent.render(vnode, this.gamepadUiComponentRef.instance);\r\n\t\t\t\tthis._itemInstanceRefs.push(vnode.instance as GamepadUiComponent<HTMLElement>);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.refreshListVisibility();\r\n\t}\r\n\r\n\tprivate refreshListVisibility(): void {\r\n\t\t// TODO: check usage, it was breaking airport runway list\r\n\t\tconst isVisible = this.props.isListVisible?.get() !== false;\r\n\t\tisVisible && this._itemInstanceRefs.length > 0 ? this.show() : this.hide();\r\n\r\n\t\treturn;\r\n\t}\r\n\r\n\tpublic render(): VNode {\r\n\t\treturn (\r\n\t\t\t<div\r\n\t\t\t\tclass={`list ${this.props.isScrollable ? 'scroll-container' : ''}`}\r\n\t\t\t\tstyle={this.props.style}\r\n\t\t\t\tref={this.gamepadUiComponentRef}\r\n\t\t\t></div>\r\n\t\t);\r\n\t}\r\n}\r\n", "import {\r\n\tArraySubject,\r\n\tComputedSubject,\r\n\tFSComponent,\r\n\tMutableSubscribable,\r\n\tSubject,\r\n\tSubscribable,\r\n\tSubscription,\r\n\tVNode,\r\n\tWait,\r\n} from '@microsoft/msfs-sdk';\r\nimport { GamepadUiComponent, GamepadUiComponentProps } from '../../Gamepad';\r\nimport { TVNode } from '../../types';\r\nimport { List } from './List';\r\n\r\nconst arrowIconPath = 'coui://html_ui/efb_ui/efb_os/Assets/icons/NoMargin/Arrow.svg';\r\n\r\ninterface PagingListProps<T> extends GamepadUiComponentProps {\r\n\tdata: ArraySubject<T>;\r\n\r\n\trenderItem: (data: T, index: number) => VNode | null;\r\n\r\n\tmaxItemsPerPage: number;\r\n\r\n\tpageSelected?: MutableSubscribable<number>;\r\n}\r\n\r\nexport class PagingList<T = unknown> extends GamepadUiComponent<HTMLDivElement, PagingListProps<T>> {\r\n\tprotected readonly currentData = ArraySubject.create<T>();\r\n\tprotected readonly previousData = ArraySubject.create<T>();\r\n\tprotected readonly nextData = ArraySubject.create<T>();\r\n\r\n\tprotected readonly firstPage = Subject.create(true);\r\n\tprotected readonly lastPage = Subject.create(false);\r\n\r\n\tprotected numberOfPages = Subject.create(1);\r\n\r\n\tprotected readonly pageSelected = this.props.pageSelected ?? Subject.create<number>(0);\r\n\tprotected previousPageSelected = this.pageSelected.get();\r\n\r\n\tprotected readonly transitionWrapperRef = FSComponent.createRef<HTMLDivElement>();\r\n\tprotected readonly ongoingTransition = Subject.create(false);\r\n\r\n\tpublic onAfterRender(node: VNode): void {\r\n\t\tsuper.onAfterRender(node);\r\n\r\n\t\tthis.props.data.sub(() => this.updateListsData(this.pageSelected.get()));\r\n\t\tthis.pageSelected.sub(this.onPageChanged.bind(this));\r\n\r\n\t\t// Init list arrays\r\n\t\tthis.updateListsData(this.pageSelected.get());\r\n\t}\r\n\r\n\tprotected updateListsData(pageSelected: number): void {\r\n\t\tthis.numberOfPages.set(Math.ceil(this.props.data.length / this.props.maxItemsPerPage));\r\n\r\n\t\tconst start = pageSelected * this.props.maxItemsPerPage;\r\n\t\tconst fullData = this.props.data.getArray();\r\n\r\n\t\tthis.currentData.set(fullData.slice(start, start + this.props.maxItemsPerPage));\r\n\r\n\t\tif (start === 0) {\r\n\t\t\tthis.previousData.clear();\r\n\t\t\tthis.firstPage.set(true);\r\n\t\t} else {\r\n\t\t\tthis.previousData.set(fullData.slice(start - this.props.maxItemsPerPage, start));\r\n\t\t\tthis.firstPage.set(this.previousData.getArray().length === 0);\r\n\t\t}\r\n\r\n\t\tif (start + this.props.maxItemsPerPage > fullData.length) {\r\n\t\t\tthis.nextData.clear();\r\n\t\t\tthis.lastPage.set(true);\r\n\t\t} else {\r\n\t\t\tconst followingStart = start + this.props.maxItemsPerPage;\r\n\t\t\tthis.nextData.set(fullData.slice(followingStart, followingStart + this.props.maxItemsPerPage));\r\n\t\t\tthis.lastPage.set(this.nextData.getArray().length === 0);\r\n\t\t}\r\n\t}\r\n\r\n\tprotected async onPageChanged(newPageSelected: number): Promise<void> {\r\n\t\tif (newPageSelected < 0 || newPageSelected >= this.numberOfPages.get()) {\r\n\t\t\tthis.pageSelected.set(Utils.Clamp(newPageSelected, 0, this.numberOfPages.get() - 1));\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Avoid doing several transition at the same time\r\n\t\tawait Wait.awaitCondition(() => !this.ongoingTransition.get());\r\n\t\tthis.ongoingTransition.set(true);\r\n\r\n\t\tconst gap = newPageSelected - this.previousPageSelected;\r\n\t\tconst side = gap > 0 ? 1 : -1;\r\n\r\n\t\tfor (let i = 0; i < Math.abs(gap); i++) {\r\n\t\t\t// the target page of the unique transition\r\n\t\t\tconst targetPage = this.previousPageSelected + (i + 1) * side;\r\n\t\t\tawait this.doTransition(side, targetPage);\r\n\t\t}\r\n\r\n\t\tthis.previousPageSelected = newPageSelected;\r\n\t\tthis.ongoingTransition.set(false);\r\n\t}\r\n\r\n\tprotected async doTransition(side: -1 | 1, targetPage: number): Promise<void> {\r\n\t\tfor (let i = 5; i < 101; i += 5) {\r\n\t\t\tthis.transitionWrapperRef.instance.style.right = `${100 + i * side}%`;\r\n\t\t\tawait Wait.awaitDelay(1);\r\n\t\t}\r\n\r\n\t\tthis.updateListsData(targetPage);\r\n\t\tthis.transitionWrapperRef.instance.style.right = '100%';\r\n\t}\r\n\r\n\tpublic render(): VNode {\r\n\t\treturn (\r\n\t\t\t<div\r\n\t\t\t\tref={this.gamepadUiComponentRef}\r\n\t\t\t\tclass={{\r\n\t\t\t\t\t'paging-list': true,\r\n\t\t\t\t\t'first-page': this.firstPage,\r\n\t\t\t\t\t'last-page': this.lastPage,\r\n\t\t\t\t\t'ongoing-transition': this.ongoingTransition,\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<div class=\"transition-wrapper\" ref={this.transitionWrapperRef}>\r\n\t\t\t\t\t<List<T> class=\"previous-list\" data={this.previousData} renderItem={this.props.renderItem} />\r\n\t\t\t\t\t<List<T> class=\"main-list\" data={this.currentData} renderItem={this.props.renderItem} />\r\n\t\t\t\t\t<List<T> class=\"following-list\" data={this.nextData} renderItem={this.props.renderItem} />\r\n\t\t\t\t</div>\r\n\t\t\t\t<CarrouselButtons numberOfPages={this.numberOfPages} pageSelected={this.pageSelected} />\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\ninterface CarrouselButtonsProps extends GamepadUiComponentProps {\r\n\tnumberOfPages: Subscribable<number>;\r\n\tpageSelected: MutableSubscribable<number>;\r\n}\r\n\r\nclass CarrouselButtons extends GamepadUiComponent<HTMLDivElement, CarrouselButtonsProps> {\r\n\tprivate pagesSub?: Subscription;\r\n\tprivate buttonsRef: UniqueCarrouselButton[] = [];\r\n\r\n\tpublic onAfterRender(node: VNode): void {\r\n\t\tsuper.onAfterRender(node);\r\n\r\n\t\tthis.pagesSub = this.props.numberOfPages.sub(this.renderButtons.bind(this));\r\n\t}\r\n\r\n\tprotected renderButtons(numPages: number): void {\r\n\t\t// clear all the buttons (TODO, remove and add only what is needed)\r\n\t\tfor (const buttonRef of this.buttonsRef) {\r\n\t\t\tbuttonRef.destroy();\r\n\t\t}\r\n\t\tthis.buttonsRef.length = 0;\r\n\t\tthis.gamepadUiComponentRef.instance.innerHTML = '';\r\n\r\n\t\tfor (let i = 0; i < numPages; i++) {\r\n\t\t\tconst node = (\r\n\t\t\t\t<UniqueCarrouselButton\r\n\t\t\t\t\tselected={ComputedSubject.create(\r\n\t\t\t\t\t\tthis.props.pageSelected,\r\n\t\t\t\t\t\t(pageSelected: number): boolean => pageSelected === i\r\n\t\t\t\t\t)}\r\n\t\t\t\t\tcallBack={(): void => {\r\n\t\t\t\t\t\tthis.props.pageSelected.set(i);\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t);\r\n\t\t\tFSComponent.render(node, this.gamepadUiComponentRef.instance);\r\n\r\n\t\t\tthis.buttonsRef.push(node.instance);\r\n\t\t}\r\n\t}\r\n\r\n\tprotected changePage(increment: -1 | 1): void {\r\n\t\tconst newPageIndex = Utils.Clamp(\r\n\t\t\tthis.props.pageSelected.get() + increment,\r\n\t\t\t0,\r\n\t\t\tthis.props.numberOfPages.get() - 1\r\n\t\t);\r\n\r\n\t\tthis.props.pageSelected.set(newPageIndex);\r\n\t}\r\n\r\n\tpublic destroy(): void {\r\n\t\tthis.pagesSub?.destroy();\r\n\r\n\t\tsuper.destroy();\r\n\t}\r\n\r\n\tpublic render(): TVNode<CarrouselButtons> {\r\n\t\treturn (\r\n\t\t\t<div\r\n\t\t\t\tclass={{\r\n\t\t\t\t\t'carrousel-buttons': true,\r\n\t\t\t\t\thide: ComputedSubject.create(this.props.numberOfPages, (v: number) => v <= 1),\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<CarrouselArrow class=\"left\" callBack={(): void => this.changePage(-1)} />\r\n\t\t\t\t<div ref={this.gamepadUiComponentRef} class=\"buttons-container\" />\r\n\t\t\t\t<CarrouselArrow class=\"right\" callBack={(): void => this.changePage(1)} />\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\ninterface CarrouselArrowProps extends GamepadUiComponentProps {\r\n\tcallBack: () => void;\r\n}\r\n\r\nclass CarrouselArrow extends GamepadUiComponent<HTMLDivElement, CarrouselArrowProps> {\r\n\tpublic onAfterRender(node: VNode): void {\r\n\t\tsuper.onAfterRender(node);\r\n\r\n\t\tthis.gamepadUiComponentRef.instance.onclick = this.props.callBack;\r\n\t}\r\n\r\n\tpublic render(): VNode {\r\n\t\treturn (\r\n\t\t\t<div class=\"carrousel-arrow\" ref={this.gamepadUiComponentRef}>\r\n\t\t\t\t<icon-element icon-url={arrowIconPath} />\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\ninterface UniqueCarrouselButtonProps extends GamepadUiComponentProps {\r\n\tcallBack: () => void;\r\n\tselected: Subscribable<boolean>;\r\n}\r\n\r\nclass UniqueCarrouselButton extends GamepadUiComponent<HTMLDivElement, UniqueCarrouselButtonProps> {\r\n\tpublic onAfterRender(node: VNode): void {\r\n\t\tsuper.onAfterRender(node);\r\n\r\n\t\tthis.gamepadUiComponentRef.instance.onclick = this.props.callBack;\r\n\t}\r\n\r\n\tpublic render(): VNode {\r\n\t\treturn (\r\n\t\t\t<div\r\n\t\t\t\tref={this.gamepadUiComponentRef}\r\n\t\t\t\tclass={{ 'unique-carrousel-button': true, selected: this.props.selected }}\r\n\t\t\t/>\r\n\t\t);\r\n\t}\r\n}\r\n", "import { ComponentProps, DisplayComponent, FSComponent, VNode } from '@microsoft/msfs-sdk';\r\nimport './ScrollBar.css';\r\n\r\n/**\r\n * The ScrollBar props interface\r\n * @internal\r\n */\r\nexport interface ScrollBarProps extends ComponentProps {\r\n\t/** an optionnal custom class */\r\n\tcustomClass?: string;\r\n}\r\n\r\nexport class ScrollBar extends DisplayComponent<ComponentProps> {\r\n\tprivate readonly svgRef = FSComponent.createRef<SVGSVGElement>();\r\n\tprivate readonly scrollBarRef = FSComponent.createRef<SVGPathElement>();\r\n\tprivate readonly scrollThumbRef = FSComponent.createRef<SVGRectElement>();\r\n\r\n\tprivate readonly scrollBarContainerRef = FSComponent.createRef<HTMLElement>();\r\n\r\n\tprivate scrollableContainer: HTMLElement | null = null;\r\n\r\n\tprivate readonly scrollListener = this.onScroll.bind(this);\r\n\tprivate sizeChangeTimer: NodeJS.Timeout | null = null;\r\n\r\n\tprivate readonly arrowPadding = 6;\r\n\tprivate readonly margin = 2;\r\n\r\n\tprivate currentScrollHeight = 0;\r\n\tprivate currentThumbAreaHeight = 0;\r\n\tprivate scrollHeightRatio = 0;\r\n\r\n\tpublic onAfterRender(node: VNode): void {\r\n\t\tsuper.onAfterRender(node);\r\n\r\n\t\tthis.scrollableContainer = this.scrollBarContainerRef.instance.previousElementSibling as HTMLElement;\r\n\r\n\t\tthis.scrollableContainer.addEventListener('scroll', this.scrollListener);\r\n\r\n\t\tconst diffAndAdjust = (): void => {\r\n\t\t\tif (this.currentScrollHeight !== this.scrollableContainer?.scrollHeight) {\r\n\t\t\t\tthis.adjustScrollbarDimensions();\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tthis.sizeChangeTimer = setInterval(diffAndAdjust, 150);\r\n\r\n\t\tthis.onScroll();\r\n\t}\r\n\r\n\t/**\r\n\t * Adjusts the dimensions of the scrollbar elements.\r\n\t */\r\n\tprivate adjustScrollbarDimensions(): void {\r\n\t\tif (this.scrollableContainer) {\r\n\t\t\tconst parentTop = this.scrollableContainer.offsetTop;\r\n\t\t\tthis.scrollBarContainerRef.instance.style.top = `${parentTop + 4}px`;\r\n\r\n\t\t\tthis.currentScrollHeight = this.scrollableContainer.scrollHeight;\r\n\t\t\tconst containerHeight = this.scrollableContainer.clientHeight;\r\n\r\n\t\t\tconst totalMarginAndPadding = this.arrowPadding * 2 + this.margin * 2;\r\n\t\t\tthis.currentThumbAreaHeight = containerHeight - totalMarginAndPadding;\r\n\r\n\t\t\tthis.scrollHeightRatio = this.currentScrollHeight / containerHeight;\r\n\t\t\tthis.scrollThumbRef.instance.style.height = `${\r\n\t\t\t\tthis.currentThumbAreaHeight / this.scrollHeightRatio\r\n\t\t\t}`.toString();\r\n\r\n\t\t\tthis.scrollBarContainerRef.instance.style.height = `${containerHeight}px`;\r\n\t\t\tthis.svgRef.instance.setAttribute('height', `${containerHeight - this.margin * 2}px`);\r\n\t\t\tthis.scrollBarRef.instance.style.height = `${containerHeight}px`;\r\n\r\n\t\t\tthis.scrollBarContainerRef.instance.style.display = this.scrollHeightRatio <= 1.0 ? 'none' : '';\r\n\r\n\t\t\tthis.onScroll();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Eventhandler called when a scroll event in the scrollable parent container happens.\r\n\t */\r\n\tprivate onScroll(): void {\r\n\t\tif (this.scrollableContainer) {\r\n\t\t\tconst scrollY =\r\n\t\t\t\t(this.scrollableContainer.scrollTop / this.scrollableContainer.scrollHeight) *\r\n\t\t\t\t\tthis.currentThumbAreaHeight +\r\n\t\t\t\tthis.arrowPadding;\r\n\t\t\tif (!isNaN(scrollY)) {\r\n\t\t\t\tthis.scrollThumbRef.instance.setAttribute('y', scrollY.toString());\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tpublic render(): VNode {\r\n\t\treturn (\r\n\t\t\t<div class=\"scroll-bar\" ref={this.scrollBarContainerRef}>\r\n\t\t\t\t<svg ref={this.svgRef}>\r\n\t\t\t\t\t<rect ref={this.scrollBarRef} x=\"3\" y=\"6\" width=\"4\" fill=\"#707070\" />\r\n\t\t\t\t\t<rect ref={this.scrollThumbRef} x=\"3\" y=\"6\" width=\"4\" fill=\"#1390E3\" />\r\n\t\t\t\t</svg>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n\tpublic destroy(): void {\r\n\t\tif (this.scrollableContainer) {\r\n\t\t\tthis.scrollableContainer.removeEventListener('scroll', this.scrollListener);\r\n\t\t}\r\n\t\tif (this.sizeChangeTimer !== null) {\r\n\t\t\tclearInterval(this.sizeChangeTimer);\r\n\t\t}\r\n\t}\r\n}\r\n", "import { DisplayComponent, FSComponent, VNode } from '@microsoft/msfs-sdk';\r\nimport { MaybeSubscribable } from '../../types';\r\nimport { mergeClassProp } from '../../utils';\r\nimport { IconElement } from '../IconElement';\r\nimport { Button, ButtonProps } from './Button';\r\n\r\nexport interface IconButtonProps extends ButtonProps {\r\n\t/** an optionnal SVG icon. The icon path starting from the component that calls SquareButton */\r\n\ticonPath: MaybeSubscribable<string>;\r\n\r\n\t/** @deprecated Unused */\r\n\ttype?: 'primary' | 'secondary';\r\n}\r\n\r\nexport class IconButton extends DisplayComponent<IconButtonProps> {\r\n\tprivate iconRendering(): VNode | null {\r\n\t\tif (this.props.iconPath) {\r\n\t\t\treturn <IconElement url={this.props.iconPath} />;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\tpublic render(): VNode {\r\n\t\treturn (\r\n\t\t\t<Button\r\n\t\t\t\tclass={mergeClassProp('icon-button', this.props.class)}\r\n\t\t\t\tstyle={this.props.style}\r\n\t\t\t\tcallback={this.props.callback}\r\n\t\t\t\thoverable={this.props.hoverable}\r\n\t\t\t\tselected={this.props.selected}\r\n\t\t\t\tstate={this.props.state} // Deprecated\r\n\t\t\t\tdisabled={this.props.disabled}\r\n\t\t\t>\r\n\t\t\t\t{this.iconRendering()}\r\n\t\t\t</Button>\r\n\t\t);\r\n\t}\r\n}\r\n", "import {\r\n\tDisplayComponent,\r\n\tFSComponent,\r\n\tSubscribableSet,\r\n\tSubscribableUtils,\r\n\tSubscription,\r\n\tToggleableClassNameRecord,\r\n\tVNode,\r\n} from '@microsoft/msfs-sdk';\r\nimport { MaybeSubscribable } from '../../types';\r\n\r\ninterface IconElementProps {\r\n\turl: MaybeSubscribable<string>;\r\n\tclass?: MaybeSubscribable<string> | SubscribableSet<string> | ToggleableClassNameRecord;\r\n}\r\n\r\nexport class IconElement extends DisplayComponent<IconElementProps> {\r\n\tprotected readonly url = SubscribableUtils.toSubscribable(this.props.url, true);\r\n\r\n\tprotected el = FSComponent.createRef<HTMLDivElement>();\r\n\r\n\tprotected urlSub?: Subscription;\r\n\r\n\tprotected classes = {\r\n\t\t'icon-element': true,\r\n\t};\r\n\r\n\tpublic constructor(props: IconElementProps) {\r\n\t\tsuper(props);\r\n\r\n\t\tconst propsClass = props.class;\r\n\t\tif (propsClass) {\r\n\t\t\tObject.assign(this.classes, typeof propsClass === 'string' ? { [propsClass]: true } : propsClass);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate readonly onIconLoaded = (found: boolean, svgAsString: string): void => {\r\n\t\tthis.el.instance.innerText = '';\r\n\r\n\t\tif (!found) {\r\n\t\t\tconsole.error(`Image ${this.url.get()} was not found`);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst template = document.createElement('template');\r\n\t\ttemplate.innerHTML = svgAsString;\r\n\t\tconst svgAsHtml = template.content.querySelector('svg');\r\n\t\tif (svgAsHtml) {\r\n\t\t\tthis.el.instance.appendChild(svgAsHtml);\r\n\t\t}\r\n\t};\r\n\r\n\tpublic render(): VNode {\r\n\t\treturn <div ref={this.el} class={this.classes}></div>;\r\n\t}\r\n\r\n\tpublic onAfterRender(node: VNode): void {\r\n\t\tsuper.onAfterRender(node);\r\n\r\n\t\tthis.urlSub = this.url.sub((url: string): void => {\r\n\t\t\tif (!url.endsWith('.svg')) {\r\n\t\t\t\tconsole.error(`IconElement doesn't support \".${url.split('.').pop()}\" filetype.`);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// Using IconCacheMgr from html_ui/common.ts - should we copy it into EFB API ?\r\n\t\t\tgetIconCacheMgr().loadURL(url, this.onIconLoaded);\r\n\t\t}, true);\r\n\t}\r\n\r\n\tpublic destroy(): void {\r\n\t\tthis.urlSub?.destroy();\r\n\r\n\t\tsuper.destroy();\r\n\t}\r\n}\r\n", "import { DisplayComponent, FSComponent, NodeReference, Subject, VNode } from '@microsoft/msfs-sdk';\r\nimport { GamepadUiComponent, GamepadUiComponentProps } from '../../Gamepad';\r\nimport { TT } from '../../i18n';\r\nimport { MaybeSubscribable } from '../../types';\r\nimport { mergeClassProp } from '../../utils';\r\nimport { Button, ButtonProps } from './Button';\r\n\r\n// TODO @Aurel : Rework MultipleButton css in OS\r\n//import './MultipleButtons.css';\r\n\r\nexport interface MultipleButtonsProps extends GamepadUiComponentProps {\r\n\ttitles: MaybeSubscribable<string>[];\r\n\tbuttonSelected?: number;\r\n\t/** Callback when a button is clicked. If true is return, the selectButton method won't be called when a button is clicked. */\r\n\tcallback?: (index: number) => boolean;\r\n}\r\n\r\nexport class MultipleButtons<P extends MultipleButtonsProps = MultipleButtonsProps> extends GamepadUiComponent<\r\n\tHTMLDivElement,\r\n\tP\r\n> {\r\n\tprotected buttonSelected: number = this.props.buttonSelected ?? 0;\r\n\tprotected readonly buttonRefs: Array<NodeReference<SelectableButton>> = [...Array(this.props.titles.length)].map(\r\n\t\t() => FSComponent.createRef<SelectableButton>()\r\n\t);\r\n\r\n\tpublic onAfterRender(node: VNode): void {\r\n\t\tsuper.onAfterRender(node);\r\n\r\n\t\tif (this.buttonRefs.length) {\r\n\t\t\tthis.buttonRefs[this.buttonSelected].instance.selectButton();\r\n\t\t}\r\n\t}\r\n\r\n\tprotected buttonCallback(buttonIndex: number): void {\r\n\t\tif (this.disabled.get()) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (!this.props.callback?.(buttonIndex)) {\r\n\t\t\tthis.selectButton(buttonIndex);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic selectButton(buttonIndex: number): void {\r\n\t\tif (buttonIndex !== this.buttonSelected) {\r\n\t\t\tthis.unselectAllButtons();\r\n\r\n\t\t\tif (buttonIndex > this.buttonRefs.length || buttonIndex < 0) {\r\n\t\t\t\tbuttonIndex = 0;\r\n\t\t\t}\r\n\r\n\t\t\tthis.buttonSelected = buttonIndex;\r\n\t\t\tthis.buttonRefs[buttonIndex].instance.selectButton();\r\n\t\t}\r\n\t}\r\n\r\n\tprotected unselectAllButtons(): void {\r\n\t\tthis.buttonRefs.forEach((button) => button.instance.unSelectButton());\r\n\t}\r\n\r\n\tpublic renderSelectableButtons(): HTMLDivElement[] {\r\n\t\tconst buttons: HTMLDivElement[] = [];\r\n\r\n\t\tfor (let i = 0; i < this.props.titles.length; i++) {\r\n\t\t\tbuttons.push(\r\n\t\t\t\t<SelectableButton\r\n\t\t\t\t\tclass=\"single-button\"\r\n\t\t\t\t\ttitle={this.props.titles[i]}\r\n\t\t\t\t\tref={this.buttonRefs[i]}\r\n\t\t\t\t\tcallback={(): void => this.buttonCallback(i)}\r\n\t\t\t\t/>\r\n\t\t\t);\r\n\t\t}\r\n\t\treturn buttons;\r\n\t}\r\n\r\n\tpublic render(): VNode {\r\n\t\treturn (\r\n\t\t\t<div ref={this.gamepadUiComponentRef} class={`multiple-buttons`}>\r\n\t\t\t\t{this.renderSelectableButtons()}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\ninterface SelectableButtonProps extends ButtonProps {\r\n\ttitle: MaybeSubscribable<string>;\r\n\tselected?: boolean;\r\n}\r\n\r\nclass SelectableButton extends DisplayComponent<SelectableButtonProps> {\r\n\tprotected readonly selected = Subject.create(this.props.selected ?? false);\r\n\r\n\tpublic selectButton(): void {\r\n\t\tthis.selected.set(true);\r\n\t}\r\n\r\n\tpublic unSelectButton(): void {\r\n\t\tthis.selected.set(false);\r\n\t}\r\n\r\n\tpublic render(): VNode {\r\n\t\treturn (\r\n\t\t\t<Button\r\n\t\t\t\tclass={mergeClassProp({ selected: this.selected }, this.props.class)}\r\n\t\t\t\tstyle={this.props.style}\r\n\t\t\t\tcallback={this.props.callback}\r\n\t\t\t\thoverable={this.props.hoverable}\r\n\t\t\t\tselected={this.props.selected}\r\n\t\t\t\tdisabled={this.props.disabled}\r\n\t\t\t>\r\n\t\t\t\t<TT class=\"title\" type=\"div\" key={this.props.title} format=\"uppercase\" />\r\n\t\t\t</Button>\r\n\t\t);\r\n\t}\r\n}\r\n", "import { FSComponent, VNode } from '@microsoft/msfs-sdk';\r\nimport { TT } from '../../i18n';\r\nimport { MaybeSubscribable } from '../../types';\r\nimport { TypedButton, TypedButtonProps } from './TypedButton';\r\n\r\n/** @deprecated */\r\nexport interface SelectableButtonProps extends TypedButtonProps {\r\n\ttitle: MaybeSubscribable<string>;\r\n\tselected?: boolean;\r\n}\r\n\r\n/** @deprecated Deprecated component */\r\nexport class SelectableButton<P extends SelectableButtonProps = SelectableButtonProps> extends TypedButton<P> {\r\n\tprotected selected: boolean = this.props.selected ?? false;\r\n\r\n\tpublic selectButton(): void {\r\n\t\tif (!this.selected) {\r\n\t\t\tthis.selected = true;\r\n\t\t\tthis.switchSelection(true);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic unSelectButton(): void {\r\n\t\tif (this.selected) {\r\n\t\t\tthis.selected = false;\r\n\t\t\tthis.switchSelection(false);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic switchSelection(selected: boolean): void {\r\n\t\tthis.gamepadUiComponentRef.instance.classList.toggle('selected', selected);\r\n\t}\r\n\r\n\tprotected buttonRender(): VNode {\r\n\t\treturn (\r\n\t\t\t<div class=\"selectable-button\">\r\n\t\t\t\t<TT class=\"title\" type=\"div\" key={this.props.title} format=\"upper\" />\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n", "import { VNode } from '@microsoft/msfs-sdk';\r\nimport { AbstractButton, AbstractButtonProps } from './Button';\r\n\r\n/** @deprecated */\r\ntype ButtonType = 'primary' | 'secondary';\r\n\r\n/** @deprecated */\r\nexport interface TypedButtonProps extends AbstractButtonProps {\r\n\ttype?: ButtonType;\r\n}\r\n\r\n/** @deprecated Deprecated component */\r\nexport abstract class TypedButton<T extends TypedButtonProps = TypedButtonProps> extends AbstractButton<T> {\r\n\tpublic onAfterRender(node: VNode): void {\r\n\t\tsuper.onAfterRender(node);\r\n\r\n\t\tthis.gamepadUiComponentRef.instance.classList.add(this.props.type ?? 'primary');\r\n\t}\r\n\r\n\tprotected abstract buttonRender(): VNode;\r\n}\r\n", "import { DisplayComponent, FSComponent, VNode } from '@microsoft/msfs-sdk';\r\nimport { GamepadUiComponentProps } from '../../Gamepad';\r\nimport { TT, TTProps } from '../../i18n';\r\nimport { mergeClassProp } from '../../utils';\r\nimport { Button, ButtonProps } from './Button';\r\n\r\nexport type TTButtonProps = ButtonProps & TTProps & GamepadUiComponentProps;\r\n\r\nexport class TTButton<P extends TTButtonProps = TTButtonProps> extends DisplayComponent<P> {\r\n\tpublic render(): VNode {\r\n\t\treturn (\r\n\t\t\t<Button\r\n\t\t\t\tclass={mergeClassProp('tt-button', 'classic-button', this.props.class)}\r\n\t\t\t\tstyle={this.props.style}\r\n\t\t\t\tcallback={this.props.callback}\r\n\t\t\t\thoverable={this.props.hoverable}\r\n\t\t\t\tselected={this.props.selected}\r\n\t\t\t\tstate={this.props.state} // Deprecated\r\n\t\t\t\tdisabled={this.props.disabled}\r\n\t\t\t>\r\n\t\t\t\t<TT\r\n\t\t\t\t\tclass=\"bold-text\"\r\n\t\t\t\t\tkey={this.props.key}\r\n\t\t\t\t\ttype={this.props.type}\r\n\t\t\t\t\tformat={this.props.format ?? 'uppercase'}\r\n\t\t\t\t\targuments={this.props.arguments}\r\n\t\t\t\t/>\r\n\t\t\t</Button>\r\n\t\t);\r\n\t}\r\n}\r\n\r\n/**\r\n * @deprecated ClassicButton is the old version of TTButton. Use TTButton instead.\r\n */\r\n\r\nexport interface ClassicButtonProps extends ButtonProps, Omit<TTProps, 'key' | 'type'> {\r\n\t/** the classic button title */\r\n\ttitle: TTProps['key'];\r\n\r\n\t/** @deprecated Unused */\r\n\ttype?: 'primary' | 'secondary';\r\n}\r\n/**\r\n * @deprecated ClassicButton is the old version of TTButton. Use TTButton instead.\r\n */\r\n\r\nexport class ClassicButton extends Button<ClassicButtonProps> {\r\n\tprotected buttonRender(): VNode {\r\n\t\treturn (\r\n\t\t\t<div class=\"classic-button\">\r\n\t\t\t\t<TT key={this.props.title} format={this.props.format ?? 'upper'} type=\"div\" class=\"bold-text\" />\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n", "import { FSComponent, Subscribable, SubscribableUtils, VNode } from '@microsoft/msfs-sdk';\r\nimport { GamepadUiComponent, GamepadUiComponentProps } from '../../Gamepad';\r\nimport { TT, TTProps } from '../../i18n';\r\n\r\ninterface TabSelectorProps extends GamepadUiComponentProps {\r\n\t/* The tab name */\r\n\ttabName: TTProps['key'];\r\n\r\n\tactive: Subscribable<boolean>;\r\n\r\n\thidden: Subscribable<boolean>;\r\n\r\n\tcallback?: () => void;\r\n}\r\n\r\nexport class TabSelector extends GamepadUiComponent<HTMLDivElement, TabSelectorProps> {\r\n\tpublic render(): VNode {\r\n\t\treturn (\r\n\t\t\t<div\r\n\t\t\t\tref={this.gamepadUiComponentRef}\r\n\t\t\t\tclass={{\r\n\t\t\t\t\t'tab-selector': true,\r\n\t\t\t\t\tactive: this.props.active,\r\n\t\t\t\t\thidden: this.props.hidden,\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<div class=\"disabled-layer\"></div>\r\n\t\t\t\t<TT key={this.props.tabName} class=\"text\" format=\"ucfirst\" />\r\n\t\t\t\t<div class=\"state\"></div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n\tpublic onAfterRender(node: VNode): void {\r\n\t\tsuper.onAfterRender(node);\r\n\r\n\t\tif (this.props.callback) {\r\n\t\t\tthis.gamepadUiComponentRef.instance.onclick = (e: MouseEvent): void => {\r\n\t\t\t\tif (SubscribableUtils.toSubscribable(this.props.disabled, true).get() === true) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.props.callback?.call(e);\r\n\t\t\t};\r\n\t\t}\r\n\t}\r\n}\r\n", "import { FSComponent, VNode } from '@microsoft/msfs-sdk';\r\nimport { Valuable, value } from '../../utils';\r\nimport { AbstractAccordion, AbstractAccordionProps } from './AbstractAccordion';\r\n\r\ninterface ElementAccordionProps extends AbstractAccordionProps {\r\n\theader: Valuable<VNode>;\r\n}\r\n\r\nexport class ElementAccordion extends AbstractAccordion<ElementAccordionProps> {\r\n\tprotected renderHeader(): VNode {\r\n\t\treturn <>{value(this.props.header)}</>;\r\n\t}\r\n}\r\n", "import { FSComponent, VNode } from '@microsoft/msfs-sdk';\r\nimport { TT } from '../../i18n';\r\nimport { MaybeSubscribable } from '../../types';\r\nimport { AbstractAccordion, AbstractAccordionProps } from './AbstractAccordion';\r\n\r\ninterface StringAccordionProps extends AbstractAccordionProps {\r\n\t/** Can be a string or a TT key */\r\n\ttitle: MaybeSubscribable<string>;\r\n}\r\n\r\nexport class StringAccordion extends AbstractAccordion<StringAccordionProps> {\r\n\tprotected renderHeader(): VNode {\r\n\t\treturn <TT key={this.props.title} format=\"ucfirst\"></TT>;\r\n\t}\r\n}\r\n", "import {\r\n\tComponentProps,\r\n\tDisplayComponent,\r\n\tFSComponent,\r\n\tMutableSubscribable,\r\n\tSubject,\r\n\tSubscribable,\r\n\tSubscribableUtils,\r\n\tVNode,\r\n} from '@microsoft/msfs-sdk';\r\nimport { TT } from '../../i18n';\r\nimport { ClassProp, MaybeSubscribable, StyleProp } from '../../types';\r\nimport { dayKeys, monthKeys, monthShortKeys, toClassProp } from '../../utils';\r\n\r\nconst INTERNAL_KEY_SEPARATOR = '__MSFS2024_INTERNAL_DATE_ANA_ACE__';\r\n\r\ntype DateType = number | Date;\r\n\r\nexport interface DateDisplayProps extends ComponentProps {\r\n\t/** the date as a Date object or as UNIX timestamp in millesconds */\r\n\tdate: MaybeSubscribable<DateType>;\r\n\r\n\t/** The format the date will be formatted to (e.g. 'DD MM YYYY hh:mm:ss') */\r\n\tformat: MaybeSubscribable<string>;\r\n\r\n\t/** Additionnal custom class */\r\n\tclass?: ClassProp;\r\n\r\n\t/** Additionnal custom style */\r\n\tstyle?: StyleProp;\r\n}\r\n\r\ntype DateKeys = 'YYYY' | 'YY' | 'MMMM' | 'MMM' | 'MM' | 'DDDD' | 'DD' | 'hh' | 'mm' | 'ss';\r\nconst FormatKeys: DateKeys[] = ['YYYY', 'YY', 'MMMM', 'MMM', 'MM', 'DDDD', 'DD', 'hh', 'mm', 'ss'];\r\n\r\nconst dateToValue: Record<DateKeys, (date: Date) => string> = {\r\n\tYYYY: (date: Date): string => date.getFullYear().toString(),\r\n\tYY: (date: Date): string => (date.getFullYear() % 100).toString().padStart(2, '0'),\r\n\tMMMM: (date: Date): string => monthKeys[date.getMonth()],\r\n\tMMM: (date: Date): string => monthShortKeys[date.getMonth()],\r\n\tMM: (date: Date): string => (date.getMonth() + 1).toString().padStart(2, '0'),\r\n\tDDDD: (date: Date): string => dayKeys[date.getDay()],\r\n\tDD: (date: Date): string => date.getDate().toString().padStart(2, '0'),\r\n\thh: (date: Date): string => date.getHours().toString().padStart(2, '0'),\r\n\tmm: (date: Date): string => date.getMinutes().toString().padStart(2, '0'),\r\n\tss: (date: Date): string => date.getSeconds().toString().padStart(2, '0'),\r\n};\r\n\r\nconst formatToInternalKey: Record<DateKeys, string> = {\r\n\tYYYY: 'FULLYEAR',\r\n\tYY: 'SHORTYEAR',\r\n\tMMMM: 'FULLMONTH',\r\n\tMMM: 'SHORTMONTH',\r\n\tMM: 'DIGITMONTH',\r\n\tDDDD: 'FULLDAY',\r\n\tDD: 'DIGITDAY',\r\n\thh: 'HOURS',\r\n\tmm: 'MINUTES',\r\n\tss: 'SECONDS',\r\n};\r\n\r\nexport class DateDisplay extends DisplayComponent<DateDisplayProps> {\r\n\tprivate readonly ready = Subject.create(false);\r\n\r\n\tprivate readonly date: Subscribable<DateType> = SubscribableUtils.toSubscribable(this.props.date, true);\r\n\tprivate readonly format: Subscribable<string> = SubscribableUtils.toSubscribable(this.props.format, true);\r\n\tprivate readonly dateSubscription = this.date.sub((date: DateType) => this.updateDate(date));\r\n\tprivate readonly formatSubscription = this.format.sub((format: string) => {\r\n\t\tthis.renderFormat(this.date.get(), format);\r\n\t});\r\n\r\n\tprivate readonly dateSpanRef = FSComponent.createRef<HTMLSpanElement>();\r\n\tprivate dateNodes: VNode[] = []; /* Array of span and TT components */\r\n\r\n\tprivate readonly cachedSubject: Record<DateKeys, MutableSubscribable<string>> = {\r\n\t\tYYYY: Subject.create(''),\r\n\t\tYY: Subject.create(''),\r\n\t\tMMMM: Subject.create(''),\r\n\t\tMMM: Subject.create(''),\r\n\t\tMM: Subject.create(''),\r\n\t\tDDDD: Subject.create(''),\r\n\t\tDD: Subject.create(''),\r\n\t\thh: Subject.create(''),\r\n\t\tmm: Subject.create(''),\r\n\t\tss: Subject.create(''),\r\n\t};\r\n\r\n\tprivate renderFormat(rawDate: DateType, format: string): void {\r\n\t\tif (!this.ready.get()) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.dateNodes.forEach((node: VNode) => FSComponent.shallowDestroy(node));\r\n\t\tthis.dateSpanRef.instance.innerHTML = '';\r\n\r\n\t\tthis.updateDate(rawDate);\r\n\r\n\t\tlet editedFormat = format;\r\n\t\tfor (const key in formatToInternalKey) {\r\n\t\t\teditedFormat = editedFormat.replace(\r\n\t\t\t\tkey,\r\n\t\t\t\t`${INTERNAL_KEY_SEPARATOR}${formatToInternalKey[key]}${INTERNAL_KEY_SEPARATOR}`\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\tconst splittedFormat = editedFormat.split(INTERNAL_KEY_SEPARATOR);\r\n\t\tfor (const part of splittedFormat) {\r\n\t\t\tconst foundKey = FormatKeys.find((key) => formatToInternalKey[key] === part);\r\n\t\t\tif (foundKey !== undefined) {\r\n\t\t\t\tthis.dateNodes.push(<TT key={this.cachedSubject[foundKey]} />);\r\n\t\t\t} else {\r\n\t\t\t\tthis.dateNodes.push(<span>{part}</span>);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tFSComponent.render(<>{this.dateNodes}</>, this.dateSpanRef.instance);\r\n\t}\r\n\r\n\tprivate updateDate(rawDate: DateType): void {\r\n\t\tif (!this.ready.get()) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst date = new Date(rawDate);\r\n\t\tfor (const key in this.cachedSubject) {\r\n\t\t\tthis.cachedSubject[key].set(dateToValue[key](date));\r\n\t\t}\r\n\t}\r\n\r\n\tpublic onAfterRender(node: VNode): void {\r\n\t\tsuper.onAfterRender(node);\r\n\r\n\t\tthis.ready.set(true);\r\n\t\tthis.renderFormat(this.date.get(), this.format.get());\r\n\t}\r\n\r\n\tpublic render(): VNode {\r\n\t\treturn <span style={this.props.style} class={toClassProp(this.props.class)} ref={this.dateSpanRef}></span>;\r\n\t}\r\n\r\n\tpublic destroy(): void {\r\n\t\tthis.dateSubscription.destroy();\r\n\t\tthis.formatSubscription.destroy();\r\n\r\n\t\tsuper.destroy();\r\n\t}\r\n}\r\n", "import {\r\n\tArraySubject,\r\n\tFacilityType,\r\n\tFacilityUtils,\r\n\tFSComponent,\r\n\tMappedSubject,\r\n\tOneWayRunway,\r\n\tRunwayUtils,\r\n\tSubscribable,\r\n\tVNode,\r\n} from '@microsoft/msfs-sdk';\r\nimport { GamepadUiComponent, GamepadUiComponentProps } from '../../../Gamepad';\r\nimport { getRunwayName, NullFacility } from '../../../utils';\r\nimport { DropdownButton } from '../../Button';\r\n\r\ninterface RunwaySelectorProps extends GamepadUiComponentProps {\r\n\tfacility: Subscribable<NullFacility>;\r\n\tcurrentRunway: Subscribable<OneWayRunway | number>;\r\n\tonRunwaySelected(runway: OneWayRunway, index: number): void;\r\n}\r\n\r\nexport class RunwaySelector extends GamepadUiComponent<HTMLDivElement, RunwaySelectorProps> {\r\n\tprivate readonly runways: ArraySubject<OneWayRunway> = ArraySubject.create<OneWayRunway>();\r\n\tprivate readonly currentRunwayName = MappedSubject.create(\r\n\t\t([facility, currentRunway]) => {\r\n\t\t\t/* Update the runways ArraySubject inside of the runway name Subject because MappedSubject cannot map instances of ArraySubscribable */\r\n\t\t\tconst runways =\r\n\t\t\t\tfacility && FacilityUtils.isFacilityType(facility, FacilityType.Airport)\r\n\t\t\t\t\t? RunwayUtils.getOneWayRunwaysFromAirport(facility)\r\n\t\t\t\t\t: [];\r\n\t\t\tthis.runways.set(runways);\r\n\r\n\t\t\tconst runwayIndex =\r\n\t\t\t\ttypeof currentRunway === 'number'\r\n\t\t\t\t\t? currentRunway\r\n\t\t\t\t\t: runways.findIndex((runway) => runway.designation === currentRunway.designation);\r\n\r\n\t\t\treturn runwayIndex >= 0 && runwayIndex < runways.length ? getRunwayName(runways[runwayIndex]) : '';\r\n\t\t},\r\n\t\tthis.props.facility,\r\n\t\tthis.props.currentRunway\r\n\t);\r\n\r\n\tpublic render(): VNode {\r\n\t\treturn (\r\n\t\t\t<div\r\n\t\t\t\tclass={{\r\n\t\t\t\t\t'runway-selector': true,\r\n\t\t\t\t\thide: this.currentRunwayName.map((name) => !name),\r\n\t\t\t\t}}\r\n\t\t\t\tref={this.gamepadUiComponentRef}\r\n\t\t\t>\r\n\t\t\t\t<DropdownButton<OneWayRunway>\r\n\t\t\t\t\ttitle={this.currentRunwayName}\r\n\t\t\t\t\ttype=\"secondary\"\r\n\t\t\t\t\tlistDataset={this.runways}\r\n\t\t\t\t\tgetItemLabel={getRunwayName}\r\n\t\t\t\t\tonItemClick={(runway, index): void => {\r\n\t\t\t\t\t\tthis.props.onRunwaySelected(runway, index);\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tshowArrowIcon\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n", "import {\r\n\tFSComponent,\r\n\tMutableSubscribable,\r\n\tNumberFormatter,\r\n\tSubject,\r\n\tSubscribableUtils,\r\n\tSubscription,\r\n\tVNode,\r\n} from '@microsoft/msfs-sdk';\r\nimport { GamepadUiComponent, GamepadUiComponentProps } from '../../Gamepad';\r\nimport { TT } from '../../i18n';\r\nimport { MaybeSubscribable } from '../../types';\r\nimport { IconButton } from '../Button';\r\nimport { TextBox } from '../Input';\r\n\r\nexport interface IncrementalProps extends GamepadUiComponentProps {\r\n\t/** The value that is increased or decreased. If a MutableSubscribable is given, it will be directly modified by the component */\r\n\tvalue: MutableSubscribable<number> | MaybeSubscribable<number>;\r\n\r\n\t/** The suffix rendered at the right of the value */\r\n\tsuffix?: MaybeSubscribable<string>;\r\n\r\n\t/** The step of the increment or decrement */\r\n\tstep?: MaybeSubscribable<number>;\r\n\r\n\t/** The lower boundary of the value */\r\n\tmin?: MaybeSubscribable<number>;\r\n\r\n\t/** The upper boundary of the value */\r\n\tmax?: MaybeSubscribable<number>;\r\n\r\n\t/** A function which formats numbers. */\r\n\tformatter?: (value: number) => string;\r\n\r\n\t/** Callback triggered when the value is changed, giving directly the new value */\r\n\tonChange?: (newValue: number) => void;\r\n\r\n\t/** Callback triggered when a button is clicked, giving -1 if the first button is clicked and 1 for the second one */\r\n\tonButtonClicked?: (direction: -1 | 1) => void;\r\n\r\n\t/** First icon. Can be a path that will be used in an IconButton, or a VNode. By default, it renders an IconButton with a minus icon */\r\n\tfirstIcon?: string | VNode;\r\n\r\n\t/** Second icon. Can be a path that will be used in an IconButton, or a VNode. By default, it renders an IconButton with a plus icon */\r\n\tsecondIcon?: string | VNode;\r\n\r\n\t/** If true, the value rendered in the middle will be in a textbox, allowing t\u00E0 modify it without the buttons. Default to true */\r\n\tuseTextbox?: boolean;\r\n}\r\n\r\n/** Renders a value along with 2 buttons to increase or decrease it */\r\nexport class Incremental extends GamepadUiComponent<HTMLDivElement, IncrementalProps> {\r\n\tprotected readonly value: MutableSubscribable<number>;\r\n\tprotected readonly valueSubscription: Subscription;\r\n\tprotected readonly displayedValueSubscription: Subscription;\r\n\tprotected readonly subscribableValueSubscription?: Subscription;\r\n\r\n\tprotected min = SubscribableUtils.toSubscribable(this.props.min ?? 0, true);\r\n\tprotected max = SubscribableUtils.toSubscribable(this.props.max ?? Number.MAX_SAFE_INTEGER, true);\r\n\tprotected step = SubscribableUtils.toSubscribable(this.props.step ?? 1, true);\r\n\r\n\tprotected readonly formatter =\r\n\t\tthis.props.formatter ??\r\n\t\tNumberFormatter.create({\r\n\t\t\tprecision: Utils.countDecimals(this.step.get()),\r\n\t\t\t// Gets the number of digits of the maximum + 2 digits for the decimals\r\n\t\t\tmaxDigits: (Math.log(this.max.get()) * Math.LOG10E + 3) | 0,\r\n\t\t\tforceDecimalZeroes: false,\r\n\t\t\tnanString: '-',\r\n\t\t});\r\n\r\n\tprotected readonly useTextbox = this.props.useTextbox ?? true;\r\n\r\n\tprotected readonly displayedValue = Subject.create('');\r\n\r\n\tconstructor(props: IncrementalProps) {\r\n\t\tsuper(props);\r\n\r\n\t\tif (SubscribableUtils.isMutableSubscribable(props.value)) {\r\n\t\t\tthis.value = props.value;\r\n\t\t} else if (SubscribableUtils.isSubscribable(props.value)) {\r\n\t\t\tthis.value = Subject.create(props.value.get());\r\n\t\t\tthis.subscribableValueSubscription = props.value.sub((value: number) => this.value.set(value));\r\n\t\t} else {\r\n\t\t\tthis.value = Subject.create(props.value);\r\n\t\t}\r\n\r\n\t\tthis.valueSubscription = this.value.sub((newValue: number): void => {\r\n\t\t\tthis.props.onChange?.(newValue);\r\n\t\t});\r\n\r\n\t\tthis.displayedValueSubscription = this.value.sub((newValue: number): void => {\r\n\t\t\tthis.displayedValue.set(this.formatter(newValue));\r\n\t\t}, true);\r\n\t}\r\n\r\n\tprivate renderButton(icon?: string | VNode, direction: -1 | 1 = -1): VNode {\r\n\t\tif (icon !== undefined && typeof icon !== 'string') {\r\n\t\t\treturn icon;\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<IconButton\r\n\t\t\t\tclass={direction === -1 ? 'incremental-decrease' : 'incremental-increase'}\r\n\t\t\t\ticonPath={\r\n\t\t\t\t\ticon ?? direction === -1\r\n\t\t\t\t\t\t? 'coui://html_ui/efb_ui/efb_os/Assets/icons/Remove.svg'\r\n\t\t\t\t\t\t: 'coui://html_ui/efb_ui/efb_os/Assets/icons/Add.svg'\r\n\t\t\t\t}\r\n\t\t\t\tcallback={(): void => {\r\n\t\t\t\t\tconst newValue = Utils.Clamp(\r\n\t\t\t\t\t\tthis.value.get() + this.step.get() * direction,\r\n\t\t\t\t\t\tthis.min.get(),\r\n\t\t\t\t\t\tthis.max.get()\r\n\t\t\t\t\t);\r\n\t\t\t\t\tthis.value.set(newValue);\r\n\r\n\t\t\t\t\tthis.props.onButtonClicked?.(direction);\r\n\t\t\t\t}}\r\n\t\t\t\tdisabled={this.props.disabled}\r\n\t\t\t/>\r\n\t\t);\r\n\t}\r\n\r\n\tprivate renderData(): VNode {\r\n\t\tif (this.useTextbox) {\r\n\t\t\treturn (\r\n\t\t\t\t<TextBox\r\n\t\t\t\t\tmodel={this.displayedValue}\r\n\t\t\t\t\tclass=\"data-display\"\r\n\t\t\t\t\tcharFilter={(char: string) => (char >= '0' && char <= '9') || char === '.'}\r\n\t\t\t\t\tsuffix={this.props.suffix}\r\n\t\t\t\t\talign=\"center\"\r\n\t\t\t\t\tonInput={(e): void => {\r\n\t\t\t\t\t\tconst newValue = Number(e.value);\r\n\t\t\t\t\t\tif (newValue < this.min.get() || newValue > this.max.get()) {\r\n\t\t\t\t\t\t\tthis.displayedValue.set(\r\n\t\t\t\t\t\t\t\tthis.formatter(Utils.Clamp(newValue, this.min.get(), this.max.get()))\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (!Number.isNaN(newValue)) {\r\n\t\t\t\t\t\t\tthis.value.set(Utils.Clamp(newValue, this.min.get(), this.max.get()));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tonFocusIn={this.onTextBoxFocusIn.bind(this)}\r\n\t\t\t\t\tonFocusOut={this.onTextBoxFocusOut.bind(this)}\r\n\t\t\t\t\tdisabled={this.props.disabled}\r\n\t\t\t\t/>\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\tconst dataSuffix = this.props.suffix ? <TT key={this.props.suffix} class=\"suffix\" /> : null;\r\n\r\n\t\t\treturn (\r\n\t\t\t\t<div class=\"data-display\">\r\n\t\t\t\t\t<span class=\"data-value\">{this.displayedValue}</span>\r\n\t\t\t\t\t{dataSuffix}\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n\t// Allow the user to properly enter a value by pausing it's update\r\n\tprotected onTextBoxFocusIn(): void {\r\n\t\tthis.displayedValueSubscription.pause();\r\n\t}\r\n\r\n\tprotected onTextBoxFocusOut(): void {\r\n\t\tthis.displayedValueSubscription.resume();\r\n\t}\r\n\r\n\tpublic render(): VNode {\r\n\t\treturn (\r\n\t\t\t<div class=\"incremental\" ref={this.gamepadUiComponentRef}>\r\n\t\t\t\t{this.renderButton(this.props.firstIcon, -1)}\r\n\t\t\t\t{this.renderData()}\r\n\t\t\t\t{this.renderButton(this.props.firstIcon, 1)}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n\tpublic destroy(): void {\r\n\t\tthis.subscribableValueSubscription?.destroy();\r\n\t\tthis.valueSubscription.destroy();\r\n\t\tthis.displayedValueSubscription.destroy();\r\n\r\n\t\tsuper.destroy();\r\n\t}\r\n}\r\n", "import {\r\n\tDisplayComponent,\r\n\tFSComponent,\r\n\tNodeReference,\r\n\tSubject,\r\n\tSubscribable,\r\n\tSubscribableUtils,\r\n\tSubscription,\r\n\tVNode,\r\n} from '@microsoft/msfs-sdk';\r\nimport { GamepadUiComponent, GamepadUiComponentProps } from '../../Gamepad';\r\nimport { InputsListener } from '../../Listeners/InputsListener';\r\nimport { MaybeSubscribable, Nullable } from '../../types';\r\nimport { isVNode, mergeClassProp } from '../../utils';\r\nimport { IconButton } from '../Button';\r\nimport { ExtendedInputProps, Input } from './Input';\r\n\r\nconst addIconPath = 'coui://html_ui/efb_ui/efb_os/Assets/icons/NoMargin/Close.svg';\r\n\r\ntype PrefixSuffixTypes = string | VNode;\r\n\r\n/**\r\n * You can set an input but when clicking the formatter can return a different value\r\n * @internal\r\n */\r\nexport interface TextBoxProps extends ExtendedInputProps {\r\n\t/** The optional \"delete\" icon */\r\n\tshowDeleteIcon?: boolean;\r\n\r\n\tcustomDeleteIcon?: HTMLElement;\r\n\r\n\tfocusOnClear?: boolean;\r\n\r\n\tprefix?: MaybeSubscribable<PrefixSuffixTypes>;\r\n\r\n\tsuffix?: MaybeSubscribable<PrefixSuffixTypes>;\r\n\r\n\tonDelete?: () => void;\r\n}\r\n\r\n/**\r\n * This TextBox component\r\n * @internal\r\n */\r\nexport class TextBox extends GamepadUiComponent<HTMLDivElement, TextBoxProps & GamepadUiComponentProps> {\r\n\tprotected readonly subscriptions: Subscription[] = [];\r\n\tprivate input_id = '';\r\n\r\n\tpublic readonly inputRef = FSComponent.createRef<Input>();\r\n\r\n\tprivate readonly model =\r\n\t\tthis.props.model || Subject.create(SubscribableUtils.toSubscribable(this.props.value || '', true).get());\r\n\r\n\tprotected hideDeleteTextButton = Subject.create(true);\r\n\r\n\tprotected _onDelete(event: MouseEvent): void {\r\n\t\tevent.preventDefault();\r\n\r\n\t\tthis.hideDeleteTextButton.set(true);\r\n\r\n\t\tthis.inputRef.instance.clearInput();\r\n\r\n\t\tthis.props.onDelete?.();\r\n\r\n\t\tif (this.props.focusOnClear) {\r\n\t\t\tthis.inputRef.instance.focus();\r\n\t\t}\r\n\t}\r\n\r\n\tprotected readonly onDelete = this._onDelete.bind(this);\r\n\r\n\tprotected onInput(input: HTMLInputElement): void {\r\n\t\tthis.props.onInput?.(input);\r\n\r\n\t\tif (this.props.showDeleteIcon) {\r\n\t\t\tthis.hideDeleteTextButton.set(input.value.trim().length === 0);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate readonly onmousedown = (e: MouseEvent): void => {\r\n\t\te.preventDefault();\r\n\r\n\t\tif (!this.inputRef.instance.isFocused.get()) {\r\n\t\t\tthis.inputRef.instance.focus();\r\n\t\t}\r\n\t};\r\n\r\n\tprotected onFocusIn(): void {\r\n\t\tthis.props.onFocusIn?.();\r\n\r\n\t\tthis.input_id = InputsListener.addInputChangeCallback('MENU_CORE', 'KEY_MENU_SR_BACK', (down) => {\r\n\t\t\tif (down) {\r\n\t\t\t\tthis.inputRef.instance.blur();\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tthis.gamepadUiComponentRef.instance.classList.add('textbox--focused');\r\n\t}\r\n\r\n\tprotected onFocusOut(): void {\r\n\t\tthis.props.onFocusOut?.();\r\n\r\n\t\tInputsListener.removeInputChangeCallback(this.input_id);\r\n\r\n\t\tthis.gamepadUiComponentRef.instance.classList.remove('textbox--focused');\r\n\t}\r\n\r\n\tprotected readonly prefix: Subscribable<PrefixSuffixTypes> = SubscribableUtils.toSubscribable(\r\n\t\tthis.props.prefix || '',\r\n\t\ttrue\r\n\t);\r\n\r\n\tprotected readonly suffix: Subscribable<PrefixSuffixTypes> = SubscribableUtils.toSubscribable(\r\n\t\tthis.props.suffix || '',\r\n\t\ttrue\r\n\t);\r\n\r\n\tprotected readonly prefixRef = FSComponent.createRef<HTMLDivElement>();\r\n\r\n\tprotected readonly suffixRef = FSComponent.createRef<HTMLDivElement>();\r\n\r\n\tprotected readonly prefixSuffixEmptyCallback = (value: PrefixSuffixTypes): boolean => {\r\n\t\treturn value.toString().length === 0;\r\n\t};\r\n\r\n\tpublic render(): VNode {\r\n\t\treturn (\r\n\t\t\t<div ref={this.gamepadUiComponentRef} class=\"textbox\">\r\n\t\t\t\t<div class=\"disabled-layer\"></div>\r\n\t\t\t\t<div\r\n\t\t\t\t\tref={this.prefixRef}\r\n\t\t\t\t\tclass={{\r\n\t\t\t\t\t\tprefix: true,\r\n\t\t\t\t\t\t'prefix--hidden': this.prefix.map(this.prefixSuffixEmptyCallback),\r\n\t\t\t\t\t}}\r\n\t\t\t\t></div>\r\n\t\t\t\t<Input\r\n\t\t\t\t\tref={this.inputRef}\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\talign={this.props.align}\r\n\t\t\t\t\tmodel={this.model}\r\n\t\t\t\t\tplaceholder={this.props.placeholder}\r\n\t\t\t\t\tdisabled={this.props.disabled}\r\n\t\t\t\t\thidePlaceholderOnFocus={this.props.hidePlaceholderOnFocus}\r\n\t\t\t\t\tfocusOnInit={this.props.focusOnInit}\r\n\t\t\t\t\tonFocusIn={this.onFocusIn.bind(this)}\r\n\t\t\t\t\tonFocusOut={this.onFocusOut.bind(this)}\r\n\t\t\t\t\tonInput={this.onInput.bind(this)}\r\n\t\t\t\t\tonKeyPress={this.props.onKeyPress}\r\n\t\t\t\t\tcharFilter={this.props.charFilter}\r\n\t\t\t\t/>\r\n\t\t\t\t<div\r\n\t\t\t\t\tref={this.suffixRef}\r\n\t\t\t\t\tclass={{\r\n\t\t\t\t\t\tsuffix: true,\r\n\t\t\t\t\t\t'suffix--hidden': this.suffix.map(this.prefixSuffixEmptyCallback),\r\n\t\t\t\t\t}}\r\n\t\t\t\t></div>\r\n\t\t\t\t{this.props.showDeleteIcon && (\r\n\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\tclass={mergeClassProp('delete-text-button', { hide: this.hideDeleteTextButton })}\r\n\t\t\t\t\t\ticonPath={addIconPath}\r\n\t\t\t\t\t\tcallback={this.onDelete}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n\tpublic onAfterRender(node: VNode): void {\r\n\t\tsuper.onAfterRender(node);\r\n\r\n\t\tconst prefixSuffixCb = (reference: NodeReference<HTMLDivElement>): ((value: PrefixSuffixTypes) => void) => {\r\n\t\t\tlet previousNode: Nullable<VNode> = null;\r\n\t\t\treturn (value: PrefixSuffixTypes): void => {\r\n\t\t\t\tif (previousNode) {\r\n\t\t\t\t\tFSComponent.shallowDestroy(previousNode);\r\n\t\t\t\t\tconst instance = previousNode.instance;\r\n\t\t\t\t\tif (instance && instance instanceof DisplayComponent) {\r\n\t\t\t\t\t\tinstance.destroy();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tpreviousNode = null;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (typeof value === 'string') {\r\n\t\t\t\t\treference.instance.innerText = value;\r\n\t\t\t\t} else if (typeof value === 'object' && isVNode(value)) {\r\n\t\t\t\t\tpreviousNode = value;\r\n\t\t\t\t\treference.instance.innerHTML = '';\r\n\t\t\t\t\tFSComponent.render(value, reference.instance);\r\n\t\t\t\t} else {\r\n\t\t\t\t\treference.instance.innerText = value;\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t};\r\n\r\n\t\tthis.subscriptions.push(\r\n\t\t\tthis.prefix.sub(prefixSuffixCb(this.prefixRef), true),\r\n\t\t\tthis.suffix.sub(prefixSuffixCb(this.suffixRef), true)\r\n\t\t);\r\n\r\n\t\tthis.gamepadUiComponentRef.instance.addEventListener('mousedown', this.onmousedown);\r\n\t}\r\n\r\n\tpublic destroy(): void {\r\n\t\tthis.gamepadUiComponentRef.instance.removeEventListener('mousedown', this.onmousedown);\r\n\r\n\t\tthis.subscriptions.forEach((s) => s.destroy());\r\n\r\n\t\tsuper.destroy();\r\n\t}\r\n}\r\n", "import { Subject, UUID } from '@microsoft/msfs-sdk';\r\n\r\nexport class InputsListener extends ViewListener.ViewListener {\r\n\tpublic static isLoaded: Subject<boolean> = Subject.create(false);\r\n\r\n\tprivate static inputsListener: ViewListener.ViewListener = RegisterViewListener('JS_LISTENER_INPUTS', () =>\r\n\t\tInputsListener.isLoaded.set(true)\r\n\t);\r\n\r\n\tpublic static addInputChangeCallback(context: string, action: string, callback: (down: boolean) => void): string {\r\n\t\tconst idWatcher = 'InputWatcher_' + context + '_' + action + '_' + UUID.GenerateUuid();\r\n\r\n\t\tInputsListener.inputsListener.trigger('ADD_INPUT_WATCHER', idWatcher, context, action);\r\n\r\n\t\tInputsListener.inputsListener.on('InputListener.InputChange', (id: string, down: boolean) => {\r\n\t\t\tif (id === idWatcher) {\r\n\t\t\t\tcallback(down);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn idWatcher;\r\n\t}\r\n\r\n\tpublic static removeInputChangeCallback(id: string): void {\r\n\t\tInputsListener.inputsListener.trigger('REMOVE_INPUT_WATCHER', id);\r\n\t}\r\n}\r\n", "import {\r\n\tFSComponent,\r\n\tMappedSubject,\r\n\tMutableSubscribable,\r\n\tSubject,\r\n\tSubscribable,\r\n\tSubscribableUtils,\r\n\tSubscription,\r\n\tUUID,\r\n\tVNode,\r\n} from '@microsoft/msfs-sdk';\r\nimport { GamepadUiComponent, GamepadUiComponentProps } from '../../Gamepad';\r\nimport { MaybeSubscribable } from '../../types';\r\n\r\ntype InputHandledTypes = 'text' | 'number';\r\n\r\nexport interface InputAttributes {\r\n\ttype: InputHandledTypes;\r\n\r\n\talign?: 'left' | 'center' | 'right';\r\n\r\n\tmodel?: MutableSubscribable<string>;\r\n\r\n\tvalue?: MaybeSubscribable<string>;\r\n\r\n\tplaceholder?: MaybeSubscribable<string>;\r\n\r\n\tdisabled?: MaybeSubscribable<boolean>;\r\n\r\n\thidePlaceholderOnFocus?: boolean;\r\n\r\n\tfocusOnInit?: boolean;\r\n}\r\n\r\nexport interface InputHooks {\r\n\tonFocusIn?: () => void;\r\n\tonFocusOut?: () => void;\r\n\r\n\tonInput?: (element: HTMLInputElement) => void;\r\n\tonKeyPress?: (event: KeyboardEvent) => void;\r\n\r\n\tcharFilter?: (char: string) => boolean;\r\n}\r\n\r\nexport type InputProps = InputAttributes & InputHooks;\r\n\r\nexport type ExtendedInputProps = Omit<InputProps, 'type'>;\r\n\r\nexport class Input<T extends InputProps = InputProps> extends GamepadUiComponent<\r\n\tHTMLInputElement,\r\n\tT & GamepadUiComponentProps\r\n> {\r\n\tprotected readonly uuid = UUID.GenerateUuid();\r\n\r\n\tprotected readonly inputRef = this.gamepadUiComponentRef;\r\n\r\n\tprotected readonly model =\r\n\t\tthis.props.model || Subject.create(SubscribableUtils.toSubscribable(this.props.value || '', true).get());\r\n\r\n\tprivate _reloadLocalisation(): void {\r\n\t\tthis.placeholderTranslation.notify();\r\n\t}\r\n\r\n\tprivate readonly dispatchFocusOutEvent = this._dispatchFocusOutEvent.bind(this);\r\n\r\n\tprivate readonly _onKeyPress = this.onKeyPress.bind(this);\r\n\r\n\tprivate readonly _onInput = this.onInput.bind(this);\r\n\r\n\tprivate readonly align = this.props.align || 'left';\r\n\r\n\tprotected onKeyPress(event: KeyboardEvent): void {\r\n\t\tconst keyCode = event.keyCode || event.which;\r\n\r\n\t\tthis.props.onKeyPress?.(event);\r\n\r\n\t\tif (event.defaultPrevented) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (this.props.charFilter && !this.props.charFilter(String.fromCharCode(keyCode))) {\r\n\t\t\tevent.preventDefault();\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\r\n\tprotected onInput(): void {\r\n\t\tconst value = this.inputRef.instance.value;\r\n\t\tif (value === this.model.get()) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.model.set(value);\r\n\t}\r\n\r\n\tprotected onInputUpdated(value: string): void {\r\n\t\tthis.inputRef.instance.value = value;\r\n\r\n\t\tthis.props.onInput?.(this.inputRef.instance);\r\n\r\n\t\tif (!this.hidePlaceholderOnFocus && value.length === 0) {\r\n\t\t\tthis.placeholderShown.set(true);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate reloadLocalisation = this._reloadLocalisation.bind(this);\r\n\r\n\tprotected readonly _isFocused = Subject.create(false);\r\n\r\n\tpublic readonly isFocused: Subscribable<boolean> = this._isFocused;\r\n\r\n\tprotected onFocusIn(): void {\r\n\t\tthis.props.onFocusIn?.();\r\n\r\n\t\tif (this.hidePlaceholderOnFocus && this.inputRef.instance.value.length === 0) {\r\n\t\t\tthis.placeholderShown.set(false);\r\n\t\t}\r\n\t}\r\n\r\n\tprotected onFocusOut(): void {\r\n\t\tthis.props.onFocusOut?.();\r\n\r\n\t\tif (this.hidePlaceholderOnFocus && this.inputRef.instance.value.length === 0) {\r\n\t\t\tthis.placeholderShown.set(true);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic focus(): void {\r\n\t\tthis.inputRef.instance.focus();\r\n\t}\r\n\r\n\tpublic blur(): void {\r\n\t\tthis.inputRef.instance.blur();\r\n\t}\r\n\r\n\tpublic value(): string {\r\n\t\treturn this.model.get();\r\n\t}\r\n\r\n\tpublic clearInput(): void {\r\n\t\tthis.model.set('');\r\n\t}\r\n\r\n\tprivate _dispatchFocusOutEvent(): void {\r\n\t\tthis.inputRef.instance.blur();\r\n\t}\r\n\r\n\t/** Placeholder i18n/visibility */\r\n\tprivate readonly placeholderKey = SubscribableUtils.toSubscribable(this.props.placeholder ?? '', true);\r\n\tprivate readonly placeholderShown = Subject.create(true);\r\n\tprivate readonly placeholderTranslation = Subject.create(this.placeholderKey.get());\r\n\tprivate readonly hidePlaceholderOnFocus = this.props.hidePlaceholderOnFocus ?? false;\r\n\r\n\tpublic render(): VNode {\r\n\t\treturn (\r\n\t\t\t<input\r\n\t\t\t\tid={this.uuid}\r\n\t\t\t\tref={this.inputRef}\r\n\t\t\t\ttype={this.props.type}\r\n\t\t\t\tclass={{\r\n\t\t\t\t\t[`align-${this.align}`]: this.align !== 'left',\r\n\t\t\t\t}}\r\n\t\t\t\tplaceholder={MappedSubject.create<[boolean, string], string>(\r\n\t\t\t\t\t([placeholderShown, placeholderKey]) => {\r\n\t\t\t\t\t\treturn placeholderShown ? Utils.Translate(placeholderKey) : '';\r\n\t\t\t\t\t},\r\n\t\t\t\t\tthis.placeholderShown,\r\n\t\t\t\t\tthis.placeholderKey\r\n\t\t\t\t)}\r\n\t\t\t\tdisabled={this.props.disabled}\r\n\t\t\t\tvalue={SubscribableUtils.toSubscribable(this.props.model || this.props.value || '', true).get()}\r\n\t\t\t/>\r\n\t\t);\r\n\t}\r\n\r\n\tprotected readonly subs: Subscription[] = [];\r\n\r\n\tpublic onAfterRender(node: VNode): void {\r\n\t\tsuper.onAfterRender(node);\r\n\r\n\t\tthis.subs.push(\r\n\t\t\tthis.model.sub((value) => {\r\n\t\t\t\tthis.onInputUpdated(value);\r\n\t\t\t}, true),\r\n\t\t\tthis.placeholderKey.sub((key) => {\r\n\t\t\t\tthis.placeholderTranslation.set(key);\r\n\t\t\t}, true)\r\n\t\t);\r\n\r\n\t\tthis.inputRef.instance.addEventListener('focus', () => {\r\n\t\t\tif (this._isFocused.get()) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tthis._isFocused.set(true);\r\n\r\n\t\t\tCoherent.trigger('FOCUS_INPUT_FIELD', this.uuid, '', '', '', true);\r\n\t\t\tCoherent.on('mousePressOutsideView', this.dispatchFocusOutEvent);\r\n\r\n\t\t\tthis.onFocusIn();\r\n\t\t});\r\n\r\n\t\tthis.inputRef.instance.addEventListener('focusout', () => {\r\n\t\t\tif (!this._isFocused.get()) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tthis._isFocused.set(false);\r\n\r\n\t\t\tCoherent.trigger('UNFOCUS_INPUT_FIELD', this.uuid);\r\n\t\t\tCoherent.off('mousePressOutsideView', this.dispatchFocusOutEvent);\r\n\r\n\t\t\tthis.onFocusOut();\r\n\t\t});\r\n\r\n\t\tthis.inputRef.instance.addEventListener('input', this._onInput);\r\n\r\n\t\tthis.inputRef.instance.addEventListener('keypress', this._onKeyPress);\r\n\r\n\t\tCoherent.on('RELOAD_LOCALISATION', this.reloadLocalisation);\r\n\r\n\t\tif (this.props.focusOnInit) {\r\n\t\t\tthis.focus();\r\n\t\t}\r\n\t}\r\n\r\n\tpublic destroy(): void {\r\n\t\tthis.subs.forEach((s) => s.destroy());\r\n\r\n\t\tif (this._isFocused.get()) {\r\n\t\t\tCoherent.trigger('UNFOCUS_INPUT_FIELD', this.uuid);\r\n\t\t\tCoherent.off('mousePressOutsideView', this.dispatchFocusOutEvent);\r\n\t\t}\r\n\r\n\t\tthis.inputRef.instance.removeEventListener('keypress', this._onKeyPress);\r\n\t\tthis.inputRef.instance.removeEventListener('input', this._onInput);\r\n\r\n\t\tCoherent.off('RELOAD_LOCALISATION', this.reloadLocalisation);\r\n\r\n\t\tsuper.destroy();\r\n\t}\r\n}\r\n", "import {\r\n\tFSComponent,\r\n\tMutableSubscribable,\r\n\tNumberFormatter,\r\n\tNumberUnitInterface,\r\n\tSubject,\r\n\tSubscribableUtils,\r\n\tSubscription,\r\n\tUnit,\r\n\tVNode,\r\n} from '@microsoft/msfs-sdk';\r\nimport { GamepadUiComponent, GamepadUiComponentProps } from '../../Gamepad';\r\nimport { MaybeSubscribable, Nullable } from '../../types';\r\nimport { UnitFormatter } from '../../utils';\r\nimport { TextBox, TextBoxProps } from './TextBox';\r\n\r\ninterface UnitBoxProps extends Omit<TextBoxProps, 'prefix' | 'model' | 'value' | 'align' | 'suffix'> {\r\n\tvalue: MutableSubscribable<NumberUnitInterface<string, Unit<string>>, number>;\r\n\r\n\tunit?: Nullable<MaybeSubscribable<Nullable<Unit<string>>>>;\r\n}\r\n\r\nexport class UnitBox extends GamepadUiComponent<HTMLDivElement, UnitBoxProps & GamepadUiComponentProps> {\r\n\tprotected readonly valueNumber = this.props.value;\r\n\tprotected readonly unit = SubscribableUtils.toSubscribable(this.props.unit || null, true);\r\n\r\n\tprotected readonly valueText = Subject.create('0');\r\n\r\n\tprotected readonly subs: Subscription[] = [];\r\n\r\n\tprivate static readonly DEFAULT_UNIT_TEXT_MAP = UnitBox.createDefaultUnitTextMap();\r\n\r\n\tpublic static readonly DEFAULT_UNIT_FORMATTER = (unit: Unit<string>): Nullable<[string, string]> => {\r\n\t\tconst text = UnitBox.DEFAULT_UNIT_TEXT_MAP[unit.family]?.[unit.name];\r\n\r\n\t\tif (text) {\r\n\t\t\treturn text;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t};\r\n\r\n\tprivate static createDefaultUnitTextMap(): Partial<Record<string, Partial<Record<string, [string, string]>>>> {\r\n\t\tconst originalMap = UnitFormatter.getUnitTextMap();\r\n\r\n\t\tconst map = {} as Record<string, Record<string, [string, string]>>;\r\n\t\tfor (const family in originalMap) {\r\n\t\t\tconst nameMap = (map[family] = {} as Record<string, [string, string]>);\r\n\r\n\t\t\tconst originalNameMap = originalMap[family] as Readonly<Partial<Record<string, string>>>;\r\n\t\t\tfor (const name in originalNameMap) {\r\n\t\t\t\tconst text = (nameMap[name] = ['', '']);\r\n\r\n\t\t\t\tconst originalText = originalNameMap[name] as string;\r\n\r\n\t\t\t\tif (originalText[0].startsWith('\u00B0')) {\r\n\t\t\t\t\ttext[0] = '\u00B0';\r\n\t\t\t\t\ttext[1] = originalText.substring(1);\r\n\t\t\t\t} else {\r\n\t\t\t\t\ttext[1] = originalText;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn map;\r\n\t}\r\n\r\n\tprivate updateDisplay(value: NumberUnitInterface<string>, displayUnit: Nullable<Unit<string>>): void {\r\n\t\tif (!displayUnit || !value.unit.canConvert(displayUnit)) {\r\n\t\t\tdisplayUnit = value.unit;\r\n\t\t}\r\n\r\n\t\tconst numberValue = value.asUnit(displayUnit);\r\n\r\n\t\t// prevent scientific notation error\r\n\t\tif (numberValue >= 9_999_999) {\r\n\t\t\tthis.valueText.set('9999999');\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst numberText = NumberFormatter.create({\r\n\t\t\tnanString: '0',\r\n\t\t})(numberValue);\r\n\r\n\t\tif (numberText.includes('.')) {\r\n\t\t\tconst dotPos = numberText.indexOf('.');\r\n\t\t\tthis.valueText.set(numberText.substring(0, dotPos + 3)); // crop to 2 decimals after dot\r\n\t\t} else {\r\n\t\t\tthis.valueText.set(this.valueText.get().includes('.') ? `${numberText}.` : numberText); // allow last dot to allows decimals typing\r\n\t\t}\r\n\r\n\t\tconst unitTexts = UnitBox.DEFAULT_UNIT_FORMATTER(displayUnit);\r\n\t\tif (unitTexts === null) {\r\n\t\t\tthis.suffixSmall.set('');\r\n\t\t\tthis.suffixBig.set('');\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.suffixSmall.set(unitTexts[0]);\r\n\t\tthis.suffixBig.set(unitTexts[1]);\r\n\t}\r\n\r\n\tprotected readonly suffixSmall = Subject.create('');\r\n\tprotected readonly suffixBig = Subject.create('');\r\n\r\n\tpublic render(): VNode {\r\n\t\treturn (\r\n\t\t\t<div\r\n\t\t\t\tref={this.gamepadUiComponentRef}\r\n\t\t\t\tclass={{ unitbox: true, 'unitbox--disabled': this.props.disabled || false }}\r\n\t\t\t>\r\n\t\t\t\t<TextBox\r\n\t\t\t\t\talign=\"right\"\r\n\t\t\t\t\tshowDeleteIcon={this.props.showDeleteIcon || false}\r\n\t\t\t\t\tcustomDeleteIcon={this.props.customDeleteIcon}\r\n\t\t\t\t\tfocusOnClear={this.props.focusOnClear}\r\n\t\t\t\t\tonDelete={this.props.onDelete}\r\n\t\t\t\t\tmodel={this.valueText}\r\n\t\t\t\t\tplaceholder={this.props.placeholder}\r\n\t\t\t\t\thidePlaceholderOnFocus={this.props.hidePlaceholderOnFocus}\r\n\t\t\t\t\tdisabled={this.props.disabled}\r\n\t\t\t\t\tfocusOnInit={this.props.focusOnInit}\r\n\t\t\t\t\tonFocusIn={this.props.onFocusIn}\r\n\t\t\t\t\tonFocusOut={this.props.onFocusOut}\r\n\t\t\t\t\tonInput={this.props.onInput}\r\n\t\t\t\t\tonKeyPress={this.props.onKeyPress}\r\n\t\t\t\t\tcharFilter={(char: string): boolean => (char >= '0' && char <= '9') || [',', '.'].includes(char)}\r\n\t\t\t\t\tsuffix={\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t<span>{this.suffixSmall}</span>\r\n\t\t\t\t\t\t\t<span>{this.suffixBig}</span>\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n\tpublic onAfterRender(node: VNode): void {\r\n\t\tsuper.onAfterRender(node);\r\n\r\n\t\tthis.subs.push(\r\n\t\t\tthis.valueText.sub((value: string) => {\r\n\t\t\t\tvalue = value.replace(',', '.').replace(/\\.+$/, '');\r\n\r\n\t\t\t\tlet displayUnit = this.unit.get();\r\n\t\t\t\tif (!displayUnit || !this.valueNumber.get().unit.canConvert(displayUnit)) {\r\n\t\t\t\t\tdisplayUnit = this.valueNumber.get().unit;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst unitValue = displayUnit.convertTo(Number(value), this.valueNumber.get().unit);\r\n\r\n\t\t\t\tthis.valueNumber.set(unitValue);\r\n\r\n\t\t\t\tthis.updateDisplay(this.valueNumber.get(), this.unit.get());\r\n\t\t\t}),\r\n\t\t\tthis.valueNumber.sub((value: NumberUnitInterface<string>) => {\r\n\t\t\t\tthis.updateDisplay(value, this.unit.get());\r\n\t\t\t}, true),\r\n\t\t\tthis.unit.sub((unit: Nullable<Unit<string>>) => {\r\n\t\t\t\tthis.updateDisplay(this.valueNumber.get(), unit);\r\n\t\t\t}, true)\r\n\t\t);\r\n\t}\r\n\r\n\tpublic destroy(): void {\r\n\t\tthis.subs.forEach((s) => s.destroy());\r\n\r\n\t\tsuper.destroy();\r\n\t}\r\n}\r\n", "import { FSComponent, MutableSubscribable, Subject, VNode } from '@microsoft/msfs-sdk';\r\nimport { GamepadUiComponent, GamepadUiComponentProps } from '../../Gamepad';\r\nimport { Input } from './Input';\r\n\r\n/**\r\n * TODO Add units to the props\r\n * @internal\r\n */\r\nexport interface UnitsBoxProps extends GamepadUiComponentProps {\r\n\tvalueSub: MutableSubscribable<number>;\r\n\tdefaultValue?: number;\r\n}\r\n\r\n// WIP : reworking\r\nexport class UnitsBox extends GamepadUiComponent<HTMLDivElement, UnitsBoxProps> {\r\n\tprotected readonly inputSub = Subject.create('');\r\n\r\n\tpublic render(): VNode {\r\n\t\treturn (\r\n\t\t\t<div class=\"units-box-container\" ref={this.gamepadUiComponentRef}>\r\n\t\t\t\t<Input\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tmodel={this.inputSub}\r\n\t\t\t\t\tcustomClass=\"units-box light-text\"\r\n\t\t\t\t\tcharFilter={(char: string): boolean => char >= '0' && char <= '9'}\r\n\t\t\t\t\tonFocusOut={(): void => {\r\n\t\t\t\t\t\tlet value = parseInt(this.inputSub.get());\r\n\r\n\t\t\t\t\t\tif (Number.isNaN(value) || value < 0) {\r\n\t\t\t\t\t\t\tvalue = this.props.defaultValue ?? 0;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tthis.props.valueSub.set(value);\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t\t{/* TODO Manage units */}\r\n\t\t\t\t<span class=\"suffix light-text\">ft</span>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n", "import {\r\n\tAbstractNumberUnitDisplay,\r\n\tAbstractNumberUnitDisplayProps,\r\n\tFSComponent,\r\n\tNumberFormatter,\r\n\tNumberUnitInterface,\r\n\tSubject,\r\n\tSubscribableSet,\r\n\tToggleableClassNameRecord,\r\n\tUnit,\r\n\tVNode,\r\n} from '@microsoft/msfs-sdk';\r\nimport { UnitFormatter } from '../../utils';\r\n\r\n/**\r\n * Component props for NumberUnitDisplay.\r\n */\r\nexport interface NumberUnitDisplayProps<F extends string> extends AbstractNumberUnitDisplayProps<F> {\r\n\t/** A function which formats numbers. */\r\n\tformatter?: (number: number) => string;\r\n\r\n\t/**\r\n\t * A function which formats units. The formatted unit text should be written to the 2-tuple passed to the `out`\r\n\t * parameter, as `[bigText, smallText]`. `bigText` and `smallText` will be rendered into separate `<span>` elements\r\n\t * representing the big and small components of the rendered unit text, respectively. If not defined, then units\r\n\t * will be formatted based on the text generated by the {@link UnitFormatter} class.\r\n\t */\r\n\tunitFormatter?: (out: [string, string], unit: Unit<F>, number: number) => void;\r\n\r\n\t/** Whether to hide the unit text when the displayed value is equal to `NaN`. Defaults to `false`. */\r\n\thideUnitWhenNaN?: boolean;\r\n\r\n\t/** CSS class(es) to add to the root of the icon component. */\r\n\tclass?: string | SubscribableSet<string> | ToggleableClassNameRecord;\r\n}\r\n\r\n/**\r\n * A component which displays a number with units.\r\n */\r\nexport class NumberUnitDisplay<F extends string> extends AbstractNumberUnitDisplay<F, NumberUnitDisplayProps<F>> {\r\n\t// We create our own map instead of using UnitFormatter.create() so that we don't have to generate new big and small\r\n\t// text substrings with every call to the default unit formatter function.\r\n\tprivate static readonly DEFAULT_UNIT_TEXT_MAP = NumberUnitDisplay.createDefaultUnitTextMap();\r\n\r\n\t/**\r\n\t * A function which formats units to default text for NumberUnitDisplay.\r\n\t * @param out The 2-tuple to which to write the formatted text, as `[bigText, smallText]`.\r\n\t * @param unit The unit to format.\r\n\t */\r\n\tpublic static readonly DEFAULT_UNIT_FORMATTER = (out: [string, string], unit: Unit<any>): void => {\r\n\t\tconst text = NumberUnitDisplay.DEFAULT_UNIT_TEXT_MAP[unit.family]?.[unit.name];\r\n\r\n\t\tif (text) {\r\n\t\t\tout[0] = text[0];\r\n\t\t\tout[1] = text[1];\r\n\t\t}\r\n\t};\r\n\r\n\tprivate static readonly unitTextCache: [string, string] = ['', ''];\r\n\r\n\t// Default formatter if it is not given in the props\r\n\tprivate readonly formatter =\r\n\t\tthis.props.formatter ??\r\n\t\tNumberFormatter.create({\r\n\t\t\t// TODO Properly format the time\r\n\t\t\tprecision: 0.01,\r\n\t\t\tmaxDigits: 5,\r\n\t\t\tforceDecimalZeroes: false,\r\n\t\t\tnanString: '0',\r\n\t\t});\r\n\r\n\tprivate readonly unitFormatter = this.props.unitFormatter ?? NumberUnitDisplay.DEFAULT_UNIT_FORMATTER;\r\n\r\n\tprivate readonly unitTextBigDisplay = Subject.create('');\r\n\tprivate readonly unitTextSmallDisplay = Subject.create('');\r\n\r\n\tprivate readonly numberText = Subject.create('');\r\n\tprivate readonly unitTextBig = Subject.create('');\r\n\tprivate readonly unitTextSmall = Subject.create('');\r\n\r\n\t/** @inheritdoc */\r\n\tprotected onValueChanged(value: NumberUnitInterface<F>): void {\r\n\t\tthis.updateDisplay(value, this.displayUnit.get());\r\n\t}\r\n\r\n\t/** @inheritdoc */\r\n\tprotected onDisplayUnitChanged(displayUnit: Unit<F> | null): void {\r\n\t\tthis.updateDisplay(this.value.get(), displayUnit);\r\n\t}\r\n\r\n\t/**\r\n\t * Updates this component's displayed number and unit text.\r\n\t * @param value The value to display.\r\n\t * @param displayUnit The unit type in which to display the value, or `null` if the value should be displayed in its\r\n\t * native unit type.\r\n\t */\r\n\tprivate updateDisplay(value: NumberUnitInterface<F>, displayUnit: Unit<F> | null): void {\r\n\t\tif (!displayUnit || !value.unit.canConvert(displayUnit)) {\r\n\t\t\tdisplayUnit = value.unit;\r\n\t\t}\r\n\r\n\t\tconst numberValue = value.asUnit(displayUnit);\r\n\r\n\t\tconst numberText = this.formatter(numberValue);\r\n\t\tthis.numberText.set(numberText);\r\n\r\n\t\tNumberUnitDisplay.unitTextCache[0] = '';\r\n\t\tNumberUnitDisplay.unitTextCache[1] = '';\r\n\r\n\t\tthis.unitFormatter(NumberUnitDisplay.unitTextCache, displayUnit, numberValue);\r\n\t\tthis.unitTextBig.set(NumberUnitDisplay.unitTextCache[0]);\r\n\t\tthis.unitTextSmall.set(NumberUnitDisplay.unitTextCache[1]);\r\n\r\n\t\tthis.updateUnitTextVisibility(\r\n\t\t\tnumberValue,\r\n\t\t\tNumberUnitDisplay.unitTextCache[0],\r\n\t\t\tNumberUnitDisplay.unitTextCache[1]\r\n\t\t);\r\n\t}\r\n\r\n\t/**\r\n\t * Updates whether this component's unit text spans are visible.\r\n\t * @param numberValue The numeric value displayed by this component.\r\n\t * @param unitTextBig The text to display in the big text span.\r\n\t * @param unitTextSmall The text to display in the small text span.\r\n\t */\r\n\tprivate updateUnitTextVisibility(numberValue: number, unitTextBig: string, unitTextSmall: string): void {\r\n\t\tif (this.props.hideUnitWhenNaN === true && isNaN(numberValue)) {\r\n\t\t\tthis.unitTextBigDisplay.set('none');\r\n\t\t\tthis.unitTextSmallDisplay.set('none');\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// We have to hide the unit text when empty because an empty string will get rendered as a space.\r\n\t\tthis.unitTextBigDisplay.set(unitTextBig === '' ? 'none' : '');\r\n\t\tthis.unitTextSmallDisplay.set(unitTextSmall === '' ? 'none' : '');\r\n\t}\r\n\r\n\t/**\r\n\t * Creates the default mapping from unit to displayed text.\r\n\t * @returns The default mapping from unit to displayed text.\r\n\t */\r\n\tprivate static createDefaultUnitTextMap(): Partial<Record<string, Partial<Record<string, [string, string]>>>> {\r\n\t\tconst originalMap = UnitFormatter.getUnitTextMap();\r\n\r\n\t\tconst map = {} as Record<string, Record<string, [string, string]>>;\r\n\t\tfor (const family in originalMap) {\r\n\t\t\tconst nameMap = (map[family] = {} as Record<string, [string, string]>);\r\n\r\n\t\t\tconst originalNameMap = originalMap[family] as Readonly<Partial<Record<string, string>>>;\r\n\t\t\tfor (const name in originalNameMap) {\r\n\t\t\t\tconst text = (nameMap[name] = ['', '']);\r\n\r\n\t\t\t\tconst originalText = originalNameMap[name] as string;\r\n\r\n\t\t\t\tif (originalText[0] === '\u00B0') {\r\n\t\t\t\t\ttext[0] = '\u00B0';\r\n\t\t\t\t\ttext[1] = originalText.substring(1);\r\n\t\t\t\t} else {\r\n\t\t\t\t\ttext[1] = originalText;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn map;\r\n\t}\r\n\r\n\tpublic render(): VNode {\r\n\t\treturn (\r\n\t\t\t<div class={this.props.class ?? ''} style=\"white-space: nowrap;\">\r\n\t\t\t\t<span class=\"numberunit-num\">{this.numberText}</span>\r\n\t\t\t\t<span class=\"numberunit-unit-big\" style={{ display: this.unitTextBigDisplay }}>\r\n\t\t\t\t\t{this.unitTextBig}\r\n\t\t\t\t</span>\r\n\t\t\t\t<span class=\"numberunit-unit-small\" style={{ display: this.unitTextSmallDisplay }}>\r\n\t\t\t\t\t{this.unitTextSmall}\r\n\t\t\t\t</span>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n", "import { FSComponent, ObjectSubject, Subject, SubscribableMapFunctions, VNode } from '@microsoft/msfs-sdk';\r\nimport { IconElement } from '../IconElement';\r\nimport { ProgressComponent, ProgressComponentProps } from './Progress';\r\n\r\ninterface CircularProgressStyleProps {\r\n\t'--circular-progress-rotation-value-left': string;\r\n\t'--circular-progress-rotation-value-right': string;\r\n}\r\n\r\ninterface CircularProgressProps extends ProgressComponentProps {\r\n\ticonPath?: string;\r\n}\r\n\r\nexport class CircularProgress extends ProgressComponent<CircularProgressProps> {\r\n\tprotected readonly circularProgressRef = FSComponent.createRef<HTMLDivElement>();\r\n\tprotected readonly lowerSliceRef = FSComponent.createRef<HTMLDivElement>();\r\n\tprotected readonly higherSliceRef = FSComponent.createRef<HTMLDivElement>();\r\n\r\n\tprotected readonly sliceClassToggleSub = Subject.create(false);\r\n\tprotected readonly sliceClassToggleNotSub = this.sliceClassToggleSub.map(SubscribableMapFunctions.not());\r\n\r\n\tprivate readonly circularProgressStyle = ObjectSubject.create<CircularProgressStyleProps>({\r\n\t\t'--circular-progress-rotation-value-left': '0',\r\n\t\t'--circular-progress-rotation-value-right': '0',\r\n\t});\r\n\r\n\tprivate readonly circularProgressPrimaryBackgroundClass = 'circular-progress-primary-background';\r\n\tprivate readonly circularProgressSecondaryBackgroundClass = 'circular-progress-secondary-background';\r\n\r\n\tprivate readonly circularProgressSliceClasses = {\r\n\t\t'circular-progress-slice': true,\r\n\t\t[this.circularProgressSecondaryBackgroundClass]: this.sliceClassToggleSub,\r\n\t\t[this.circularProgressPrimaryBackgroundClass]: this.sliceClassToggleNotSub,\r\n\t};\r\n\r\n\tprivate updateProgressByHalf(progressRatio: number, overHalf: boolean): void {\r\n\t\t/* Set rotation */\r\n\t\t/* FIXME Make it cleaner? */\r\n\t\tif (overHalf) {\r\n\t\t\tthis.circularProgressStyle.set('--circular-progress-rotation-value-left', `${progressRatio}turn`);\r\n\t\t\tthis.circularProgressStyle.set('--circular-progress-rotation-value-right', '0');\r\n\t\t} else {\r\n\t\t\tthis.circularProgressStyle.set('--circular-progress-rotation-value-left', '0');\r\n\t\t\tthis.circularProgressStyle.set('--circular-progress-rotation-value-right', `${progressRatio}turn`);\r\n\t\t}\r\n\r\n\t\tthis.sliceClassToggleSub.set(overHalf);\r\n\t}\r\n\r\n\tprotected updateProgress(progressRatio: number): void {\r\n\t\tthis.updateProgressByHalf(progressRatio, progressRatio > 0.5);\r\n\t}\r\n\r\n\tpublic render(): VNode {\r\n\t\treturn (\r\n\t\t\t<div\r\n\t\t\t\tclass={{ 'circular-progress-container': true, 'full-completion': this.fullCompletionSub }}\r\n\t\t\t\tref={this.gamepadUiComponentRef}\r\n\t\t\t>\r\n\t\t\t\t<div class=\"circular-progress-circle-container\">\r\n\t\t\t\t\t<div class=\"circular-progress-circle outer\" />\r\n\t\t\t\t\t<div class=\"circular-progress-circle inner\" />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div\r\n\t\t\t\t\tclass={{\r\n\t\t\t\t\t\t'circular-progress': true,\r\n\t\t\t\t\t\t[this.circularProgressPrimaryBackgroundClass]: this.sliceClassToggleSub,\r\n\t\t\t\t\t\t[this.circularProgressSecondaryBackgroundClass]: this.sliceClassToggleNotSub,\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tref={this.circularProgressRef}\r\n\t\t\t\t\tstyle={this.circularProgressStyle}\r\n\t\t\t\t>\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tclass={{\r\n\t\t\t\t\t\t\t...this.circularProgressSliceClasses,\r\n\t\t\t\t\t\t\tleft: true,\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tref={this.higherSliceRef}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tclass={{\r\n\t\t\t\t\t\t\t...this.circularProgressSliceClasses,\r\n\t\t\t\t\t\t\tright: true,\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tref={this.lowerSliceRef}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t{this.props.iconPath && (\r\n\t\t\t\t\t\t<IconElement\r\n\t\t\t\t\t\t\tclass={{\r\n\t\t\t\t\t\t\t\t'full-completion-icon': true,\r\n\t\t\t\t\t\t\t\thide: this.fullCompletionSub.map(SubscribableMapFunctions.not()),\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\turl={this.props.iconPath}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n", "import { Subject, Subscribable, Subscription, VNode } from '@microsoft/msfs-sdk';\r\nimport { GamepadUiComponent, GamepadUiComponentProps } from '../../Gamepad';\r\n\r\nexport interface ProgressComponentProps extends GamepadUiComponentProps {\r\n\t/* The progress value between 0 and 1 */\r\n\tprogressRatio: number | Subscribable<number>;\r\n}\r\n\r\nexport abstract class ProgressComponent<\r\n\tP extends ProgressComponentProps = ProgressComponentProps\r\n> extends GamepadUiComponent<HTMLDivElement, P> {\r\n\tprotected progressRatioSubscription?: Subscription;\r\n\r\n\tprotected readonly fullCompletionSub = Subject.create(false);\r\n\r\n\tprotected abstract updateProgress(progressRatio: number): void;\r\n\r\n\tprivate _updateProgress(progressRatio: number): void {\r\n\t\tthis.updateProgress(progressRatio);\r\n\r\n\t\tthis.fullCompletionSub.set(progressRatio === 1);\r\n\t}\r\n\r\n\tpublic onAfterRender(node: VNode): void {\r\n\t\tsuper.onAfterRender(node);\r\n\r\n\t\tif (typeof this.props.progressRatio === 'number') {\r\n\t\t\tthis._updateProgress(this.props.progressRatio);\r\n\t\t} else {\r\n\t\t\tthis.progressRatioSubscription = this.props.progressRatio.sub(this._updateProgress.bind(this), true);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic destroy(): void {\r\n\t\tthis.progressRatioSubscription?.destroy();\r\n\r\n\t\tsuper.destroy();\r\n\t}\r\n}\r\n", "import { FSComponent, ObjectSubject, VNode } from '@microsoft/msfs-sdk';\r\nimport { ProgressComponent } from './Progress';\r\n\r\nexport class ProgressBar extends ProgressComponent {\r\n\tprivate readonly circularProgressStyle = ObjectSubject.create({\r\n\t\t'--progress-bar-width-percentage': '0%',\r\n\t});\r\n\r\n\tprotected updateProgress(progressRatio: number): void {\r\n\t\tlet progressPercentage = progressRatio * 100;\r\n\t\tif (progressPercentage > 100) progressPercentage = 100;\r\n\t\telse if (progressPercentage < 0) progressPercentage = 0;\r\n\r\n\t\tthis.circularProgressStyle.set('--progress-bar-width-percentage', `${progressPercentage}%`);\r\n\t}\r\n\r\n\tpublic render(): VNode {\r\n\t\treturn (\r\n\t\t\t<div\r\n\t\t\t\tclass={{ 'progress-bar-container': true, 'full-completion': this.fullCompletionSub }}\r\n\t\t\t\tref={this.gamepadUiComponentRef}\r\n\t\t\t>\r\n\t\t\t\t<div class=\"progress-bar\" style={this.circularProgressStyle} />\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n", "import {\r\n\tArraySubject,\r\n\tDebounceTimer,\r\n\tFSComponent,\r\n\tNodeReference,\r\n\tSubject,\r\n\tSubscribableUtils,\r\n\tSubscription,\r\n\tVNode,\r\n\tWait,\r\n} from '@microsoft/msfs-sdk';\r\nimport { GamepadUiComponent, GamepadUiComponentProps } from '../../Gamepad';\r\nimport { TVNode } from '../../types';\r\nimport { TextBox, TextBoxProps } from '../Input';\r\nimport { List } from '../List';\r\n\r\nexport interface SearchBarProps<T> extends TextBoxProps, GamepadUiComponentProps {\r\n\t/** Component ref to the text box */\r\n\ttextBoxRef?: NodeReference<TextBox>;\r\n\r\n\t/** Component ref to the search list container */\r\n\tsearchBarListRef?: NodeReference<HTMLDivElement>;\r\n\r\n\t/** The callback that renders the list items */\r\n\trenderItem?: (data: T) => VNode;\r\n\r\n\t/** The function that defines the rule to filter the search, with a given input */\r\n\tupdateResultItems?: (input: string) => Promise<readonly T[]>;\r\n\r\n\t/** Perform an empty search immediately on init */\r\n\temptySearchOnInit?: boolean;\r\n\r\n\t/** Perform an empty search on focus out */\r\n\temptySearchOnFocusOut?: boolean;\r\n\r\n\t/** Page bottom */\r\n\tonListDisplayed?: () => void;\r\n\r\n\t/** The debounce time in ms */\r\n\tdebounce?: number;\r\n}\r\n\r\nexport class SearchBar<T, P extends SearchBarProps<T> = SearchBarProps<T>> extends GamepadUiComponent<\r\n\tHTMLDivElement,\r\n\tP\r\n> {\r\n\tprotected readonly resultItems = ArraySubject.create<T>([]);\r\n\tprotected readonly onInputSearchSub = Subject.create('');\r\n\tprotected readonly textBoxRef = this.props.textBoxRef ?? FSComponent.createRef<TextBox>();\r\n\tprotected readonly searchBarListRef = this.props.searchBarListRef ?? FSComponent.createRef<HTMLDivElement>();\r\n\tprotected readonly isSearchBarFocus = Subject.create<boolean>(false);\r\n\tprotected readonly placeholder = this.props.placeholder ?? '@fs-base-efb,TT:EFB.COMMON.SEARCH_PLACEHOLDER';\r\n\r\n\tprotected readonly subs: Subscription[] = [];\r\n\r\n\tprotected readonly debounce = new DebounceTimer();\r\n\tprotected static readonly DEBOUNCE_TIME = 300;\r\n\r\n\tprotected tryRenderItem(data: T): VNode {\r\n\t\treturn this.props.renderItem ? this.props.renderItem(data) : this.renderItem(data);\r\n\t}\r\n\r\n\t/* Must be implemented by children classes */\r\n\tprotected renderItem(_data: T): VNode {\r\n\t\tthrow new Error('Missing renderItem props');\r\n\t}\r\n\r\n\tprotected tryUpdateResultItems(input: string): Promise<readonly T[]> {\r\n\t\treturn this.props.updateResultItems ? this.props.updateResultItems(input) : this.updateResultItems(input);\r\n\t}\r\n\r\n\t/* Must be implemented by children classes */\r\n\tprotected updateResultItems(_input: string): Promise<readonly T[]> {\r\n\t\tthrow new Error('Missing updateResultItems props');\r\n\t}\r\n\r\n\tprotected onSearchUpdated(input: string): void {\r\n\t\tthis.debounce.schedule(() => {\r\n\t\t\tthis.tryUpdateResultItems(input).then((values): void => {\r\n\t\t\t\tthis.resultItems.set(values);\r\n\t\t\t});\r\n\t\t}, this.props.debounce ?? SearchBar.DEBOUNCE_TIME);\r\n\t}\r\n\r\n\tpublic onResultItemsUpdated(): void {\r\n\t\tthis.onInputSearchSub.notify();\r\n\t}\r\n\r\n\tprotected readonly onDelete = (): void => {\r\n\t\t//\r\n\t};\r\n\r\n\tprotected readonly prefix = Subject.create(SubscribableUtils.toSubscribable(this.props.prefix || '', true).get());\r\n\r\n\tprotected readonly suffix = Subject.create(SubscribableUtils.toSubscribable(this.props.suffix || '', true).get());\r\n\r\n\tpublic render(): TVNode<SearchBar<T>> {\r\n\t\treturn (\r\n\t\t\t<div class=\"search-bar\" ref={this.gamepadUiComponentRef}>\r\n\t\t\t\t<TextBox\r\n\t\t\t\t\tmodel={this.onInputSearchSub}\r\n\t\t\t\t\tref={this.textBoxRef}\r\n\t\t\t\t\tplaceholder={this.placeholder}\r\n\t\t\t\t\tdisabled={this.props.disabled}\r\n\t\t\t\t\thidePlaceholderOnFocus={this.props.hidePlaceholderOnFocus}\r\n\t\t\t\t\tfocusOnInit={this.props.focusOnInit}\r\n\t\t\t\t\tonFocusIn={(): void => {\r\n\t\t\t\t\t\tWait.awaitFrames(1)\r\n\t\t\t\t\t\t\t.catch()\r\n\t\t\t\t\t\t\t.then(() => this.isSearchBarFocus.set(true));\r\n\t\t\t\t\t\tthis.props.onFocusIn?.();\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tonFocusOut={(): void => {\r\n\t\t\t\t\t\tWait.awaitFrames(1)\r\n\t\t\t\t\t\t\t.catch()\r\n\t\t\t\t\t\t\t.then(() => this.isSearchBarFocus.set(false));\r\n\r\n\t\t\t\t\t\tthis.props.onFocusOut?.();\r\n\r\n\t\t\t\t\t\t// Clear input if emptySearchOnFocusOut is true or if input only contains whitespace\r\n\t\t\t\t\t\tif (this.props.emptySearchOnFocusOut || !this.onInputSearchSub.get().trim()) {\r\n\t\t\t\t\t\t\tthis.textBoxRef.instance.inputRef.instance.clearInput();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tonInput={this.props.onInput}\r\n\t\t\t\t\tonKeyPress={this.props.onKeyPress}\r\n\t\t\t\t\tcharFilter={this.props.charFilter}\r\n\t\t\t\t\tonDelete={this.onDelete}\r\n\t\t\t\t\tfocusOnClear={this.props.focusOnClear}\r\n\t\t\t\t\tshowDeleteIcon={this.props.showDeleteIcon ?? true}\r\n\t\t\t\t\tcustomDeleteIcon={this.props.customDeleteIcon}\r\n\t\t\t\t\tprefix={this.prefix}\r\n\t\t\t\t\tsuffix={this.suffix}\r\n\t\t\t\t/>\r\n\t\t\t\t<div class=\"search-bar-list-container\" ref={this.searchBarListRef}>\r\n\t\t\t\t\t<List<T>\r\n\t\t\t\t\t\tdata={this.resultItems}\r\n\t\t\t\t\t\tisListVisible={this.isSearchBarFocus}\r\n\t\t\t\t\t\tisScrollable={true}\r\n\t\t\t\t\t\tcustomClass=\"search-bar-list\"\r\n\t\t\t\t\t\trenderItem={this.tryRenderItem.bind(this)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n\tpublic onAfterRender(node: VNode): void {\r\n\t\tsuper.onAfterRender(node);\r\n\r\n\t\tif (this.props.emptySearchOnInit) {\r\n\t\t\tthis.onSearchUpdated('');\r\n\t\t}\r\n\r\n\t\tthis.subs.push(\r\n\t\t\tthis.onInputSearchSub.sub((value) => {\r\n\t\t\t\tthis.onSearchUpdated(value);\r\n\t\t\t})\r\n\t\t);\r\n\r\n\t\tif (this.props.onListDisplayed !== undefined) {\r\n\t\t\tthis.subs.push(\r\n\t\t\t\tthis.isSearchBarFocus.sub((focus: boolean) => {\r\n\t\t\t\t\tif (focus) {\r\n\t\t\t\t\t\tthis.props.onListDisplayed?.();\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic destroy(): void {\r\n\t\tthis.subs.forEach((s) => s.destroy());\r\n\r\n\t\tsuper.destroy();\r\n\t}\r\n}\r\n", "import {\r\n\tArraySubject,\r\n\tEventBus,\r\n\tFacility,\r\n\tFacilityLoader,\r\n\tFacilityRepository,\r\n\tFacilitySearchType,\r\n\tFacilityType,\r\n\tFSComponent,\r\n\tGeoPoint,\r\n\tGNSSEvents,\r\n\tICAO,\r\n\tMappedSubject,\r\n\tSubject,\r\n\tSubscribable,\r\n\tSubscription,\r\n\tVNode,\r\n} from '@microsoft/msfs-sdk';\r\nimport { TT } from '../../i18n';\r\nimport { unique } from '../../utils';\r\nimport { FacilitySearchUtils } from '../../utils/FacilitySearchUtils';\r\nimport { createCustomFacility, getFacilityIconPath, NullFacility } from '../../utils/FacilityUtils';\r\nimport { IconElement } from '../IconElement';\r\nimport { SearchBar, SearchBarProps } from '../SearchBar';\r\nimport { FacilityResultItem } from './FacilityResultItem';\r\nimport { SearchFacilityHistoryManager } from './SearchFacilityHistoryManager';\r\n\r\n/** The SearchFacility props */\r\ninterface SearchFacilityProps extends SearchBarProps<Facility> {\r\n\t/** The event bus */\r\n\tbus: EventBus;\r\n\r\n\t/** A callback executed when a facility is selected */\r\n\tonFacilityClick: (facility: Facility | null) => void;\r\n\r\n\t/** A formatter to modify text output in textbox  */\r\n\tonFacilitySelectionFormatter?: (facility: Facility) => string;\r\n\r\n\tonTextBoxFocused?: (state: boolean) => void;\r\n\r\n\tselectedFacilitySub?: Subscribable<NullFacility>;\r\n\r\n\t/**\r\n\t * An optional function to call that will reset the value of the `selectedFacilitySub`\r\n\t * when `resetInput()` is called on the `SearchFacility` instance.\r\n\t */\r\n\tonResetInput?: () => void;\r\n\r\n\tmaxHistoryItems?: number;\r\n\r\n\t/* If true, an option \"Your position\" is available before the search history */\r\n\tpositionSelectable?: boolean;\r\n\r\n\t/** Defaults to all. */\r\n\tfacilitySearchType?: FacilitySearchType;\r\n}\r\n\r\n/** A UI component to look for facilities  */\r\nexport class SearchFacility extends SearchBar<Facility, SearchFacilityProps> {\r\n\tprotected readonly facilityLoader = new FacilityLoader(FacilityRepository.getRepository(this.props.bus));\r\n\r\n\t/** Only used if `selectedFacilitySub` prop was not passed in. */\r\n\tprivate readonly internalSelectedFacilitySub = Subject.create<Facility | null>(null);\r\n\tprivate readonly selectedFacilitySub = this.props.selectedFacilitySub || this.internalSelectedFacilitySub;\r\n\tprivate selectedFacility: Facility | null = null;\r\n\r\n\tprotected readonly recentSearchesICAO = ArraySubject.create<Facility>();\r\n\tprotected readonly historyManager = new SearchFacilityHistoryManager();\r\n\r\n\tpublic readonly ppos = new GeoPoint(0, 0);\r\n\r\n\tprivate selectedFacilitySubscription?: Subscription;\r\n\r\n\tpublic constructor(props: SearchFacilityProps) {\r\n\t\tsuper(props);\r\n\r\n\t\tprops.bus\r\n\t\t\t.getSubscriber<GNSSEvents>()\r\n\t\t\t.on('gps-position')\r\n\t\t\t.atFrequency(1)\r\n\t\t\t.handle((pos) => this.ppos.set(pos.lat, pos.long));\r\n\t}\r\n\r\n\tprotected hideCustoms = MappedSubject.create(\r\n\t\t([focus, input]) => !focus || input.length !== 0,\r\n\t\tthis.isSearchBarFocus,\r\n\t\tthis.onInputSearchSub\r\n\t);\r\n\r\n\tprotected customItemSelectRef = FSComponent.createRef<HTMLDivElement>();\r\n\tprotected customItemPositionRef = FSComponent.createRef<HTMLDivElement>();\r\n\r\n\tprotected renderItem(data: Facility): VNode {\r\n\t\treturn <FacilityResultItem facility={data} separator=\", \" callback={this.itemCallback.bind(this)} />;\r\n\t}\r\n\r\n\tprotected itemCallback(data: Facility): void {\r\n\t\tthis.selectedFacility = data;\r\n\r\n\t\tif (this.props.onFacilitySelectionFormatter) {\r\n\t\t\tthis.onInputSearchSub.set(this.props.onFacilitySelectionFormatter(data));\r\n\t\t}\r\n\r\n\t\tthis.prefix.set(<IconElement url={getFacilityIconPath(ICAO.getFacilityType(data.icao))} />);\r\n\r\n\t\tthis.props.onFacilityClick(data);\r\n\r\n\t\tif (ICAO.getFacilityType(data.icao) !== FacilityType.USR) {\r\n\t\t\tthis.historyManager.mostRecentSearch(data.icao);\r\n\t\t}\r\n\r\n\t\tthis.textBoxRef.instance.inputRef.instance.blur();\r\n\t}\r\n\r\n\tprotected async updateResultItems(input: string): Promise<readonly Facility[]> {\r\n\t\tconst searchInput = input.trim();\r\n\t\tconst facilities: Facility[] = [];\r\n\r\n\t\t// Load recent searches filtered by facility type\r\n\t\tconst recentSearchs = (await this.updateRecentSearches(searchInput)).filter((e) => {\r\n\t\t\tif (e === null) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tswitch (this.props.facilitySearchType) {\r\n\t\t\t\tcase FacilitySearchType.Airport:\r\n\t\t\t\t\treturn ICAO.getFacilityType(e.icao) === FacilityType.Airport;\r\n\t\t\t\tcase FacilitySearchType.Intersection:\r\n\t\t\t\t\treturn ICAO.getFacilityType(e.icao) === FacilityType.Intersection;\r\n\t\t\t\tcase FacilitySearchType.Vor:\r\n\t\t\t\t\treturn ICAO.getFacilityType(e.icao) === FacilityType.VOR;\r\n\t\t\t\tcase FacilitySearchType.Ndb:\r\n\t\t\t\t\treturn ICAO.getFacilityType(e.icao) === FacilityType.NDB;\r\n\t\t\t\tcase FacilitySearchType.User:\r\n\t\t\t\t\treturn ICAO.getFacilityType(e.icao) === FacilityType.USR;\r\n\t\t\t\tcase FacilitySearchType.Visual:\r\n\t\t\t\t\treturn ICAO.getFacilityType(e.icao) === FacilityType.VIS;\r\n\t\t\t\tcase FacilitySearchType.AllExceptVisual:\r\n\t\t\t\t\treturn ICAO.getFacilityType(e.icao) !== FacilityType.VIS;\r\n\t\t\t\tcase FacilitySearchType.Boundary:\r\n\t\t\t\tcase FacilitySearchType.All:\r\n\t\t\t\tdefault:\r\n\t\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}) as Facility[]; // `as Facility[]` can be remove if using Typescript 5.5+ (https://devblogs.microsoft.com/typescript/announcing-typescript-5-5-beta/#inferred-type-predicates)\r\n\t\tfacilities.push(...recentSearchs);\r\n\r\n\t\tif (searchInput.length > 0) {\r\n\t\t\t// search facilities and filter to avoid duplicates between history and search results\r\n\t\t\tfacilities.push(\r\n\t\t\t\t...(await FacilitySearchUtils.getSearchUtils(this.props.bus).loadFacilities(\r\n\t\t\t\t\tsearchInput,\r\n\t\t\t\t\tthis.props.facilitySearchType\r\n\t\t\t\t))\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\treturn new Promise((resolve) => resolve(unique(facilities)));\r\n\t}\r\n\r\n\tprotected async updateRecentSearches(input: string): Promise<readonly NullFacility[]> {\r\n\t\tconst facilitiesPromises: Array<Promise<NullFacility>> = this.historyManager\r\n\t\t\t.getStoredICAOs(input, this.props.maxHistoryItems)\r\n\t\t\t.map((icao) => {\r\n\t\t\t\treturn this.facilityLoader.getFacility(ICAO.getFacilityType(icao), icao).catch(() => {\r\n\t\t\t\t\treturn null;\r\n\t\t\t\t});\r\n\t\t\t});\r\n\r\n\t\treturn Promise.all(facilitiesPromises);\r\n\t}\r\n\r\n\tpublic resetInput(): void {\r\n\t\tif (this.selectedFacilitySub.get() !== null) {\r\n\t\t\tthis.onInputSearchSub.set('');\r\n\r\n\t\t\t// As selectedFacilitySub is no longer mutable, instead invoke the onResetInput\r\n\t\t\t// callback to handle resetting the value to some default state.\r\n\t\t\tthis.props.onResetInput?.();\r\n\t\t\tthis.internalSelectedFacilitySub.set(null);\r\n\r\n\t\t\tthis.prefix.set('');\r\n\t\t}\r\n\t}\r\n\r\n\tpublic restoreInput(): void {\r\n\t\tconst inputHasBeenCleared = !this.onInputSearchSub.get();\r\n\t\tif (this.selectedFacility && inputHasBeenCleared) {\r\n\t\t\tthis.itemCallback(this.selectedFacility);\r\n\t\t}\r\n\t}\r\n\r\n\tprotected readonly onDelete = (): void => {\r\n\t\tthis.props.onDelete?.();\r\n\t\tthis.prefix.set('');\r\n\t};\r\n\r\n\tpublic onAfterRender(node: VNode): void {\r\n\t\tsuper.onAfterRender(node);\r\n\r\n\t\tthis.selectedFacilitySubscription = this.props.selectedFacilitySub?.sub((facility) => {\r\n\t\t\tconst localFacility = this.selectedFacilitySub.get();\r\n\t\t\tthis.selectedFacility = facility;\r\n\t\t\tif (facility?.icao !== localFacility?.icao || this.props.selectedFacilitySub === this.selectedFacilitySub) {\r\n\t\t\t\tthis.onInputSearchSub.set(\r\n\t\t\t\t\tfacility ? this.props.onFacilitySelectionFormatter?.(facility) || facility.icao : ''\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t}, true);\r\n\r\n\t\tthis.subs.push(\r\n\t\t\tthis.isSearchBarFocus.sub((focus: boolean): void => {\r\n\t\t\t\tthis.props.onTextBoxFocused?.(focus);\r\n\r\n\t\t\t\t// on focus, update the search in order to update the search history\r\n\t\t\t\tif (focus) {\r\n\t\t\t\t\tthis.onSearchUpdated(this.onInputSearchSub.get());\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t);\r\n\r\n\t\tif (this.props.positionSelectable) {\r\n\t\t\tFSComponent.render(\r\n\t\t\t\t<div class={{ 'search-facility-custom-items': true, hide: this.hideCustoms }}>\r\n\t\t\t\t\t{/* <div class=\"facility-result-item\" ref={this.customItemSelectRef}>\r\n\t\t\t\t\t\t<div class=\"icon-container\">\r\n\t\t\t\t\t\t\t<icon-element icon-url={`coui://html_ui/efb_ui/efb_os/Assets/icons/facilities/Location.svg`} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<TT\r\n\t\t\t\t\t\t\tkey=\"@fs-base-efb-app-navigation-map,TT:EFB.NAVIGATION_MAP.SELECT_ON_MAP\"\r\n\t\t\t\t\t\t\tformat=\"ucfirst\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div> */}\r\n\t\t\t\t\t<div class=\"facility-result-item\" ref={this.customItemPositionRef}>\r\n\t\t\t\t\t\t<div class=\"icon-container\">\r\n\t\t\t\t\t\t\t<icon-element\r\n\t\t\t\t\t\t\t\ticon-url={`coui://html_ui/efb_ui/efb_os/Assets/icons/facilities/Challenges.svg`}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<TT\r\n\t\t\t\t\t\t\tkey=\"@fs-base-efb-app-navigation-map,TT:EFB.NAVIGATION_MAP.YOUR_POSITION\"\r\n\t\t\t\t\t\t\tformat=\"ucfirst\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>,\r\n\t\t\t\tthis.searchBarListRef.instance,\r\n\t\t\t\t0\r\n\t\t\t);\r\n\r\n\t\t\tthis.customItemPositionRef.instance.onmousedown = (): void => {\r\n\t\t\t\tthis.itemCallback(\r\n\t\t\t\t\tcreateCustomFacility(FacilityRepository.getRepository(this.props.bus), this.ppos.lat, this.ppos.lon)\r\n\t\t\t\t);\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\t// Load the search history for the first focus\r\n\t\tthis.onSearchUpdated('');\r\n\t}\r\n\r\n\tpublic destroy(): void {\r\n\t\tthis.selectedFacilitySubscription?.destroy();\r\n\r\n\t\tsuper.destroy();\r\n\t}\r\n}\r\n", "import {\r\n\tEventBus,\r\n\tFacility,\r\n\tFacilityLoader,\r\n\tFacilityRepository,\r\n\tFacilitySearchType,\r\n\tGeoPoint,\r\n\tGNSSEvents,\r\n\tICAO,\r\n} from '@microsoft/msfs-sdk';\r\n\r\nexport class FacilitySearchUtils {\r\n\tprivate static INSTANCE: FacilitySearchUtils | null = null;\r\n\tprivate readonly facilityLoader: FacilityLoader | null = null;\r\n\r\n\tprivate readonly position = new GeoPoint(0, 0);\r\n\r\n\tprivate constructor(bus: EventBus) {\r\n\t\tbus.getSubscriber<GNSSEvents>()\r\n\t\t\t.on('gps-position')\r\n\t\t\t.handle((pos) => {\r\n\t\t\t\tthis.position.set(pos.lat, pos.long);\r\n\t\t\t});\r\n\r\n\t\tthis.facilityLoader = new FacilityLoader(FacilityRepository.getRepository(bus));\r\n\t}\r\n\r\n\tpublic static getSearchUtils(bus: EventBus): FacilitySearchUtils {\r\n\t\treturn (FacilitySearchUtils.INSTANCE ??= new FacilitySearchUtils(bus));\r\n\t}\r\n\r\n\tpublic orderByIdentsAndDistance(a: Facility, b: Facility): number {\r\n\t\tconst aIdent = ICAO.getIdent(a.icao).trim();\r\n\t\tconst bIdent = ICAO.getIdent(b.icao).trim();\r\n\r\n\t\tif (aIdent === bIdent) {\r\n\t\t\tconst aDist = this.position.distance(a.lat, a.lon);\r\n\t\t\tconst bDist = this.position.distance(b.lat, b.lon);\r\n\r\n\t\t\treturn aDist - bDist;\r\n\t\t} else {\r\n\t\t\treturn aIdent.localeCompare(bIdent);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic async loadFacilities(\r\n\t\tident: string,\r\n\t\tfacilitySearchType = FacilitySearchType.All\r\n\t): Promise<readonly Facility[]> {\r\n\t\tif (this.facilityLoader === null) {\r\n\t\t\treturn Promise.resolve([]);\r\n\t\t}\r\n\r\n\t\tconst icaos = await this.facilityLoader.searchByIdent(facilitySearchType, ident, 15);\r\n\t\tlet facilities = (await Promise.all(\r\n\t\t\ticaos.map((icao) => {\r\n\t\t\t\tif (this.facilityLoader === null) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn this.facilityLoader.getFacility(ICAO.getFacilityType(icao), icao);\r\n\t\t\t})\r\n\t\t)) as Facility[];\r\n\r\n\t\tfacilities.sort((a, b) => this.orderByIdentsAndDistance(a, b));\r\n\r\n\t\tfacilities = facilities.filter((fac) => ICAO.getAssociatedAirportIdent(fac.icao) === '');\r\n\r\n\t\treturn facilities;\r\n\t}\r\n}\r\n", "import { FSComponent, Facility, ICAO, VNode } from '@microsoft/msfs-sdk';\r\nimport { GamepadUiComponent, GamepadUiComponentProps } from '../../Gamepad';\r\nimport { getFacilityIconPath } from '../../utils/FacilityUtils';\r\n\r\nexport interface FacilityResultItemProps extends GamepadUiComponentProps {\r\n\t/** The resulting facility. */\r\n\tfacility: Facility;\r\n\r\n\t/** the ICAO / Name separator */\r\n\tseparator: ' - ' | ', ' | ' ' | ' / ';\r\n\r\n\t/** the callback to click on call */\r\n\tcallback?: (facility: Facility) => void;\r\n}\r\n\r\nexport class FacilityResultItem extends GamepadUiComponent<HTMLDivElement, FacilityResultItemProps> {\r\n\tpublic onAfterRender(node: VNode): void {\r\n\t\tsuper.onAfterRender(node);\r\n\r\n\t\tthis.gamepadUiComponentRef.instance.onmousedown = (ev: MouseEvent): void => {\r\n\t\t\tev.preventDefault();\r\n\r\n\t\t\tif (this.props.callback === undefined) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tthis.props.callback(this.props.facility);\r\n\t\t};\r\n\t}\r\n\r\n\tpublic render(): VNode | null {\r\n\t\treturn (\r\n\t\t\t<div class={`facility-result-item`} ref={this.gamepadUiComponentRef}>\r\n\t\t\t\t<div class=\"icon-container\">\r\n\t\t\t\t\t<icon-element icon-url={getFacilityIconPath(ICAO.getFacilityType(this.props.facility.icao))} />\r\n\t\t\t\t</div>\r\n\t\t\t\t<span class=\"icao\">\r\n\t\t\t\t\t{ICAO.getIdent(this.props.facility.icao)}\r\n\t\t\t\t\t{this.props.separator}\r\n\t\t\t\t</span>\r\n\t\t\t\t<span class=\"facility-name\">{Utils.Translate(this.props.facility.name).padEnd(5, '...')}</span>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n", "import { ArraySubject, DataStore, ICAO } from '@microsoft/msfs-sdk';\r\n\r\nexport class SearchFacilityHistoryManager {\r\n\tprivate static readonly DATASTORE_KEY = 'efb.search-bar-history';\r\n\tprivate readonly MAX_ITEMS_STORED = 5;\r\n\r\n\tprotected storedICAOs = ArraySubject.create<string>();\r\n\r\n\tpublic constructor() {\r\n\t\tthis.loadICAOsFromStorage();\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieves all the stored recent searches\r\n\t */\r\n\tprotected loadICAOsFromStorage(): void {\r\n\t\tlet arrayICAOs: string[] = [];\r\n\t\tconst stringICAOs = DataStore.get(SearchFacilityHistoryManager.DATASTORE_KEY);\r\n\t\tif (stringICAOs === undefined || typeof stringICAOs !== 'string') {\r\n\t\t\tthis.storedICAOs.set(arrayICAOs);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\ttry {\r\n\t\t\tarrayICAOs = JSON.parse(stringICAOs);\r\n\t\t} catch {\r\n\t\t\tconsole.error('JSON failed, impossible to parse : ', stringICAOs);\r\n\t\t}\r\n\t\tthis.storedICAOs.set(arrayICAOs);\r\n\t}\r\n\r\n\tprotected saveICAOsToStorage(): void {\r\n\t\tconst stringICAOs = JSON.stringify(this.storedICAOs.getArray());\r\n\t\tDataStore.set(SearchFacilityHistoryManager.DATASTORE_KEY, stringICAOs);\r\n\t}\r\n\r\n\tpublic mostRecentSearch(icao: string): void {\r\n\t\tconst foundIndex = this.storedICAOs.getArray().findIndex((storedIcao: string) => storedIcao === icao);\r\n\t\t// if the new ICAO is already in the recent searches, remove it\r\n\t\tif (foundIndex !== -1) {\r\n\t\t\tthis.storedICAOs.removeAt(foundIndex);\r\n\t\t}\r\n\r\n\t\t// add the new ICAO on top of the recent searches\r\n\t\tthis.storedICAOs.insert(icao, 0);\r\n\r\n\t\t// verify that we don't have more than the maximum items stored\r\n\t\twhile (this.storedICAOs.length > this.MAX_ITEMS_STORED) {\r\n\t\t\tthis.storedICAOs.removeAt(this.MAX_ITEMS_STORED);\r\n\t\t}\r\n\r\n\t\t// save the new recent searches to the data store\r\n\t\tthis.saveICAOsToStorage();\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve the search facility history as an array\r\n\t * @param input the input of the search\r\n\t * @param max_items the maximum number of items returned\r\n\t * @returns the recent searches as an array of icaos\r\n\t */\r\n\tpublic getStoredICAOs(input: string, max_items: number = this.MAX_ITEMS_STORED): readonly string[] {\r\n\t\tthis.loadICAOsFromStorage();\r\n\t\treturn (\r\n\t\t\tthis.storedICAOs\r\n\t\t\t\t.getArray()\r\n\t\t\t\t// TODO : filter on ICAO, name, etc\r\n\t\t\t\t.filter((icao: string) => ICAO.getIdent(icao).startsWith(input.toUpperCase()))\r\n\t\t\t\t.slice(0, max_items)\r\n\t\t);\r\n\t}\r\n}\r\n", "import {\r\n\tFSComponent,\r\n\tMappedSubject,\r\n\tMappedSubscribable,\r\n\tMutableSubscribable,\r\n\tSubject,\r\n\tSubscribableUtils,\r\n\tSubscription,\r\n\tVNode,\r\n} from '@microsoft/msfs-sdk';\r\nimport { GamepadUiComponent, GamepadUiComponentProps } from '../../Gamepad';\r\nimport { MaybeSubscribable } from '../../types';\r\n\r\nexport interface SliderProps extends GamepadUiComponentProps {\r\n\t/** The value that will be modified by the slider */\r\n\tvalue: MutableSubscribable<number> | MaybeSubscribable<number>;\r\n\r\n\t/** The step of the slider, relative to the value */\r\n\tstep?: MaybeSubscribable<number>;\r\n\r\n\t/** The minimum value of the slider. Default to 0. If it is greater than the maximum, the slider will be reversed, and rendered from right to left */\r\n\tmin?: MaybeSubscribable<number>;\r\n\r\n\t/** The maximum value of the slider. Default to 100. If it is lower than the minimum, the slider will be reversed, and rendered from right to left */\r\n\tmax?: MaybeSubscribable<number>;\r\n\r\n\t/** Callback triggered when the value changes */\r\n\tonValueChange?: (newValue: number) => void;\r\n\r\n\t/** If true, the slider will be vertical. Default to false */\r\n\tvertical?: boolean;\r\n\r\n\t/** If true, the slider will be hoverable. Default to true */\r\n\thoverable?: MaybeSubscribable<boolean>;\r\n\r\n\t/** If true, it will allow the mouse wheel to modify the slider value. Default to false */\r\n\tallowWheel?: boolean;\r\n\r\n\tonFocusIn?: () => void;\r\n\tonFocusOut?: () => void;\r\n}\r\n\r\n/** UI component that renders a slider and changes a given value accordingly */\r\nexport class Slider<P extends SliderProps = SliderProps> extends GamepadUiComponent<HTMLDivElement, P> {\r\n\tprotected readonly value: MutableSubscribable<number>;\r\n\tprotected readonly subscribableValueSubscription?: Subscription;\r\n\r\n\tprotected readonly max = SubscribableUtils.toSubscribable(this.props.max ?? 100, true);\r\n\tprotected readonly min = SubscribableUtils.toSubscribable(this.props.min ?? 0, true);\r\n\r\n\tprotected readonly isButtonDisabled = SubscribableUtils.toSubscribable(this.props.disabled ?? false, true);\r\n\tprotected readonly isButtonSelected = Subject.create(false);\r\n\r\n\t// If this.props.step if undefined, the precision will be equal to 0\r\n\tprotected readonly precision = MappedSubject.create(\r\n\t\t([step, min, _max]) => this.convertValueToPercent(step + min),\r\n\t\tSubscribableUtils.toSubscribable(this.props.step ?? 0, true),\r\n\t\tthis.min,\r\n\t\tthis.max\r\n\t);\r\n\t// this.convertValueToPercent((this.props.step ?? 0) + this.min);\r\n\r\n\tprotected readonly isButtonHoverable = MappedSubject.create(\r\n\t\t([isHoverable, isDisabled, isSelected]) => {\r\n\t\t\treturn isHoverable && !isDisabled && !isSelected;\r\n\t\t},\r\n\t\tSubscribableUtils.toSubscribable(this.props.hoverable ?? true, true),\r\n\t\tthis.isButtonDisabled,\r\n\t\tthis.isButtonSelected\r\n\t);\r\n\r\n\tprotected readonly verticalSlider = this.props.vertical ?? false;\r\n\r\n\tprotected readonly allowWheel = this.props.allowWheel ?? false;\r\n\r\n\tprotected readonly valuePercent: Subject<number>;\r\n\tprotected readonly completionRatio: MappedSubscribable<string>;\r\n\r\n\tprotected readonly sliderBarRef = FSComponent.createRef<HTMLDivElement>();\r\n\tprotected sliderBarRect = new DOMRect();\r\n\r\n\tprotected allowMovement = false;\r\n\r\n\tprotected mousePos = 0;\r\n\r\n\tprotected subs: Subscription[] = [];\r\n\r\n\tpublic constructor(props: P) {\r\n\t\tsuper(props);\r\n\r\n\t\tif (SubscribableUtils.isMutableSubscribable(props.value)) {\r\n\t\t\tthis.value = props.value;\r\n\t\t} else if (SubscribableUtils.isSubscribable(props.value)) {\r\n\t\t\tthis.value = Subject.create(props.value.get());\r\n\t\t\tthis.subscribableValueSubscription = props.value.sub((value: number) => this.value.set(value));\r\n\t\t} else {\r\n\t\t\tthis.value = Subject.create(props.value);\r\n\t\t}\r\n\r\n\t\tthis.valuePercent = Subject.create(this.convertValueToPercent(this.value.get()));\r\n\t\tthis.completionRatio = this.valuePercent.map((ratio: number) => `${ratio.toString()}%`);\r\n\t}\r\n\r\n\tprotected convertValueToPercent(val: number): number {\r\n\t\t// Math.abs in case of a reverse mode (this.min is superior to this.max)\r\n\t\treturn Utils.Clamp(Math.abs((val - this.min.get()) / (this.max.get() - this.min.get())) * 100, 0, 100);\r\n\t}\r\n\r\n\tprotected onMouseDown(): void {\r\n\t\tif (this.disabled.get()) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.props.onFocusIn?.();\r\n\t\tthis.isButtonSelected.set(true);\r\n\r\n\t\tthis.allowMovement = true;\r\n\r\n\t\t// Mandatory getBoudingClientRect() to handle slider movement with the mouse outside of the slider\r\n\t\tthis.sliderBarRect = this.gamepadUiComponentRef.instance.getBoundingClientRect();\r\n\r\n\t\tdocument.addEventListener('mouseup', this.onGlobalMouseUp);\r\n\t\t// Remove the event listeners if the mouse goes out of the component\r\n\t\tdocument.addEventListener('mouseleave', this.onGlobalMouseUp);\r\n\t\tdocument.addEventListener('mousemove', this.onGlobalMouseMove);\r\n\t}\r\n\r\n\tprotected onMouseWheel(e: WheelEvent): void {\r\n\t\te.preventDefault();\r\n\r\n\t\tconst precision = this.precision.get() || 1;\r\n\t\tconst scrollDirection = this.verticalSlider ? -1 : 1;\r\n\t\tconst step = precision * (e.deltaY < 1 ? -1 : 1) * scrollDirection;\r\n\r\n\t\tthis.valuePercent.set(Utils.Clamp(this.valuePercent.get() + step, 0, 100));\r\n\t}\r\n\r\n\tprivate readonly onGlobalMouseUp = this._onGlobalMouseUp.bind(this);\r\n\tprotected _onGlobalMouseUp(): void {\r\n\t\tthis.allowMovement = false;\r\n\r\n\t\tthis.props.onFocusOut?.();\r\n\t\tthis.isButtonSelected.set(false);\r\n\r\n\t\tdocument.removeEventListener('mouseup', this.onGlobalMouseUp);\r\n\t\tdocument.removeEventListener('mouseleave', this.onGlobalMouseUp);\r\n\t\tdocument.removeEventListener('mousemove', this.onGlobalMouseMove);\r\n\t}\r\n\r\n\tprivate onGlobalMouseMove = this._onGlobalMouseMove.bind(this);\r\n\tprotected _onGlobalMouseMove(e: MouseEvent): void {\r\n\t\tconst clientPos = this.verticalSlider ? e.clientY : e.clientX;\r\n\r\n\t\tif (!this.allowMovement || clientPos === this.mousePos) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.mousePos = clientPos;\r\n\r\n\t\tlet sliderStart = this.sliderBarRect.left;\r\n\t\tlet sliderEnd = this.sliderBarRect.right;\r\n\t\tlet sliderSize = this.sliderBarRect.width;\r\n\t\tlet startRatio = 0;\r\n\r\n\t\tif (this.verticalSlider) {\r\n\t\t\tsliderStart = this.sliderBarRect.top;\r\n\t\t\tsliderEnd = this.sliderBarRect.bottom;\r\n\t\t\tsliderSize = this.sliderBarRect.height;\r\n\t\t\tstartRatio = 100;\r\n\t\t}\r\n\r\n\t\tif (clientPos < sliderStart) {\r\n\t\t\tthis.valuePercent.set(startRatio);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (clientPos > sliderEnd) {\r\n\t\t\tthis.valuePercent.set(100 - startRatio);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst mousePosOnSlider = Utils.Clamp(\r\n\t\t\tMath.abs(startRatio - ((clientPos - sliderStart) / sliderSize) * 100),\r\n\t\t\t0,\r\n\t\t\t100\r\n\t\t);\r\n\t\tlet sliderPos = mousePosOnSlider;\r\n\r\n\t\tconst precision = this.precision.get();\r\n\t\tif (precision !== 0) {\r\n\t\t\tconst quotient = Math.trunc((mousePosOnSlider + precision / 2) / precision);\r\n\t\t\tsliderPos = Utils.Clamp(quotient * precision, 0, 100);\r\n\t\t}\r\n\r\n\t\tthis.valuePercent.set(sliderPos);\r\n\t}\r\n\r\n\tpublic render(): VNode {\r\n\t\treturn (\r\n\t\t\t<div\r\n\t\t\t\tclass={{\r\n\t\t\t\t\tslider: true,\r\n\t\t\t\t\treverse: this.min > this.max,\r\n\t\t\t\t\tvertical: this.verticalSlider,\r\n\t\t\t\t\thoverable: this.isButtonHoverable,\r\n\t\t\t\t\tselected: this.isButtonSelected,\r\n\t\t\t\t}}\r\n\t\t\t\tstyle={{ '--ratio-value': this.completionRatio }}\r\n\t\t\t\tref={this.gamepadUiComponentRef}\r\n\t\t\t>\r\n\t\t\t\t<div class=\"disabled-layer\"></div>\r\n\t\t\t\t<div class=\"slider-bar\" ref={this.sliderBarRef}>\r\n\t\t\t\t\t<div class=\"slider-rail\"></div>\r\n\t\t\t\t\t<div class=\"slider-track\"></div>\r\n\t\t\t\t\t<div class=\"slider-button\"></div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n\tpublic onAfterRender(node: VNode): void {\r\n\t\tsuper.onAfterRender(node);\r\n\r\n\t\tCoherent.on('mouseReleaseOutsideView', this.onGlobalMouseUp);\r\n\r\n\t\tthis.sliderBarRef.instance.onmousedown = this.onMouseDown.bind(this);\r\n\r\n\t\tif (this.allowWheel) {\r\n\t\t\tthis.sliderBarRef.instance.onwheel = this.onMouseWheel.bind(this);\r\n\t\t}\r\n\r\n\t\tthis.subs.push(\r\n\t\t\tthis.valuePercent.sub((val) =>\r\n\t\t\t\tthis.value.set((val * (this.max.get() - this.min.get())) / 100 + this.min.get())\r\n\t\t\t),\r\n\t\t\tthis.value.sub((value) => {\r\n\t\t\t\tthis.props.onValueChange?.(value);\r\n\t\t\t\tthis.valuePercent.set(this.convertValueToPercent(value));\r\n\t\t\t})\r\n\t\t);\r\n\t}\r\n\r\n\tpublic destroy(): void {\r\n\t\tthis.isButtonHoverable.destroy();\r\n\r\n\t\tthis.subs.forEach((sub) => sub.destroy());\r\n\r\n\t\tsuper.destroy();\r\n\t}\r\n}\r\n", "import {\r\n\tFSComponent,\r\n\tMutableSubscribable,\r\n\tSubject,\r\n\tSubscribableMapFunctions,\r\n\tSubscribableUtils,\r\n\tVNode,\r\n} from '@microsoft/msfs-sdk';\r\nimport { GamepadUiComponent, GamepadUiComponentProps } from '../../Gamepad';\r\n\r\ntype SwitchDirection = 'left' | 'right';\r\n\r\ninterface SwitchProps extends GamepadUiComponentProps {\r\n\tturnOnDirection?: SwitchDirection;\r\n\tchecked?: boolean | MutableSubscribable<boolean>;\r\n\tcallback?: (checked: boolean) => void;\r\n}\r\n\r\nexport class Switch extends GamepadUiComponent<HTMLInputElement, SwitchProps> {\r\n\tprotected readonly turnOnDirection = this.props.turnOnDirection ?? 'right';\r\n\r\n\tprotected readonly checked = SubscribableUtils.isMutableSubscribable(this.props.checked)\r\n\t\t? this.props.checked\r\n\t\t: Subject.create(!!this.props.checked);\r\n\r\n\tprotected readonly turnOnDirectionSub =\r\n\t\tthis.turnOnDirection === 'right' ? this.checked : this.checked.map(SubscribableMapFunctions.not());\r\n\r\n\tprivate readonly sliderRef = FSComponent.createRef<HTMLDivElement>();\r\n\r\n\tpublic onAfterRender(node: VNode): void {\r\n\t\tsuper.onAfterRender(node);\r\n\r\n\t\t/* Update the switch checked state on click when it is enabled */\r\n\t\tthis.gamepadUiComponentRef.instance.onclick = (): void => {\r\n\t\t\tif (SubscribableUtils.toSubscribable(this.props.disabled, true).get() === true) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tthis.checked.set(!this.checked.get());\r\n\t\t};\r\n\r\n\t\tthis.checked.sub((checked: boolean): void => {\r\n\t\t\tif (this.props.callback) this.props.callback(checked);\r\n\t\t});\r\n\t}\r\n\r\n\tpublic render(): VNode {\r\n\t\treturn (\r\n\t\t\t<div class={{ 'switch-container': true, checked: this.checked }} ref={this.gamepadUiComponentRef}>\r\n\t\t\t\t<div class={{ slider: true, 'slider--right': this.turnOnDirectionSub }} ref={this.sliderRef}>\r\n\t\t\t\t\t<div class=\"disabled-layer\" />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n", "import { FSComponent, VNode } from '@microsoft/msfs-sdk';\r\nimport { GamepadUiComponent, GamepadUiComponentProps } from '../../Gamepad';\r\n\r\n// TODO Polish stylesheet (hover?)\r\n\r\ninterface TagProps extends GamepadUiComponentProps {\r\n\ttitle: string;\r\n\ticonPath?: string;\r\n\tonButtonClick?: () => void;\r\n}\r\n\r\nexport class Tag extends GamepadUiComponent<HTMLDivElement, TagProps> {\r\n\tprotected readonly closeButtonRef = FSComponent.createRef<HTMLDivElement>();\r\n\r\n\tpublic onAfterRender(node: VNode): void {\r\n\t\tsuper.onAfterRender(node);\r\n\r\n\t\tif (this.props.iconPath && this.props.onButtonClick) {\r\n\t\t\tthis.closeButtonRef.instance.addEventListener('click', this.props.onButtonClick);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic destroy(): void {\r\n\t\tif (this.props.iconPath && this.props.onButtonClick) {\r\n\t\t\tthis.closeButtonRef.instance.removeEventListener('click', this.props.onButtonClick);\r\n\t\t}\r\n\r\n\t\tsuper.destroy();\r\n\t}\r\n\r\n\tpublic render(): VNode {\r\n\t\treturn (\r\n\t\t\t<div ref={this.gamepadUiComponentRef} class=\"tag-container\">\r\n\t\t\t\t<span class=\"title light-text\">{this.props.title}</span>\r\n\t\t\t\t{this.props.iconPath && (\r\n\t\t\t\t\t<div class=\"tag-button\" ref={this.closeButtonRef}>\r\n\t\t\t\t\t\t<icon-element class=\"tag-button-icon\" icon-url={this.props.iconPath} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n", "import {\r\n\tFSComponent,\r\n\tMappedSubject,\r\n\tMutableSubscribable,\r\n\tSubject,\r\n\tSubscribable,\r\n\tSubscribableUtils,\r\n\tSubscription,\r\n\tUUID,\r\n\tVNode,\r\n} from '@microsoft/msfs-sdk';\r\nimport { GamepadUiComponent, GamepadUiComponentProps } from '../../Gamepad';\r\nimport { MaybeSubscribable } from '../../types';\r\n\r\nexport interface TextAreaAttributes {\r\n\tmodel?: MutableSubscribable<string>;\r\n\r\n\tvalue?: MaybeSubscribable<string>;\r\n\r\n\tplaceholder?: MaybeSubscribable<string>;\r\n\r\n\tdisabled?: MaybeSubscribable<boolean>;\r\n\r\n\thidePlaceholderOnFocus?: boolean;\r\n\r\n\tfocusOnInit?: boolean;\r\n\r\n\trows?: number;\r\n}\r\n\r\nexport interface TextAreaHooks {\r\n\tonFocusIn?: () => void;\r\n\tonFocusOut?: () => void;\r\n\r\n\tonInput?: (element: HTMLTextAreaElement) => void;\r\n\tonKeyPress?: (event: KeyboardEvent) => void;\r\n\r\n\tcharFilter?: (char: string) => boolean;\r\n}\r\n\r\nexport type TextAreaProps = TextAreaAttributes & TextAreaHooks;\r\n\r\nexport class TextArea extends GamepadUiComponent<HTMLTextAreaElement, TextAreaProps & GamepadUiComponentProps> {\r\n\tprotected readonly uuid = UUID.GenerateUuid();\r\n\r\n\tprotected readonly textAreaRef = this.gamepadUiComponentRef;\r\n\r\n\tprotected readonly model =\r\n\t\tthis.props.model || Subject.create(SubscribableUtils.toSubscribable(this.props.value || '', true).get());\r\n\r\n\tprivate _reloadLocalisation(): void {\r\n\t\tthis.placeholderTranslation.notify();\r\n\t}\r\n\r\n\tprivate readonly dispatchFocusOutEvent = this._dispatchFocusOutEvent.bind(this);\r\n\r\n\tprivate readonly _onKeyPress = this.onKeyPress.bind(this);\r\n\r\n\tprivate readonly _onInput = this.onInput.bind(this);\r\n\r\n\tprotected onKeyPress(event: KeyboardEvent): void {\r\n\t\tconst keyCode = event.keyCode || event.which;\r\n\r\n\t\tthis.props.onKeyPress?.(event);\r\n\r\n\t\tif (event.defaultPrevented) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (this.props.charFilter && !this.props.charFilter(String.fromCharCode(keyCode))) {\r\n\t\t\tevent.preventDefault();\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\r\n\tprotected onInput(): void {\r\n\t\tconst value = this.textAreaRef.instance.value;\r\n\t\tif (value === this.model.get()) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.model.set(value);\r\n\t}\r\n\r\n\tprotected onInputUpdated(value: string): void {\r\n\t\tthis.textAreaRef.instance.value = value;\r\n\r\n\t\tthis.props.onInput?.(this.textAreaRef.instance);\r\n\r\n\t\tif (!this.hidePlaceholderOnFocus && value.length === 0) {\r\n\t\t\tthis.placeholderShown.set(true);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate reloadLocalisation = this._reloadLocalisation.bind(this);\r\n\r\n\tprotected readonly _isFocused = Subject.create(false);\r\n\r\n\tpublic readonly isFocused: Subscribable<boolean> = this._isFocused;\r\n\r\n\tprotected onFocusIn(): void {\r\n\t\tthis.props.onFocusIn?.();\r\n\r\n\t\tif (this.hidePlaceholderOnFocus && this.textAreaRef.instance.value.length === 0) {\r\n\t\t\tthis.placeholderShown.set(false);\r\n\t\t}\r\n\t}\r\n\r\n\tprotected onFocusOut(): void {\r\n\t\tthis.props.onFocusOut?.();\r\n\r\n\t\tif (this.hidePlaceholderOnFocus && this.textAreaRef.instance.value.length === 0) {\r\n\t\t\tthis.placeholderShown.set(true);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic focus(): void {\r\n\t\tthis.textAreaRef.instance.focus();\r\n\t}\r\n\r\n\tpublic blur(): void {\r\n\t\tthis.textAreaRef.instance.blur();\r\n\t}\r\n\r\n\tpublic value(): string {\r\n\t\treturn this.model.get();\r\n\t}\r\n\r\n\tpublic clearInput(): void {\r\n\t\tthis.model.set('');\r\n\t}\r\n\r\n\tprivate _dispatchFocusOutEvent(): void {\r\n\t\tthis.textAreaRef.instance.blur();\r\n\t}\r\n\r\n\t/** Placeholder i18n/visibility */\r\n\tprivate readonly placeholderKey = SubscribableUtils.toSubscribable(this.props.placeholder ?? '', true);\r\n\tprivate readonly placeholderShown = Subject.create(true);\r\n\tprivate readonly placeholderTranslation = Subject.create(this.placeholderKey.get());\r\n\tprivate readonly hidePlaceholderOnFocus = this.props.hidePlaceholderOnFocus ?? false;\r\n\r\n\tpublic render(): VNode {\r\n\t\treturn (\r\n\t\t\t<textarea\r\n\t\t\t\tid={this.uuid}\r\n\t\t\t\tref={this.textAreaRef}\r\n\t\t\t\tplaceholder={MappedSubject.create<[boolean, string], string>(\r\n\t\t\t\t\t([placeholderShown, placeholderKey]) => {\r\n\t\t\t\t\t\treturn placeholderShown ? Utils.Translate(placeholderKey) : '';\r\n\t\t\t\t\t},\r\n\t\t\t\t\tthis.placeholderShown,\r\n\t\t\t\t\tthis.placeholderKey\r\n\t\t\t\t)}\r\n\t\t\t\tdisabled={this.props.disabled}\r\n\t\t\t\tvalue={SubscribableUtils.toSubscribable(this.props.model || this.props.value || '', true).get()}\r\n\t\t\t\trows={this.props.rows ?? 4}\r\n\t\t\t/>\r\n\t\t);\r\n\t}\r\n\r\n\tprotected readonly subs: Subscription[] = [];\r\n\r\n\tpublic onAfterRender(node: VNode): void {\r\n\t\tsuper.onAfterRender(node);\r\n\r\n\t\tthis.subs.push(\r\n\t\t\tthis.model.sub((value) => {\r\n\t\t\t\tthis.onInputUpdated(value);\r\n\t\t\t}, true),\r\n\t\t\tthis.placeholderKey.sub((key) => {\r\n\t\t\t\tthis.placeholderTranslation.set(key);\r\n\t\t\t}, true)\r\n\t\t);\r\n\r\n\t\tthis.textAreaRef.instance.addEventListener('focus', () => {\r\n\t\t\tif (this._isFocused.get()) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tthis._isFocused.set(true);\r\n\r\n\t\t\tCoherent.trigger('FOCUS_INPUT_FIELD', this.uuid, '', '', '', true);\r\n\t\t\tCoherent.on('mousePressOutsideView', this.dispatchFocusOutEvent);\r\n\r\n\t\t\tthis.onFocusIn();\r\n\t\t});\r\n\r\n\t\tthis.textAreaRef.instance.addEventListener('focusout', () => {\r\n\t\t\tif (!this._isFocused.get()) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tthis._isFocused.set(false);\r\n\r\n\t\t\tCoherent.trigger('UNFOCUS_INPUT_FIELD', this.uuid);\r\n\t\t\tCoherent.off('mousePressOutsideView', this.dispatchFocusOutEvent);\r\n\r\n\t\t\tthis.onFocusOut();\r\n\t\t});\r\n\r\n\t\tthis.textAreaRef.instance.addEventListener('input', this._onInput);\r\n\r\n\t\tthis.textAreaRef.instance.addEventListener('keypress', this._onKeyPress);\r\n\r\n\t\tCoherent.on('RELOAD_LOCALISATION', this.reloadLocalisation);\r\n\r\n\t\tif (this.props.focusOnInit) {\r\n\t\t\tthis.focus();\r\n\t\t}\r\n\t}\r\n\r\n\tpublic destroy(): void {\r\n\t\tthis.subs.forEach((s) => s.destroy());\r\n\r\n\t\tif (this._isFocused.get()) {\r\n\t\t\tCoherent.trigger('UNFOCUS_INPUT_FIELD', this.uuid);\r\n\t\t\tCoherent.off('mousePressOutsideView', this.dispatchFocusOutEvent);\r\n\t\t}\r\n\r\n\t\tthis.textAreaRef.instance.removeEventListener('keypress', this._onKeyPress);\r\n\t\tthis.textAreaRef.instance.removeEventListener('input', this._onInput);\r\n\r\n\t\tCoherent.off('RELOAD_LOCALISATION', this.reloadLocalisation);\r\n\r\n\t\tsuper.destroy();\r\n\t}\r\n}\r\n", "import {\r\n\tDisplayComponent,\r\n\tFSComponent,\r\n\tSubscribable,\r\n\tSubscribableMapFunctions,\r\n\tSubscribableUtils,\r\n\tVNode,\r\n} from '@microsoft/msfs-sdk';\r\nimport { MaybeSubscribable } from '../../types';\r\nimport { Stopwatch } from '../../utils/Stopwatch';\r\n\r\nexport interface TimerProps {\r\n\t/* The stopwatch */\r\n\tstopwatch: Stopwatch;\r\n\r\n\t/* How the time should be displayed (\"hh:mm:ss\" by default) */\r\n\tdisplayedTimeFormatter?: (timeSeconds: number) => string;\r\n\r\n\t/* Whether or not to show the dot indicator next to the displayed time */\r\n\tshowDotIndicator?: MaybeSubscribable<boolean>;\r\n}\r\n\r\nexport class Timer extends DisplayComponent<TimerProps> {\r\n\tprotected readonly displayedTime = this.props.displayedTimeFormatter\r\n\t\t? this.props.stopwatch.timerSeconds.map(this.props.displayedTimeFormatter)\r\n\t\t: this.props.stopwatch.timerSeconds.map((timeSeconds: number): string => {\r\n\t\t\t\tconst date = new Date(0);\r\n\t\t\t\tdate.setSeconds(timeSeconds);\r\n\r\n\t\t\t\treturn `${date.toISOString().substring(11, 19)}`;\r\n\t\t  });\r\n\r\n\tprotected readonly showDotIndicator: Subscribable<boolean> = SubscribableUtils.toSubscribable(\r\n\t\tthis.props.showDotIndicator ?? false,\r\n\t\ttrue\r\n\t);\r\n\tprotected readonly hideDotIndicator = this.showDotIndicator.map(SubscribableMapFunctions.not());\r\n\r\n\tpublic render(): VNode {\r\n\t\treturn (\r\n\t\t\t<div class=\"timer\">\r\n\t\t\t\t<div\r\n\t\t\t\t\tclass={{\r\n\t\t\t\t\t\tdot: true,\r\n\t\t\t\t\t\thide: this.hideDotIndicator,\r\n\t\t\t\t\t}}\r\n\t\t\t\t></div>\r\n\t\t\t\t<div class=\"timer-text\">{this.displayedTime}</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n\tpublic destroy(): void {\r\n\t\tthis.displayedTime.destroy();\r\n\t\tthis.hideDotIndicator.destroy();\r\n\r\n\t\tsuper.destroy();\r\n\t}\r\n}\r\n", "import { FSComponent, SubscribableUtils, VNode } from '@microsoft/msfs-sdk';\r\nimport { GamepadUiComponent, GamepadUiComponentProps } from '../../Gamepad';\r\nimport { TT } from '../../i18n';\r\nimport { MaybeSubscribable } from '../../types';\r\nimport { Valuable, isVNode, value } from '../../utils';\r\n\r\ninterface TooltipProps extends GamepadUiComponentProps {\r\n\tcontent: Valuable<VNode | MaybeSubscribable<string>>;\r\n\r\n\tposition?: 'top' | 'bottom' | 'left' | 'right';\r\n\r\n\tcondition?: MaybeSubscribable<boolean>;\r\n}\r\n\r\nexport class Tooltip extends GamepadUiComponent<HTMLDivElement, TooltipProps> {\r\n\tprivate readonly forceHide = this.props.condition ?? false;\r\n\r\n\tpublic render(): VNode {\r\n\t\tconst position: string = this.props.position ?? 'bottom';\r\n\t\tconst content = value(this.props.content);\r\n\r\n\t\treturn (\r\n\t\t\t<div class=\"tooltip-component\" ref={this.gamepadUiComponentRef}>\r\n\t\t\t\t{this.props.children}\r\n\t\t\t\t<div class={{ tooltip: true, forceHide: this.forceHide, [position]: true }}>\r\n\t\t\t\t\t{!SubscribableUtils.isSubscribable(content) && typeof content !== 'string' && isVNode(content) ? (\r\n\t\t\t\t\t\tcontent\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<TT class=\"tooltip-description\" key={content} format=\"ucfirst\" />\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t<svg class=\"pointer-svg\">\r\n\t\t\t\t\t\t<path d=\"M 0 9 l10 -8 l10 8\" fill=\"rgb(15, 20, 27)\" stroke=\"rgb(63, 67, 73)\" stroke-width=\"2\" />\r\n\t\t\t\t\t</svg>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n", "import { ArraySubject, EventBus } from '@microsoft/msfs-sdk';\r\nimport { App, AppConstructor, AppInstallProps, IApp } from './App';\r\nimport { NotificationManager } from './Managers';\r\nimport { OnboardingManager } from './Managers/OnboardingManager/OnboardingManager';\r\nimport { EfbSettingsManager, UnitsSettingsManager } from './Settings';\r\n\r\ndeclare global {\r\n\tinterface Window {\r\n\t\tEFB_API: Container | undefined;\r\n\t}\r\n}\r\n\r\nlet uid = 0;\r\n\r\n/** EFB Instance */\r\nexport class Container {\r\n\t/** @private */\r\n\tpublic _uid = uid++;\r\n\tprivate static _instance?: Container;\r\n\r\n\t/** App install promises */\r\n\tprivate _registeredAppsPromises: Array<Promise<void>> = [];\r\n\r\n\t/** Installed apps */\r\n\tprivate _installedApps: ArraySubject<IApp> = ArraySubject.create<IApp>();\r\n\r\n\tprivate bus?: EventBus;\r\n\r\n\t/** Units settings manager */\r\n\tprivate unitsSettingManager?: UnitsSettingsManager;\r\n\r\n\t/** Main settings manager */\r\n\tprivate efbSettingsManager?: EfbSettingsManager;\r\n\r\n\t/** Notification manager */\r\n\tprivate notificationManager?: NotificationManager;\r\n\r\n\t/** Onboarding manager */\r\n\tprivate onboardingManager?: OnboardingManager;\r\n\r\n\t// eslint-disable-next-line @typescript-eslint/no-empty-function\r\n\tprivate constructor() {}\r\n\r\n\t/**\r\n\t * Static singleton instance of Efb container\r\n\t * @internal\r\n\t */\r\n\tpublic static get instance(): Container {\r\n\t\treturn (window.EFB_API = Container._instance = window.EFB_API || Container._instance || new Container());\r\n\t}\r\n\r\n\t/** @internal */\r\n\tpublic apps(): ArraySubject<IApp> {\r\n\t\treturn this._installedApps;\r\n\t}\r\n\r\n\t/** @internal */\r\n\tpublic allAppsLoaded(): boolean {\r\n\t\treturn this._registeredAppsPromises.length === this._installedApps.length;\r\n\t}\r\n\r\n\t/**\r\n\t * Method used by the OS to share the bus to apps\r\n\t * @internal\r\n\t */\r\n\tpublic setBus(bus: EventBus): this {\r\n\t\tthis.bus = bus;\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Method used by the OS to share the units settings manager to the apps\r\n\t * @internal\r\n\t */\r\n\tpublic setUnitsSettingManager(unitsSettingManager: UnitsSettingsManager): this {\r\n\t\tthis.unitsSettingManager = unitsSettingManager;\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Method used by the OS to share the settings manager to the apps\r\n\t * @internal\r\n\t */\r\n\tpublic setEfbSettingManager(efbSettingsManager: EfbSettingsManager): this {\r\n\t\tthis.efbSettingsManager = efbSettingsManager;\r\n\t\treturn this;\r\n\t}\r\n\r\n\tpublic setOnboardingManager(onboardingManager: OnboardingManager): this {\r\n\t\tthis.onboardingManager = onboardingManager;\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Method used by the OS to share the notification manager to the apps\r\n\t * @internal\r\n\t */\r\n\tpublic setNotificationManager(notificationManager: NotificationManager): this {\r\n\t\tthis.notificationManager = notificationManager;\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Load stylesheet\r\n\t * @param uri\r\n\t * @returns Promise which is resolved when stylesheet is loaded or rejected if an error occur.\r\n\t */\r\n\tpublic async loadCss(uri: string): Promise<void> {\r\n\t\tif (document.querySelector(`link[href*=\"${uri}\"]`)) {\r\n\t\t\treturn Promise.reject(`${uri} already loaded.`);\r\n\t\t}\r\n\r\n\t\tconst linkTag = document.createElement('link');\r\n\t\tlinkTag.rel = 'stylesheet';\r\n\t\tlinkTag.href = uri;\r\n\t\tdocument.head.append(linkTag);\r\n\t\treturn new Promise<void>((resolve, reject) => {\r\n\t\t\tlinkTag.onload = (): void => resolve();\r\n\t\t\tlinkTag.onerror = reject;\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Load script file\r\n\t * @param uri\r\n\t * @returns Promise which is resolved when script is loaded or rejected if an error occur.\r\n\t */\r\n\tpublic async loadJs(uri: string): Promise<void> {\r\n\t\tif (document.querySelector(`script[src*=\"${uri}\"]`)) {\r\n\t\t\treturn Promise.reject(`${uri} already loaded.`);\r\n\t\t}\r\n\r\n\t\tconst scriptTag = document.createElement('script');\r\n\t\tscriptTag.type = 'text/javascript';\r\n\t\tscriptTag.src = uri;\r\n\t\tdocument.head.append(scriptTag);\r\n\t\treturn new Promise<void>((resolve, reject) => {\r\n\t\t\tscriptTag.onload = (): void => resolve();\r\n\t\t\tscriptTag.onerror = reject;\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Register an app in EFB\r\n\t * @template T - App registration options\r\n\t * @param app The app you wan't to register\r\n\t * @param options Options you'r app might need when installing\r\n\t * @returns EFB instance\r\n\t * @throws Throw an error if App install went wrong.\r\n\t */\r\n\tpublic use<T extends object = object>(app: AppConstructor<T> | App<T>, ...options: Array<Partial<T>>): this {\r\n\t\ttry {\r\n\t\t\tif (!this.bus) {\r\n\t\t\t\tthrow new Error(`Bus has not been initialized yet.`);\r\n\t\t\t}\r\n\r\n\t\t\tconst appInstance: App<T> = app instanceof App ? app : new app();\r\n\r\n\t\t\tconst installProps: AppInstallProps<T> = {\r\n\t\t\t\tbus: this.bus,\r\n\t\t\t\tunitsSettingManager: this.unitsSettingManager,\r\n\t\t\t\tefbSettingsManager: this.efbSettingsManager,\r\n\t\t\t\tnotificationManager: this.notificationManager,\r\n\t\t\t\tonboardingManager: this.onboardingManager,\r\n\t\t\t\toptions: Object.keys(options)\r\n\t\t\t\t\t.filter((key: string) => key !== 'isCoreApp')\r\n\t\t\t\t\t.reduce((acc: object, key: string) => {\r\n\t\t\t\t\t\treturn Object.assign(acc, options[key]);\r\n\t\t\t\t\t}, {}) as T,\r\n\t\t\t};\r\n\r\n\t\t\tconst appInstaller = appInstance._install.apply(appInstance, [installProps]);\r\n\t\t\tconst name = appInstance.internalName;\r\n\r\n\t\t\t// This check is done after install applied to the app as it allows to have a dynamic name based on options\r\n\t\t\tif (/\\s/.test(name)) {\r\n\t\t\t\tthrow new Error(`The App name can't have any whitespace character. \"${name}\"`);\r\n\t\t\t}\r\n\r\n\t\t\tif (!Object.prototype.hasOwnProperty.call(installProps.options, 'isCoreApp')) {\r\n\t\t\t\tthis._registeredAppsPromises.push(\r\n\t\t\t\t\tappInstaller.then(() => {\r\n\t\t\t\t\t\tthis._installedApps.insert(appInstance);\r\n\t\t\t\t\t})\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t} catch (e) {\r\n\t\t\tdocument.currentScript?.remove();\r\n\t\t\tconsole.error(`App can't be installed`, e);\r\n\t\t\tthrow e;\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t}\r\n}\r\n\r\n/** EFB Instance */\r\nexport const Efb = Container.instance;\r\n", "import {\r\n\tArraySubject,\r\n\tEventBus,\r\n\tSubject,\r\n\tSubscribable,\r\n\tSubscribableArray,\r\n\tSubscribableArrayEventType,\r\n\tSubscription,\r\n} from '@microsoft/msfs-sdk';\r\nimport { EfbNotification, EfbPermanentNotification } from '../../types';\r\nimport { isNotifPermanent } from '../../utils';\r\n\r\nexport class NotificationManager {\r\n\tprivate static INSTANCE: NotificationManager | undefined;\r\n\r\n\t/** If false, the notification manager will be paused */\r\n\tprivate readonly allowNotification = true;\r\n\r\n\t/** True if the notification app, with all the permanent notifications is open */\r\n\tprivate isNotificationAppOpen = false;\r\n\r\n\t/** Array of pending notifications. A notification is stored in it until it is shown */\r\n\tprotected pendingNotifications: EfbNotification[] = [];\r\n\r\n\t/** Array of shown notifications. A notification is stored in it until it is not shown anymore */\r\n\tprotected readonly _shownNotifications = ArraySubject.create<EfbNotification>([]);\r\n\r\n\t/** Public array of notifications to show. For the Notification Container */\r\n\tpublic readonly shownNotifications: SubscribableArray<EfbNotification> = this._shownNotifications;\r\n\r\n\t/** Array of stored notifications. A permanent notifications is stored in it until it is deleted from the notifications page */\r\n\tprotected readonly _storedNotifications = ArraySubject.create<EfbPermanentNotification>([]);\r\n\r\n\t/** Public array of stored notifications. For the Notification Page */\r\n\tpublic readonly storedNotifications: SubscribableArray<EfbPermanentNotification> = this._storedNotifications;\r\n\r\n\t/** Total count of unseen permanent notifications */\r\n\tprotected readonly _unseenNotificationsCount = Subject.create(0);\r\n\r\n\t/** Total count of unseen permanent notifications */\r\n\tpublic readonly unseenNotificationsCount: Subscribable<number> = this._unseenNotificationsCount;\r\n\r\n\t/** Number of notifications shown at the same time. Will determine the maximum length of the shownNotifications array */\r\n\tprotected readonly maxShownItems = Subject.create(1);\r\n\r\n\t/** Delay between notifications */\r\n\tprotected readonly timeBetweenNotifsMs = 500;\r\n\r\n\tprotected subs: Subscription[] = [];\r\n\r\n\tpublic constructor(private readonly bus: EventBus) {\r\n\t\tthis.subs.push(\r\n\t\t\tthis._shownNotifications.sub(this.onShownNotifsUpdate.bind(this)),\r\n\r\n\t\t\tthis._storedNotifications.sub(this.onStoredNotifsUpdate.bind(this))\r\n\t\t);\r\n\t}\r\n\r\n\tpublic static getManager(bus: EventBus): NotificationManager {\r\n\t\treturn (NotificationManager.INSTANCE ??= new NotificationManager(bus));\r\n\t}\r\n\r\n\t/**\r\n\t * internaly called by efb os\r\n\t * @internal\r\n\t */\r\n\tpublic update(): void {\r\n\t\t// If the notification is in pause, we do nothing in the update\r\n\t\tif (!this.allowNotification) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// We don't have to process notifications if the shownNotifications array is full or the pending notifications array is empty\r\n\t\tif (this._shownNotifications.length >= this.maxShownItems.get() || this.pendingNotifications.length === 0) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst notifToShow = this.pendingNotifications.shift();\r\n\t\tif (!notifToShow) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// console.log(`Show notif ${notifToShow.description}, delay : ${notifToShow.delayMs}`);\r\n\t\tthis._shownNotifications.insert(notifToShow);\r\n\t}\r\n\r\n\tprotected onShownNotifsUpdate(\r\n\t\t_index: number,\r\n\t\teventType: SubscribableArrayEventType,\r\n\t\tnotif?: EfbNotification | readonly EfbNotification[]\r\n\t): void {\r\n\t\tif (eventType !== SubscribableArrayEventType.Added || notif === undefined) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst notifs: EfbNotification[] = Array.isArray(notif) ? notif : [notif];\r\n\r\n\t\tnotifs.forEach((notifToDelete: EfbNotification): void => {\r\n\t\t\tconst notifDelay = notifToDelete.delayMs;\r\n\r\n\t\t\t// Hiding the notif before it is removed to see the notification getting replaced\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tnotifToDelete.hide.set(true);\r\n\t\t\t}, notifDelay);\r\n\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\t// console.log(`Hide notif ${notifToDelete.description}, delay : ${notifToDelete.delay}`);\r\n\t\t\t\tthis._shownNotifications.removeItem(notifToDelete);\r\n\t\t\t}, notifToDelete.delayMs + this.timeBetweenNotifsMs);\r\n\t\t});\r\n\t}\r\n\r\n\tprotected onStoredNotifsUpdate(\r\n\t\t_i: number,\r\n\t\t_t: SubscribableArrayEventType,\r\n\t\t_n?: EfbPermanentNotification | readonly EfbPermanentNotification[],\r\n\t\tarr?: readonly EfbPermanentNotification[]\r\n\t): void {\r\n\t\tthis._unseenNotificationsCount.set(\r\n\t\t\tarr?.reduce((accumulator, notif): number => accumulator + (notif.viewed.get() ? 0 : 1), 0) ?? 0\r\n\t\t);\r\n\t}\r\n\r\n\tpublic addNotification(notif: EfbNotification): void {\r\n\t\tnotif.createdAt = new Date();\r\n\r\n\t\tif (isNotifPermanent(notif)) {\r\n\t\t\tthis._storedNotifications.insert(notif);\r\n\r\n\t\t\tif (this.isNotificationAppOpen) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.pendingNotifications.push(notif);\r\n\t}\r\n\r\n\tpublic deletePermanentNotification(notif: EfbPermanentNotification): void {\r\n\t\tthis._storedNotifications.removeItem(notif);\r\n\t}\r\n\r\n\tpublic clearNotifications(): void {\r\n\t\tthis._storedNotifications.clear();\r\n\t}\r\n\r\n\tpublic onNotificationAppOpen(): void {\r\n\t\tthis.isNotificationAppOpen = true;\r\n\r\n\t\tthis.pendingNotifications = this.pendingNotifications.filter(\r\n\t\t\t(notif: EfbNotification) => !isNotifPermanent(notif)\r\n\t\t);\r\n\r\n\t\tthis._shownNotifications.getArray().forEach((notif: EfbNotification) => {\r\n\t\t\tif (isNotifPermanent(notif)) {\r\n\t\t\t\tthis._shownNotifications.removeItem(notif);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tpublic onNotificationAppClosed(): void {\r\n\t\tthis.isNotificationAppOpen = false;\r\n\r\n\t\tfor (let i = 0; i < this._storedNotifications.length; i++) {\r\n\t\t\tthis._storedNotifications.get(i).viewed.set(true);\r\n\t\t}\r\n\r\n\t\tthis._unseenNotificationsCount.set(0);\r\n\t}\r\n}\r\n", "import { ComponentProps, DisplayComponent } from '@microsoft/msfs-sdk';\r\nimport { TTButtonProps } from '../../Components';\r\nimport { Nullable, TVNode } from '../../types';\r\n\r\nexport type OnboardingStepType = 'floating' | 'centered' | 'initial';\r\nexport type OnboardingStepPlacement = 'top' | 'bottom' | 'left' | 'right';\r\n\r\nexport interface OnboardingStep {\r\n\ttitle?: string;\r\n\r\n\ttargetElementId?: string;\r\n\r\n\ttype: OnboardingStepType;\r\n\r\n\tactions: TTButtonProps[];\r\n\r\n\topenPageOnStepSetProps?: [appKey: string, pageKey: Nullable<string>, args: Nullable<string[]>];\r\n\r\n\tplacement?: OnboardingStepPlacement;\r\n\r\n\tdescription: string;\r\n}\r\n\r\nexport interface CenteredOnboardingStep extends OnboardingStep {\r\n\ttitle: string;\r\n\r\n\ttype: 'centered';\r\n}\r\n\r\nexport interface FloatingOnboardingStep extends OnboardingStep {\r\n\ttitle: string;\r\n\r\n\ttype: 'floating';\r\n\r\n\ttargetElementId: string;\r\n\r\n\tplacement: OnboardingStepPlacement;\r\n}\r\n\r\nexport interface InitialOnboardingStep extends OnboardingStep {\r\n\ttype: 'floating';\r\n\r\n\ttargetElementId: string;\r\n\r\n\tplacement: OnboardingStepPlacement;\r\n}\r\n\r\nexport interface Onboarding {\r\n\tkey: string;\r\n\r\n\tsteps: OnboardingStep[];\r\n\r\n\tonFinish?: () => void;\r\n}\r\n\r\nexport interface OnboardingContainerComponent extends DisplayComponent<ComponentProps> {\r\n\tshow(): void;\r\n\thide(): void;\r\n\tsetStep(step: OnboardingStep): void;\r\n}\r\n\r\nexport class OnboardingManager {\r\n\tprivate static INSTANCE: OnboardingManager | undefined = undefined;\r\n\r\n\tpublic static getManager(): OnboardingManager {\r\n\t\treturn (OnboardingManager.INSTANCE ??= new OnboardingManager());\r\n\t}\r\n\r\n\tprivate isStarted = false;\r\n\tprivate stepIndex = 0;\r\n\tprivate steps: OnboardingStep[] = [];\r\n\tprivate containerRef?: TVNode<OnboardingContainerComponent>;\r\n\tprivate onFinish?: () => void;\r\n\r\n\tprivate constructor() {\r\n\t\t// just making constructor private\r\n\t}\r\n\r\n\tpublic bindContainer(containerRef: TVNode<OnboardingContainerComponent>): void {\r\n\t\tOnboardingManager.getManager().containerRef = containerRef;\r\n\t}\r\n\r\n\tpublic start(onboarding: Onboarding): void {\r\n\t\tconst onboardingManager = OnboardingManager.getManager();\r\n\r\n\t\t// deep copy of onboarding steps\r\n\t\tonboardingManager.steps = onboarding.steps.map((step) => {\r\n\t\t\treturn { ...step, actions: [...step.actions] };\r\n\t\t});\r\n\r\n\t\tif (!onboardingManager.containerRef) {\r\n\t\t\tconsole.warn('Onboarding container not bound');\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (!onboardingManager.steps.length) {\r\n\t\t\tconsole.warn('No onboarding steps provided');\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (onboardingManager.isStarted) {\r\n\t\t\tconsole.warn('Onboarding already started');\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tonboardingManager.stepIndex = 0;\r\n\t\tonboardingManager.isStarted = true;\r\n\t\tonboardingManager.onFinish = onboarding.onFinish;\r\n\r\n\t\tonboardingManager.steps[onboardingManager.stepIndex].actions.unshift(\r\n\t\t\t{\r\n\t\t\t\tkey: 'QUICK TOUR AROUND' /** TOTT */,\r\n\t\t\t\tcallback: () => {\r\n\t\t\t\t\tonboardingManager.next();\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tkey: 'SKIP' /** TOTT */,\r\n\t\t\t\tcallback: () => {\r\n\t\t\t\t\tonboardingManager.stop();\r\n\t\t\t\t},\r\n\t\t\t}\r\n\t\t);\r\n\r\n\t\tonboardingManager.containerRef.instance.show();\r\n\t\tonboardingManager.containerRef.instance.setStep(onboardingManager.steps[onboardingManager.stepIndex]);\r\n\r\n\t\tonboardingManager.stepIndex++;\r\n\r\n\t\treturn;\r\n\t}\r\n\r\n\tprivate next(): void {\r\n\t\tconst onboardingManager = OnboardingManager.getManager();\r\n\t\tif (!onboardingManager.isStarted) {\r\n\t\t\tconsole.warn('Onboarding not started. You should call start method first');\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (onboardingManager.stepIndex >= onboardingManager.steps.length) {\r\n\t\t\tonboardingManager.stop();\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tonboardingManager.steps[onboardingManager.stepIndex].actions.unshift({\r\n\t\t\tkey: 'NEXT' /** TOTT */,\r\n\t\t\tcallback: () => {\r\n\t\t\t\tonboardingManager.next();\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\tonboardingManager.containerRef?.instance.setStep(onboardingManager.steps[onboardingManager.stepIndex]);\r\n\r\n\t\tonboardingManager.stepIndex++;\r\n\r\n\t\treturn;\r\n\t}\r\n\r\n\tprivate stop(): void {\r\n\t\tconst onboardingManager = OnboardingManager.getManager();\r\n\r\n\t\tonboardingManager.isStarted = false;\r\n\t\tonboardingManager.steps = [];\r\n\t\tonboardingManager.containerRef?.instance.hide();\r\n\t\tonboardingManager.onFinish?.();\r\n\t}\r\n}\r\n", "import {\r\n\tBasicNavAngleUnit,\r\n\tDefaultUserSettingManager,\r\n\tEventBus,\r\n\tNavAngleUnit,\r\n\tSubject,\r\n\tSubscribable,\r\n\tUnit,\r\n\tUnitType,\r\n\tUserSettingDefinition,\r\n\tUserSettingManagerEntry,\r\n\tUserSettingValue,\r\n} from '@microsoft/msfs-sdk';\r\nimport { checkUserSetting } from '../utils/SettingsUtils';\r\n\r\n/**\r\n * Setting modes for nav angle units.\r\n * @internal\r\n */\r\nexport enum UnitsNavAngleSettingMode {\r\n\tMagnetic = 'magnetic',\r\n\tTrue = 'true',\r\n}\r\n\r\n/**\r\n * Setting modes for speed units.\r\n * @internal\r\n */\r\nexport enum UnitsSpeedSettingMode {\r\n\tNautical = 'KTS',\r\n\tMetric = 'KPH',\r\n}\r\n\r\n/**\r\n * Setting modes for distance units.\r\n * @internal\r\n */\r\nexport enum UnitsDistanceSettingMode {\r\n\tNautical = 'NM',\r\n\tMetric = 'KM',\r\n}\r\n\r\n/**\r\n * Setting modes for altitude units.\r\n * @internal\r\n */\r\nexport enum UnitsAltitudeSettingMode {\r\n\tFeet = 'FT',\r\n\tMeters = 'M',\r\n}\r\n\r\n/**\r\n * Setting modes for weight units.\r\n * @internal\r\n */\r\nexport enum UnitsWeightSettingMode {\r\n\tPounds = 'LBS',\r\n\tKilograms = 'KG',\r\n}\r\n\r\n/**\r\n * Setting modes for weight units.\r\n * @internal\r\n */\r\nexport enum UnitsVolumeSettingMode {\r\n\tGallons = 'GAL US',\r\n\tLiters = 'L',\r\n}\r\n\r\n/**\r\n * Setting modes for temperature units.\r\n * @internal\r\n */\r\nexport enum UnitsTemperatureSettingMode {\r\n\tFahrenheit = '\u00B0F',\r\n\tCelsius = '\u00B0C',\r\n}\r\n\r\n/**\r\n * Setting modes for time units.\r\n * @internal\r\n */\r\nexport enum UnitsTimeSettingMode {\r\n\tLocal12 = 'local-12',\r\n\tLocal24 = 'local-24',\r\n}\r\n\r\nexport type UnitsSettingsTypes = {\r\n\t/** The nav angle units setting. */\r\n\tunitsNavAngle: UnitsNavAngleSettingMode;\r\n\r\n\t/** The speed units setting. */\r\n\tunitsSpeed: UnitsSpeedSettingMode;\r\n\r\n\t/** The distance units setting. */\r\n\tunitsDistance: UnitsDistanceSettingMode;\r\n\r\n\t/** The altitude units setting. */\r\n\tunitsAltitude: UnitsAltitudeSettingMode;\r\n\r\n\t/** The weight units setting. */\r\n\tunitsWeight: UnitsWeightSettingMode;\r\n\r\n\t/** The temperature units setting. */\r\n\tunitsVolume: UnitsVolumeSettingMode;\r\n\r\n\t/** The temperature units setting. */\r\n\tunitsTemperature: UnitsTemperatureSettingMode;\r\n\r\n\t/** The time units setting. */\r\n\tunitsTime: UnitsTimeSettingMode;\r\n};\r\n\r\nexport class UnitsSettingsManager extends DefaultUserSettingManager<UnitsSettingsTypes> {\r\n\tprivate static readonly TRUE_BEARING = BasicNavAngleUnit.create(false);\r\n\tprivate static readonly MAGNETIC_BEARING = BasicNavAngleUnit.create(true);\r\n\r\n\tprivate readonly navAngleUnitsSub = Subject.create(UnitsSettingsManager.MAGNETIC_BEARING);\r\n\tpublic readonly navAngleUnits: Subscribable<NavAngleUnit> = this.navAngleUnitsSub;\r\n\r\n\tprivate readonly timeUnitsSub = Subject.create(UnitsTimeSettingMode.Local12);\r\n\tpublic readonly _timeUnits: Subscribable<UnitsTimeSettingMode> = this.timeUnitsSub;\r\n\r\n\tprivate areSubscribablesInit = false;\r\n\r\n\tpublic constructor(\r\n\t\tbus: EventBus,\r\n\t\tsettingsDefs: Array<UserSettingDefinition<UnitsSettingsTypes[keyof UnitsSettingsTypes]>>\r\n\t) {\r\n\t\tsuper(bus, settingsDefs, true);\r\n\r\n\t\tthis.areSubscribablesInit = true;\r\n\r\n\t\tfor (const entry of this.settings.values()) {\r\n\t\t\tthis.updateUnitsSubjects(entry.setting.definition.name, entry.setting.value);\r\n\t\t}\r\n\t}\r\n\r\n\tprotected onSettingValueChanged<K extends keyof UnitsSettingsTypes>(\r\n\t\tentry: UserSettingManagerEntry<UnitsSettingsTypes[K]>,\r\n\t\tvalue: UnitsSettingsTypes[K]\r\n\t): void {\r\n\t\tif (this.areSubscribablesInit) {\r\n\t\t\tthis.updateUnitsSubjects(entry.setting.definition.name, value);\r\n\t\t}\r\n\r\n\t\tsuper.onSettingValueChanged(entry, value);\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if the values loaded from the datastorage correspond to the settings types.\r\n\t */\r\n\tpublic checkLoadedValues(): void {\r\n\t\tcheckUserSetting(this.getSetting('unitsNavAngle'), UnitsNavAngleSettingMode);\r\n\t\tcheckUserSetting(this.getSetting('unitsSpeed'), UnitsSpeedSettingMode);\r\n\t\tcheckUserSetting(this.getSetting('unitsDistance'), UnitsDistanceSettingMode);\r\n\t\tcheckUserSetting(this.getSetting('unitsAltitude'), UnitsAltitudeSettingMode);\r\n\t\tcheckUserSetting(this.getSetting('unitsWeight'), UnitsWeightSettingMode);\r\n\t\tcheckUserSetting(this.getSetting('unitsVolume'), UnitsVolumeSettingMode);\r\n\t\tcheckUserSetting(this.getSetting('unitsTemperature'), UnitsTemperatureSettingMode);\r\n\t\tcheckUserSetting(this.getSetting('unitsTime'), UnitsTimeSettingMode);\r\n\t}\r\n\r\n\tprotected updateUnitsSubjects(settingName: string, value: UserSettingValue): void {\r\n\t\tswitch (settingName) {\r\n\t\t\tcase 'unitsNavAngle':\r\n\t\t\t\tthis.navAngleUnitsSub.set(\r\n\t\t\t\t\tvalue === UnitsNavAngleSettingMode.True\r\n\t\t\t\t\t\t? UnitsSettingsManager.TRUE_BEARING\r\n\t\t\t\t\t\t: UnitsSettingsManager.MAGNETIC_BEARING\r\n\t\t\t\t);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'unitsTime':\r\n\t\t\t\tthis.timeUnitsSub.set(value as UnitsTimeSettingMode);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic getSettingUnitType<F extends string = string>(settingName: keyof UnitsSettingsTypes): Subscribable<Unit<F>> {\r\n\t\treturn this.getSetting(settingName).map((settingValue) => UnitTypesMap[settingValue]);\r\n\t}\r\n}\r\n\r\ntype settingsTypes =\r\n\t| UnitsSpeedSettingMode\r\n\t| UnitsDistanceSettingMode\r\n\t| UnitsAltitudeSettingMode\r\n\t| UnitsWeightSettingMode\r\n\t| UnitsVolumeSettingMode\r\n\t| UnitsTemperatureSettingMode;\r\n\r\ntype UnitTypesMapType = {\r\n\treadonly [key in settingsTypes]: Unit<string>;\r\n};\r\n\r\nconst UnitTypesMap: UnitTypesMapType = {\r\n\t/** Mapped speed unit types */\r\n\tKTS: UnitType.KNOT,\r\n\tKPH: UnitType.KPH,\r\n\r\n\t/** Mapped distance unit type */\r\n\tNM: UnitType.NMILE,\r\n\tKM: UnitType.KILOMETER,\r\n\r\n\t/** Mapped altitude unit type */\r\n\tFT: UnitType.FOOT,\r\n\tM: UnitType.METER,\r\n\r\n\t/** Mapped weight unit type */\r\n\tLBS: UnitType.POUND,\r\n\tKG: UnitType.KILOGRAM,\r\n\r\n\t/** Mapped volume unit type */\r\n\t'GAL US': UnitType.GALLON,\r\n\tL: UnitType.LITER,\r\n\r\n\t/** Mapped temperature unit type */\r\n\t'\u00B0C': UnitType.CELSIUS,\r\n\t'\u00B0F': UnitType.FAHRENHEIT,\r\n};\r\n", "import { EventBus } from '@microsoft/msfs-sdk';\r\nimport {\r\n\tUnitsAltitudeSettingMode,\r\n\tUnitsDistanceSettingMode,\r\n\tUnitsNavAngleSettingMode,\r\n\tUnitsSettingsManager,\r\n\tUnitsSpeedSettingMode,\r\n\tUnitsTemperatureSettingMode,\r\n\tUnitsTimeSettingMode,\r\n\tUnitsVolumeSettingMode,\r\n\tUnitsWeightSettingMode,\r\n} from './UnitsSettingsManager';\r\n\r\n/**\r\n * Utility class for retrieving display units setting managers.\r\n * @internal\r\n */\r\nexport class UnitsSettings {\r\n\tprivate static INSTANCE: UnitsSettingsManager | undefined;\r\n\r\n\t/**\r\n\t * Retrieves a manager for display units settings.\r\n\t * @param bus The event bus.\r\n\t * @returns a manager for display units settings.\r\n\t */\r\n\tpublic static getManager(bus: EventBus): UnitsSettingsManager {\r\n\t\treturn (UnitsSettings.INSTANCE ??= new UnitsSettingsManager(bus, [\r\n\t\t\t{\r\n\t\t\t\tname: 'unitsNavAngle',\r\n\t\t\t\tdefaultValue: UnitsNavAngleSettingMode.Magnetic,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: 'unitsSpeed',\r\n\t\t\t\tdefaultValue: UnitsSpeedSettingMode.Nautical,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: 'unitsDistance',\r\n\t\t\t\tdefaultValue: UnitsDistanceSettingMode.Nautical,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: 'unitsAltitude',\r\n\t\t\t\tdefaultValue: UnitsAltitudeSettingMode.Feet,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: 'unitsWeight',\r\n\t\t\t\tdefaultValue: UnitsWeightSettingMode.Pounds,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: 'unitsVolume',\r\n\t\t\t\tdefaultValue: UnitsVolumeSettingMode.Gallons,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: 'unitsTemperature',\r\n\t\t\t\tdefaultValue: UnitsTemperatureSettingMode.Celsius,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: 'unitsTime',\r\n\t\t\t\tdefaultValue: UnitsTimeSettingMode.Local12,\r\n\t\t\t},\r\n\t\t]));\r\n\t}\r\n}\r\n", "import {\r\n\tDefaultUserSettingManager,\r\n\tEventBus,\r\n\tUserSettingDefinition,\r\n\tUserSettingManagerEntry,\r\n} from '@microsoft/msfs-sdk';\r\nimport { IApp } from '../App';\r\nimport { Efb } from '../EfbApi';\r\nimport { checkUserSetting } from '../utils';\r\n\r\nexport enum EfbMode {\r\n\t'2D',\r\n\t'3D',\r\n}\r\n\r\nexport enum EfbSizeSettingMode {\r\n\tSmall,\r\n\tMedium,\r\n\tLarge,\r\n}\r\n\r\nexport enum OrientationSettingMode {\r\n\tVertical,\r\n\tHorizontal,\r\n}\r\n\r\nexport type EfbSettingsType = {\r\n\t/** The EFB mode (2D or 3D) */\r\n\tmode: EfbMode;\r\n\r\n\t/** The orientation mode setting */\r\n\tefbSize: EfbSizeSettingMode;\r\n\r\n\t/** The orientation mode setting */\r\n\torientationMode: OrientationSettingMode;\r\n\r\n\t/** Wether we are using auto brightness or not */\r\n\tisBrightnessAuto: boolean;\r\n\r\n\t/** Auto brightness percentage used to set manual when toggling auto/manual (will only be updated if we are on SettingsApp) */\r\n\tautoBrightnessPercentage: number;\r\n\r\n\t/** Current brightness percentage used on slider (will only be updated if we are on SettingsApp) */\r\n\tmanualBrightnessPercentage: number;\r\n\r\n\t/** The favorite apps setting. */\r\n\tfavoriteApps: string;\r\n\r\n\t/** The app that appears when the efb is loaded for the first time */\r\n\tdefaultApp: string;\r\n};\r\n\r\nexport class EfbSettingsManager extends DefaultUserSettingManager<EfbSettingsType> {\r\n\tprotected favoriteApps: string[];\r\n\r\n\tpublic constructor(\r\n\t\tbus: EventBus,\r\n\t\tsettingsDefs: Array<UserSettingDefinition<EfbSettingsType[keyof EfbSettingsType]>>\r\n\t) {\r\n\t\tsuper(bus, settingsDefs);\r\n\r\n\t\t// Favorite apps array initialisation\r\n\t\tlet stringToArray: string[] = [];\r\n\t\ttry {\r\n\t\t\tstringToArray = JSON.parse(this.getSetting('favoriteApps').get());\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error('JSON failed, impossible to parse : ', this.getSetting('favoriteApps').get());\r\n\t\t\tstringToArray = ['AtlasApp', 'AircraftApp', 'PilotBookApp', 'SettingsApp'];\r\n\t\t}\r\n\t\tthis.favoriteApps = stringToArray;\r\n\t}\r\n\r\n\tpublic get favoriteAppsArray(): readonly string[] {\r\n\t\treturn this.favoriteApps;\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if the values loaded from the datastorage correspond to the settings types.\r\n\t */\r\n\tpublic checkLoadedValues(): void {\r\n\t\tcheckUserSetting(this.getSetting('efbSize'), EfbSizeSettingMode);\r\n\t\tcheckUserSetting(this.getSetting('orientationMode'), OrientationSettingMode);\r\n\t}\r\n\r\n\t/**\r\n\t * Add an app to the favorites\r\n\t * @param app The app to add\r\n\t * @returns the EFB settings manager\r\n\t */\r\n\tpublic addAppToFavorites(app: IApp): this {\r\n\t\tthis.favoriteApps.push(app.internalName);\r\n\r\n\t\tthis.onFavoriteAppsUpdated();\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Remove an app from the favorites\r\n\t * @param app The app to remove\r\n\t * @returns the EFB settings manager\r\n\t */\r\n\tpublic removeAppFromFavorites(app: IApp): this {\r\n\t\tconst index = this.favoriteApps.indexOf(app.internalName);\r\n\t\tif (index !== -1) {\r\n\t\t\tthis.favoriteApps.splice(index, 1);\r\n\t\t}\r\n\r\n\t\tthis.onFavoriteAppsUpdated();\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Update the favoriteSetting and the apps array in the EFB instance in order to rerender when the favorite apps change\r\n\t */\r\n\tprotected onFavoriteAppsUpdated(): void {\r\n\t\t/** Update the manager setting */\r\n\t\tconst stringSetting = JSON.stringify(this.favoriteApps);\r\n\t\tthis.getSetting('favoriteApps').set(stringSetting);\r\n\r\n\t\t/** Update the favorite indexes of the apps stocked in the EFB instance */\r\n\t\tEfb.apps()\r\n\t\t\t.getArray()\r\n\t\t\t.forEach((app) => {\r\n\t\t\t\tapp.favoriteIndex = this.favoriteApps.indexOf(app.internalName);\r\n\t\t\t});\r\n\r\n\t\tthis.bus.pub('favs-update', '');\r\n\t}\r\n\r\n\tprotected updateFavoriteAppsArray(value: EfbSettingsType['favoriteApps']): void {\r\n\t\tlet arraySetting: string[] = [];\r\n\t\ttry {\r\n\t\t\tarraySetting = JSON.parse(value);\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error('JSON failed, impossible to parse : ', value);\r\n\t\t\tarraySetting = ['AtlasApp', 'AircraftApp', 'PilotBookApp', 'SettingsApp'];\r\n\t\t}\r\n\r\n\t\tthis.favoriteApps = arraySetting;\r\n\t}\r\n\r\n\tprotected onSettingValueChanged<K extends keyof EfbSettingsType>(\r\n\t\tentry: UserSettingManagerEntry<EfbSettingsType[K]>,\r\n\t\tvalue: EfbSettingsType[K]\r\n\t): void {\r\n\t\tsuper.onSettingValueChanged(entry, value);\r\n\r\n\t\tconst settingName = entry.setting.definition.name;\r\n\r\n\t\tswitch (settingName) {\r\n\t\t\tcase 'efbSize':\r\n\t\t\t\tif (typeof value === 'string') {\r\n\t\t\t\t\tvalue = EfbSizeSettingMode[value.toString()];\r\n\t\t\t\t}\r\n\r\n\t\t\t\tCoherent.call('SET_SIZE', value);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'orientationMode':\r\n\t\t\t\tif (typeof value === 'string') {\r\n\t\t\t\t\tvalue = OrientationSettingMode[value.toString()];\r\n\t\t\t\t}\r\n\r\n\t\t\t\tCoherent.call('SET_ORIENTATION', value);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'isBrightnessAuto':\r\n\t\t\t\tif (typeof value !== 'boolean') {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (value === true) {\r\n\t\t\t\t\tthis.getSetting('manualBrightnessPercentage').set(\r\n\t\t\t\t\t\tthis.getSetting('autoBrightnessPercentage').get()\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tCoherent.call('SET_IS_AUTO_BRIGHTNESS', this.getSetting('isBrightnessAuto').get());\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'manualBrightnessPercentage':\r\n\t\t\t\tif (this.getSetting('isBrightnessAuto').get()) {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (typeof value !== 'number') {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tCoherent.call('SET_MANUAL_BRIGHTNESS', value / 100);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'favoriteApps':\r\n\t\t\t\tthis.updateFavoriteAppsArray(value.toString());\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * Utility class for retrieving EFB setting managers.\r\n * @internal\r\n */\r\nexport class EfbSettings {\r\n\tprivate static INSTANCE: EfbSettingsManager | undefined;\r\n\r\n\tprivate constructor() {\r\n\t\t// Do nothing\r\n\t}\r\n\r\n\tpublic static getManager(bus: EventBus): EfbSettingsManager {\r\n\t\treturn (EfbSettings.INSTANCE ??= new EfbSettingsManager(bus, [\r\n\t\t\t{\r\n\t\t\t\tname: 'mode',\r\n\t\t\t\tdefaultValue: EfbMode['2D'],\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: 'efbSize',\r\n\t\t\t\tdefaultValue: EfbSizeSettingMode.Small,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: 'orientationMode',\r\n\t\t\t\tdefaultValue: OrientationSettingMode.Vertical,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: 'isBrightnessAuto',\r\n\t\t\t\tdefaultValue: true,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: 'autoBrightnessPercentage',\r\n\t\t\t\tdefaultValue: 50,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: 'manualBrightnessPercentage',\r\n\t\t\t\tdefaultValue: 50,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: 'favoriteApps',\r\n\t\t\t\tdefaultValue: '[\"AtlasApp\",\"AircraftApp\",\"PilotBookApp\",\"SettingsApp\"]',\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: 'defaultApp',\r\n\t\t\t\tdefaultValue: 'AtlasApp',\r\n\t\t\t},\r\n\t\t]));\r\n\t}\r\n}\r\n", "import { EventBus, UserSettingSaveManager } from '@microsoft/msfs-sdk';\r\nimport { EfbSettings } from './EfbSettingsManager';\r\nimport { UnitsSettings } from './UnitsSettings';\r\n\r\ndeclare function GetDataStorage(): any;\r\n\r\n/**\r\n * A manager for EFB user settings that are saved and persistent across flight sessions.\r\n * @internal\r\n */\r\nexport class EfbSettingsSaveManager extends UserSettingSaveManager {\r\n\tprotected readonly prefix = 'efb-2024-08-28.';\r\n\r\n\tprotected readonly settings = [\r\n\t\t...EfbSettings.getManager(this.bus).getAllSettings(),\r\n\t\t...UnitsSettings.getManager(this.bus).getAllSettings(),\r\n\t];\r\n\r\n\tpublic constructor(private readonly bus: EventBus) {\r\n\t\tsuper(\r\n\t\t\t[...EfbSettings.getManager(bus).getAllSettings(), ...UnitsSettings.getManager(bus).getAllSettings()],\r\n\t\t\tbus\r\n\t\t);\r\n\t}\r\n\r\n\tpublic load(key: string): void {\r\n\t\tsuper.load(`${this.prefix}${key}`);\r\n\r\n\t\tUnitsSettings.getManager(this.bus).checkLoadedValues();\r\n\t\tEfbSettings.getManager(this.bus).checkLoadedValues();\r\n\r\n\t\tthis.save(`${this.prefix}${key}`);\r\n\t}\r\n\r\n\tpublic save(key: string): void {\r\n\t\tsuper.save(`${this.prefix}${key}`);\r\n\t}\r\n\r\n\tpublic startAutoSave(key: string): void {\r\n\t\tsuper.startAutoSave(`${this.prefix}${key}`);\r\n\t}\r\n\r\n\tpublic stopAutoSave(key: string): void {\r\n\t\tsuper.stopAutoSave(`${this.prefix}${key}`);\r\n\t}\r\n\r\n\tpublic pruneOldPrefixes(): void {\r\n\t\tconst storage = GetDataStorage().searchData('efb');\r\n\t\tfor (const entry of storage) {\r\n\t\t\tif (entry.key.indexOf(`.${this.prefix}`) === -1) {\r\n\t\t\t\tGetDataStorage().deleteData(entry.key);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n", "import { ComponentProps, DisplayComponent, FSComponent, NodeReference, Subject, VNode } from '@microsoft/msfs-sdk';\r\nimport { AppViewService } from '../AppView';\r\nimport { GamepadUiView, UiView, UiViewProps } from '../UiView';\r\nimport { MapSubject, MapSubscribable } from '../sub';\r\nimport { ClassProp, TVNode } from '../types';\r\nimport { ViewStackContainer } from './ViewContainer';\r\nimport { ViewWrapper } from './ViewWrapper';\r\n\r\nexport type ViewEntryNode = TVNode<UiView<UiViewProps>, UiViewProps>;\r\ntype ViewRef = null | UiView | GamepadUiView<HTMLElement>;\r\n\r\ninterface ViewEntry<Ref extends ViewRef = ViewRef> {\r\n\treadonly key: string;\r\n\r\n\treadonly render: () => ViewEntryNode;\r\n\r\n\tvNode: null | ViewEntryNode;\r\n\r\n\tref: Ref;\r\n\r\n\treadonly containerRef: NodeReference<ViewWrapper>;\r\n\r\n\treadonly isActive: Subject<boolean>;\r\n\r\n\treadonly isDisabled: Subject<boolean>;\r\n\r\n\tisInit: boolean;\r\n\r\n\treadonly isTabVisible: Subject<boolean>;\r\n}\r\n\r\nexport type PublicViewEntry<Ref extends ViewRef = ViewRef> = Pick<\r\n\tViewEntry<Ref>,\r\n\t'key' | 'ref' | 'isActive' | 'isDisabled' | 'isTabVisible'\r\n>;\r\n\r\nexport class ViewService {\r\n\tprivate readonly registeredViews: MapSubscribable<string, ViewEntry> = MapSubject.create<string, ViewEntry>();\r\n\tprivate viewRef?: ViewContainer;\r\n\tprivate hasInitialized = false;\r\n\tprivate activeViewEntry: Subject<ViewEntry | null> = Subject.create<ViewEntry | null>(null);\r\n\r\n\tpublic constructor(viewKey?: string, appViewService?: AppViewService) {\r\n\t\tif (viewKey && appViewService) {\r\n\t\t\tappViewService\r\n\t\t\t\t.on('pause', viewKey, (): void => {\r\n\t\t\t\t\tconst activeViewEntry = this.activeViewEntry.get();\r\n\r\n\t\t\t\t\tif (activeViewEntry?.isActive.get() === true) {\r\n\t\t\t\t\t\tactiveViewEntry.isActive.set(false);\r\n\t\t\t\t\t\tactiveViewEntry.ref?.onPause();\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\t.on('resume', viewKey, (): void => {\r\n\t\t\t\t\tconst activeViewEntry = this.activeViewEntry.get();\r\n\r\n\t\t\t\t\tif (activeViewEntry?.isActive.get() === false) {\r\n\t\t\t\t\t\tactiveViewEntry.isActive.set(true);\r\n\t\t\t\t\t\tactiveViewEntry.ref?.onResume();\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tpublic getRegisteredViews<Ref extends ViewRef = ViewRef>(): Readonly<\r\n\t\tMapSubscribable<string, PublicViewEntry<Ref>>\r\n\t> {\r\n\t\treturn this.registeredViews as unknown as MapSubscribable<string, PublicViewEntry<Ref>>;\r\n\t}\r\n\r\n\tprivate getViewEntry<Ref extends ViewRef = ViewRef>(key: string): ViewEntry<Ref> {\r\n\t\tconst viewEntry = this.registeredViews.get(key);\r\n\r\n\t\tif (viewEntry === undefined) {\r\n\t\t\tthrow new Error(`View \"${key}\" doesn't exists`);\r\n\t\t}\r\n\r\n\t\treturn viewEntry as ViewEntry<Ref>;\r\n\t}\r\n\r\n\tpublic registerView(key: string, vNodeFactory: () => ViewEntryNode): PublicViewEntry<null> {\r\n\t\tif (this.registeredViews.has(key)) {\r\n\t\t\tthrow new Error(`View \"${key}\" is already used`);\r\n\t\t}\r\n\r\n\t\tconst isActive = Subject.create<boolean>(false);\r\n\t\tconst isDisabled = Subject.create<boolean>(false);\r\n\t\tconst isTabVisible = Subject.create<boolean>(true);\r\n\r\n\t\tconst isInit = false;\r\n\r\n\t\tconst viewEntry: ViewEntry<null> = {\r\n\t\t\tkey,\r\n\t\t\trender: vNodeFactory,\r\n\t\t\tvNode: null,\r\n\t\t\tcontainerRef: FSComponent.createRef<ViewWrapper>(),\r\n\t\t\tref: null,\r\n\t\t\tisActive,\r\n\t\t\tisDisabled,\r\n\t\t\tisTabVisible,\r\n\t\t\tisInit,\r\n\t\t};\r\n\r\n\t\tthis.initViewEntry(viewEntry);\r\n\r\n\t\tthis.registeredViews.set(key, viewEntry);\r\n\r\n\t\treturn viewEntry;\r\n\t}\r\n\r\n\tpublic onContainerRendered(viewRef: ViewContainer): void {\r\n\t\tthis.viewRef = viewRef;\r\n\t}\r\n\r\n\tprivate initViewEntry(entry: ViewEntry): void {\r\n\t\tif (entry.isInit) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tentry.isInit = true;\r\n\t\tentry.vNode = entry.render();\r\n\t\tentry.ref = entry.vNode.instance;\r\n\r\n\t\tthis.viewRef?.renderView(\r\n\t\t\t<ViewWrapper viewName={entry.key} isActive={entry.isActive} ref={entry.containerRef}>\r\n\t\t\t\t{entry.vNode}\r\n\t\t\t</ViewWrapper>\r\n\t\t);\r\n\t}\r\n\r\n\tpublic initialize(key?: string): void {\r\n\t\tif (this.hasInitialized) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.hasInitialized = true;\r\n\r\n\t\tif (key) {\r\n\t\t\tconst initViewEntry = this.getViewEntry(key);\r\n\r\n\t\t\tinitViewEntry.ref?.onOpen();\r\n\t\t\tinitViewEntry.isActive.set(true);\r\n\r\n\t\t\tthis.activeViewEntry.set(initViewEntry);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic openPage<Ref extends ViewRef = ViewRef>(key: string): PublicViewEntry<Ref> {\r\n\t\tconst activeViewEntry = this.activeViewEntry.get() as undefined | ViewEntry<Ref | ViewRef>;\r\n\r\n\t\tif (activeViewEntry?.key === key) {\r\n\t\t\treturn activeViewEntry as PublicViewEntry<Ref>;\r\n\t\t}\r\n\r\n\t\tactiveViewEntry?.isActive.set(false);\r\n\t\tactiveViewEntry?.ref?.onPause();\r\n\r\n\t\tconst newViewEntry = this.getViewEntry<Ref>(key);\r\n\r\n\t\tnewViewEntry.isActive.set(true);\r\n\t\tnewViewEntry.ref?.onResume();\r\n\r\n\t\tthis.activeViewEntry.set(newViewEntry);\r\n\r\n\t\treturn newViewEntry as PublicViewEntry<Ref>;\r\n\t}\r\n\r\n\tpublic onUpdate(time: number): void {\r\n\t\tthis.activeViewEntry.get()?.ref?.onUpdate(time);\r\n\t}\r\n}\r\n\r\nexport interface ViewContainer {\r\n\trenderView(view: VNode): void;\r\n}\r\n\r\nexport interface ViewServiceContainerProps extends ComponentProps {\r\n\tviewService: ViewService;\r\n\r\n\tclass?: ClassProp;\r\n\r\n\tid?: string;\r\n}\r\n\r\nexport class ViewServiceContainer extends DisplayComponent<ViewServiceContainerProps> {\r\n\tprivate readonly stackContainerRef = FSComponent.createRef<ViewStackContainer>();\r\n\r\n\tpublic onAfterRender(node: VNode): void {\r\n\t\tsuper.onAfterRender(node);\r\n\r\n\t\tthis.props.viewService.onContainerRendered(this.stackContainerRef.instance);\r\n\t}\r\n\r\n\tpublic render(): VNode {\r\n\t\treturn <ViewStackContainer ref={this.stackContainerRef} class={this.props.class} id={this.props.id} />;\r\n\t}\r\n}\r\n", "import { ComponentProps, DisplayComponent, FSComponent, VNode } from '@microsoft/msfs-sdk';\r\nimport { ClassProp } from '../types';\r\nimport { mergeClassProp } from '../utils';\r\nimport { ViewContainer } from './ViewService';\r\n\r\ninterface ViewStackContainerProps extends ComponentProps {\r\n\tclass?: ClassProp;\r\n\r\n\tid?: string;\r\n}\r\n\r\nexport class ViewStackContainer extends DisplayComponent<ViewStackContainerProps> implements ViewContainer {\r\n\tprivate readonly rootRef = FSComponent.createRef<HTMLDivElement>();\r\n\r\n\tpublic renderView(view: VNode): void {\r\n\t\tFSComponent.render(view, this.rootRef.instance);\r\n\t}\r\n\r\n\tpublic render(): VNode {\r\n\t\treturn (\r\n\t\t\t<div\r\n\t\t\t\tref={this.rootRef}\r\n\t\t\t\tclass={mergeClassProp('view-stack', this.props.class)}\r\n\t\t\t\tid={this.props.id ?? ''}\r\n\t\t\t></div>\r\n\t\t);\r\n\t}\r\n}\r\n", "import {\r\n\tComponentProps,\r\n\tDisplayComponent,\r\n\tFSComponent,\r\n\tSetSubject,\r\n\tSubscribable,\r\n\tSubscription,\r\n\tVNode,\r\n} from '@microsoft/msfs-sdk';\r\n\r\ninterface ViewWrapperProps extends ComponentProps {\r\n\tisActive: Subscribable<boolean>;\r\n\r\n\tviewName: string;\r\n}\r\n\r\nexport class ViewWrapper extends DisplayComponent<ViewWrapperProps> {\r\n\tprivate readonly rootRef = FSComponent.createRef<HTMLDivElement>();\r\n\r\n\tprivate readonly classList = SetSubject.create(['view', 'hidden', this.props.viewName]);\r\n\r\n\tprivate readonly subs: Subscription[] = [];\r\n\r\n\tpublic onAfterRender(node: VNode): void {\r\n\t\tsuper.onAfterRender(node);\r\n\r\n\t\tthis.subs.push(\r\n\t\t\tthis.props.isActive.sub((isActive) => {\r\n\t\t\t\tif (isActive) {\r\n\t\t\t\t\tthis.classList.delete('hidden');\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.classList.add('hidden');\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t);\r\n\t}\r\n\r\n\tpublic render(): VNode {\r\n\t\treturn (\r\n\t\t\t<div ref={this.rootRef} class={this.classList}>\r\n\t\t\t\t{this.props.children}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n\tpublic destroy(): void {\r\n\t\tconst root = this.rootRef.getOrDefault();\r\n\t\tif (root !== null) {\r\n\t\t\troot.parentNode?.removeChild(root);\r\n\t\t}\r\n\r\n\t\tthis.subs.forEach((x) => x.destroy());\r\n\r\n\t\tsuper.destroy();\r\n\t}\r\n}\r\n", "import { FSComponent, NodeReference, SubscribableMapFunctions, Subscription, VNode } from '@microsoft/msfs-sdk';\r\nimport { TabSelector } from '../Components';\r\nimport { GamepadUiComponent, GamepadUiComponentProps } from '../Gamepad';\r\nimport { UiView } from '../UiView';\r\nimport { SubscribableMapEventType } from '../sub';\r\nimport { ClassProp, TVNode } from '../types';\r\nimport { mergeClassProp } from '../utils';\r\nimport { PublicViewEntry, ViewService } from './ViewService';\r\n\r\ninterface ViewServiceMenuProps extends GamepadUiComponentProps {\r\n\tviewService: ViewService;\r\n\tclass?: ClassProp;\r\n}\r\n\r\ninterface ViewServiceMenuTab {\r\n\tkey: string;\r\n\ttabRef: NodeReference<TabSelector>;\r\n\tview: Readonly<PublicViewEntry<UiView>>;\r\n}\r\n\r\nexport class ViewServiceMenu extends GamepadUiComponent<HTMLDivElement, ViewServiceMenuProps> {\r\n\tprivate viewsSub?: Subscription;\r\n\r\n\tprotected tabs: ViewServiceMenuTab[] = [];\r\n\r\n\tprivate tabRender(tab: ViewServiceMenuTab): TVNode<TabSelector> {\r\n\t\treturn (\r\n\t\t\t<TabSelector\r\n\t\t\t\tref={tab.tabRef}\r\n\t\t\t\ttabName={tab.view.ref.tabName}\r\n\t\t\t\tcallback={(): void => {\r\n\t\t\t\t\tthis.props.viewService.openPage(tab.view.key);\r\n\t\t\t\t}}\r\n\t\t\t\tactive={tab.view.isActive}\r\n\t\t\t\tdisabled={tab.view.isDisabled}\r\n\t\t\t\thidden={tab.view.isTabVisible.map(SubscribableMapFunctions.not())}\r\n\t\t\t/>\r\n\t\t);\r\n\t}\r\n\r\n\tpublic render(): VNode {\r\n\t\treturn <div ref={this.gamepadUiComponentRef} class={mergeClassProp('tabs', this.props.class)}></div>;\r\n\t}\r\n\r\n\tpublic onAfterRender(node: VNode): void {\r\n\t\tsuper.onAfterRender(node);\r\n\r\n\t\tthis.viewsSub = this.props.viewService.getRegisteredViews<UiView>().sub((key, type, view) => {\r\n\t\t\tswitch (type) {\r\n\t\t\t\tcase SubscribableMapEventType.Added:\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif (view === undefined || !(view.ref instanceof UiView) || !view.ref.tabName) {\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tconst tab: ViewServiceMenuTab = {\r\n\t\t\t\t\t\t\tkey,\r\n\t\t\t\t\t\t\ttabRef: FSComponent.createRef<TabSelector>(),\r\n\t\t\t\t\t\t\tview,\r\n\t\t\t\t\t\t};\r\n\r\n\t\t\t\t\t\tFSComponent.render(this.tabRender(tab), this.gamepadUiComponentRef.instance);\r\n\t\t\t\t\t\tthis.tabs.push(tab);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase SubscribableMapEventType.Removed:\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tconst index = this.tabs.findIndex((el) => el.key === key);\r\n\t\t\t\t\t\tif (index === -1) {\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tconst removed = this.tabs.splice(index, 1)[0];\r\n\t\t\t\t\t\tremoved.tabRef.instance.destroy();\r\n\r\n\t\t\t\t\t\tconst child = this.gamepadUiComponentRef.instance.childNodes.item(index);\r\n\t\t\t\t\t\tthis.gamepadUiComponentRef.instance.removeChild(child);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}, true);\r\n\t}\r\n\r\n\tpublic destroy(): void {\r\n\t\tthis.viewsSub?.destroy();\r\n\r\n\t\tsuper.destroy();\r\n\t}\r\n}\r\n"],
  "mappings": "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",
  "names": ["AppBootMode", "AppSuspendMode", "_a", "import_msfs_sdk", "value", "AirportSize", "import_msfs_sdk", "import_msfs_sdk", "SubscribableMapEventType", "value", "value", "FlightPhaseState", "_a", "import_msfs_sdk", "GameMode", "_a", "_a", "import_msfs_sdk", "value", "import_msfs_sdk", "import_msfs_sdk", "StopwatchState", "import_msfs_sdk", "_a", "_b", "import_msfs_sdk", "import_msfs_sdk", "import_msfs_sdk", "GamepadEvents", "import_msfs_sdk", "value", "_e", "import_msfs_sdk", "_a", "import_msfs_sdk", "ViewBootMode", "ViewSuspendMode", "_a", "_b", "UiView", "_a", "import_msfs_sdk", "import_msfs_sdk", "import_msfs_sdk", "_a", "_b", "import_msfs_sdk", "import_msfs_sdk", "_a", "Tag", "_b", "import_msfs_sdk", "_a", "import_msfs_sdk", "_a", "import_msfs_sdk", "_a", "arrowIconPath", "_a", "import_msfs_sdk", "import_msfs_sdk", "_a", "import_msfs_sdk", "_a", "_b", "import_msfs_sdk", "_a", "_a", "_SelectableButton", "SelectableButton", "import_msfs_sdk", "_a", "import_msfs_sdk", "_a", "_a", "import_msfs_sdk", "import_msfs_sdk", "import_msfs_sdk", "import_msfs_sdk", "import_msfs_sdk", "import_msfs_sdk", "import_msfs_sdk", "import_msfs_sdk", "_a", "_b", "value", "value", "_a", "_b", "import_msfs_sdk", "value", "_a", "import_msfs_sdk", "_a", "value", "_a", "_b", "_c", "_d", "value", "import_msfs_sdk", "_a", "_b", "value", "import_msfs_sdk", "import_msfs_sdk", "_a", "import_msfs_sdk", "import_msfs_sdk", "_a", "_b", "_c", "value", "import_msfs_sdk", "import_msfs_sdk", "_a", "import_msfs_sdk", "import_msfs_sdk", "_a", "_b", "import_msfs_sdk", "_a", "_b", "_c", "_d", "_e", "value", "import_msfs_sdk", "_a", "import_msfs_sdk", "import_msfs_sdk", "_a", "_b", "value", "import_msfs_sdk", "_a", "import_msfs_sdk", "_a", "import_msfs_sdk", "_a", "import_msfs_sdk", "_a", "_a", "_b", "import_msfs_sdk", "UnitsNavAngleSettingMode", "UnitsSpeedSettingMode", "UnitsDistanceSettingMode", "UnitsAltitudeSettingMode", "UnitsWeightSettingMode", "UnitsVolumeSettingMode", "UnitsTemperatureSettingMode", "UnitsTimeSettingMode", "value", "_a", "import_msfs_sdk", "EfbMode", "EfbSizeSettingMode", "OrientationSettingMode", "value", "_a", "import_msfs_sdk", "import_msfs_sdk", "import_msfs_sdk", "_a", "import_msfs_sdk", "_a", "_a", "_b", "import_msfs_sdk", "_a"]
}
